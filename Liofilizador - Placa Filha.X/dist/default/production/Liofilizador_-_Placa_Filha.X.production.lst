

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 11:48:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.10
    77                           ; Generated 31/07/2019 GMT
    78                           ; 
    79                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F886 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  008F                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  0105                     	;# 
   400  0107                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0185                     	;# 
   409  0187                     	;# 
   410  0188                     	;# 
   411  0189                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0089                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0095                     	;# 
   465  0096                     	;# 
   466  0097                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009A                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  0105                     	;# 
   476  0107                     	;# 
   477  0108                     	;# 
   478  0109                     	;# 
   479  010C                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0187                     	;# 
   486  0188                     	;# 
   487  0189                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  0105                     	;# 
   552  0107                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0185                     	;# 
   561  0187                     	;# 
   562  0188                     	;# 
   563  0189                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0009                     	;# 
   575  000A                     	;# 
   576  000B                     	;# 
   577  000C                     	;# 
   578  000D                     	;# 
   579  000E                     	;# 
   580  000E                     	;# 
   581  000F                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0015                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001B                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  0081                     	;# 
   601  0085                     	;# 
   602  0086                     	;# 
   603  0087                     	;# 
   604  0089                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  0105                     	;# 
   628  0107                     	;# 
   629  0108                     	;# 
   630  0109                     	;# 
   631  010C                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0185                     	;# 
   637  0187                     	;# 
   638  0188                     	;# 
   639  0189                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  0081                     	;# 
   677  0085                     	;# 
   678  0086                     	;# 
   679  0087                     	;# 
   680  0089                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0105                     	;# 
   704  0107                     	;# 
   705  0108                     	;# 
   706  0109                     	;# 
   707  010C                     	;# 
   708  010C                     	;# 
   709  010D                     	;# 
   710  010E                     	;# 
   711  010F                     	;# 
   712  0185                     	;# 
   713  0187                     	;# 
   714  0188                     	;# 
   715  0189                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  0000                     	;# 
   719  0001                     	;# 
   720  0002                     	;# 
   721  0003                     	;# 
   722  0004                     	;# 
   723  0005                     	;# 
   724  0006                     	;# 
   725  0007                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000E                     	;# 
   733  000F                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001D                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  0081                     	;# 
   753  0085                     	;# 
   754  0086                     	;# 
   755  0087                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  008F                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  0105                     	;# 
   780  0107                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0185                     	;# 
   789  0187                     	;# 
   790  0188                     	;# 
   791  0189                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  000E                     	;# 
   809  000F                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  001D                     	;# 
   826  001E                     	;# 
   827  001F                     	;# 
   828  0081                     	;# 
   829  0085                     	;# 
   830  0086                     	;# 
   831  0087                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0094                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  0105                     	;# 
   856  0107                     	;# 
   857  0108                     	;# 
   858  0109                     	;# 
   859  010C                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0185                     	;# 
   865  0187                     	;# 
   866  0188                     	;# 
   867  0189                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  000E                     	;# 
   885  000F                     	;# 
   886  0010                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0015                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  0081                     	;# 
   905  0085                     	;# 
   906  0086                     	;# 
   907  0087                     	;# 
   908  0089                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  008F                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  009F                     	;# 
   931  0105                     	;# 
   932  0107                     	;# 
   933  0108                     	;# 
   934  0109                     	;# 
   935  010C                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  010E                     	;# 
   939  010F                     	;# 
   940  0185                     	;# 
   941  0187                     	;# 
   942  0188                     	;# 
   943  0189                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0000                     	;# 
   947  0001                     	;# 
   948  0002                     	;# 
   949  0003                     	;# 
   950  0004                     	;# 
   951  0005                     	;# 
   952  0006                     	;# 
   953  0007                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  000E                     	;# 
   961  000F                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0013                     	;# 
   966  0014                     	;# 
   967  0015                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  001D                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  0081                     	;# 
   981  0085                     	;# 
   982  0086                     	;# 
   983  0087                     	;# 
   984  0089                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  009F                     	;# 
  1007  0105                     	;# 
  1008  0107                     	;# 
  1009  0108                     	;# 
  1010  0109                     	;# 
  1011  010C                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  010F                     	;# 
  1016  0185                     	;# 
  1017  0187                     	;# 
  1018  0188                     	;# 
  1019  0189                     	;# 
  1020  018C                     	;# 
  1021  018D                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0009                     	;# 
  1031  000A                     	;# 
  1032  000B                     	;# 
  1033  000C                     	;# 
  1034  000D                     	;# 
  1035  000E                     	;# 
  1036  000E                     	;# 
  1037  000F                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0013                     	;# 
  1042  0014                     	;# 
  1043  0015                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001D                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  0081                     	;# 
  1057  0085                     	;# 
  1058  0086                     	;# 
  1059  0087                     	;# 
  1060  0089                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008F                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009E                     	;# 
  1082  009F                     	;# 
  1083  0105                     	;# 
  1084  0107                     	;# 
  1085  0108                     	;# 
  1086  0109                     	;# 
  1087  010C                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  010E                     	;# 
  1091  010F                     	;# 
  1092  0185                     	;# 
  1093  0187                     	;# 
  1094  0188                     	;# 
  1095  0189                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  000E                     	;# 
  1113  000F                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001E                     	;# 
  1131  001F                     	;# 
  1132  0081                     	;# 
  1133  0085                     	;# 
  1134  0086                     	;# 
  1135  0087                     	;# 
  1136  0089                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  0105                     	;# 
  1160  0107                     	;# 
  1161  0108                     	;# 
  1162  0109                     	;# 
  1163  010C                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0187                     	;# 
  1170  0188                     	;# 
  1171  0189                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174                           
  1175                           	psect	strings
  1176  1000                     __pstrings:	
  1177  1000                     stringtab:	
  1178  1000                     __stringtab:	
  1179                           
  1180                           ;	String table - string pointers are 1 byte each
  1181  1000  1BFF               	btfsc	btemp+1,7
  1182  1001  280A               	ljmp	stringcode
  1183  1002  1383               	bcf	3,7
  1184  1003  187F               	btfsc	btemp+1,0
  1185  1004  1783               	bsf	3,7
  1186  1005  0800               	movf	0,w
  1187  1006  0A84               	incf	4,f
  1188  1007  1903               	skipnz
  1189  1008  0AFF               	incf	btemp+1,f
  1190  1009  0008               	return
  1191  100A                     stringcode:	
  1192  100A                     stringdir:	
  1193  100A  3010               	movlw	high stringdir
  1194  100B  008A               	movwf	10
  1195  100C  0804               	movf	4,w
  1196  100D  0A84               	incf	4,f
  1197  100E  0782               	addwf	2,f
  1198  100F                     __stringbase:	
  1199  100F  3400               	retlw	0
  1200  1010                     __end_of__stringtab:	
  1201  1010                     _PT100_TRANSLADA:	
  1202  1010  3466               	retlw	102
  1203  1011  3466               	retlw	102
  1204  1012  34A6               	retlw	166
  1205  1013  34BF               	retlw	191
  1206  1014                     __end_of_PT100_TRANSLADA:	
  1207  1014                     _PT100_CONSTANT:	
  1208  1014  3414               	retlw	20
  1209  1015  34AE               	retlw	174
  1210  1016  342B               	retlw	43
  1211  1017  34C1               	retlw	193
  1212  1018                     __end_of_PT100_CONSTANT:	
  1213  1018                     _RESISTOR_ROOM_TEMP:	
  1214                           
  1215                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1216  1018  3400               	retlw	0
  1217  1019  3440               	retlw	64
  1218  101A  341C               	retlw	28
  1219  101B  3446               	retlw	70
  1220  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1221  101C                     _ROOM_TEMP:	
  1222                           
  1223                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1224  101C  3466               	retlw	102
  1225  101D  3486               	retlw	134
  1226  101E  3496               	retlw	150
  1227  101F  3443               	retlw	67
  1228  1020                     __end_of_ROOM_TEMP:	
  1229  1020                     _MAX_ADC:	
  1230                           
  1231                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1232  1020  3400               	retlw	0
  1233  1021  34C0               	retlw	192
  1234  1022  347F               	retlw	127
  1235  1023  3444               	retlw	68
  1236  1024                     __end_of_MAX_ADC:	
  1237  1024                     log@coeff:	
  1238  1024  3400               	retlw	0
  1239  1025  3400               	retlw	0
  1240  1026  3400               	retlw	0
  1241  1027  3400               	retlw	0
  1242  1028  34C4               	retlw	196
  1243  1029  34FF               	retlw	255
  1244  102A  347F               	retlw	127
  1245  102B  343F               	retlw	63
  1246  102C  3480               	retlw	128
  1247  102D  34EF               	retlw	239
  1248  102E  34FF               	retlw	255
  1249  102F  34BE               	retlw	190
  1250  1030  3490               	retlw	144
  1251  1031  34E1               	retlw	225
  1252  1032  34A9               	retlw	169
  1253  1033  343E               	retlw	62
  1254  1034  34EC               	retlw	236
  1255  1035  3482               	retlw	130
  1256  1036  3476               	retlw	118
  1257  1037  34BE               	retlw	190
  1258  1038  3482               	retlw	130
  1259  1039  34AD               	retlw	173
  1260  103A  342B               	retlw	43
  1261  103B  343E               	retlw	62
  1262  103C  340E               	retlw	14
  1263  103D  343C               	retlw	60
  1264  103E  34C3               	retlw	195
  1265  103F  34BD               	retlw	189
  1266  1040  3487               	retlw	135
  1267  1041  34D1               	retlw	209
  1268  1042  3413               	retlw	19
  1269  1043  343D               	retlw	61
  1270  1044  3441               	retlw	65
  1271  1045  3478               	retlw	120
  1272  1046  34D3               	retlw	211
  1273  1047  34BB               	retlw	187
  1274  1048                     __end_oflog@coeff:	
  1275  1048                     _BETA:	
  1276                           
  1277                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1278  1048  3400               	retlw	0
  1279  1049  3460               	retlw	96
  1280  104A  3478               	retlw	120
  1281  104B  3445               	retlw	69
  1282  104C                     __end_of_BETA:	
  1283  104C                     _BALANCE_RESISTOR:	
  1284                           
  1285                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1286  104C  3400               	retlw	0
  1287  104D  3440               	retlw	64
  1288  104E  341C               	retlw	28
  1289  104F  3446               	retlw	70
  1290  1050                     __end_of_BALANCE_RESISTOR:	
  1291  0019                     _TXREG	set	25
  1292  0018                     _RCSTAbits	set	24
  1293  001A                     _RCREG	set	26
  1294  000E                     _TMR1L	set	14
  1295  000F                     _TMR1H	set	15
  1296  000C                     _PIR1bits	set	12
  1297  001E                     _ADRESH	set	30
  1298  001F                     _ADCON0bits	set	31
  1299  0005                     _PORTAbits	set	5
  1300  0007                     _PORTCbits	set	7
  1301  0010                     _T1CON	set	16
  1302  0006                     _PORTBbits	set	6
  1303  0009                     _PORTE	set	9
  1304  0007                     _PORTC	set	7
  1305  0005                     _PORTA	set	5
  1306  0013                     _SSPBUF	set	19
  1307  000B                     _INTCONbits	set	11
  1308  0014                     _SSPCON	set	20
  1309  0006                     _PORTB	set	6
  1310  00C4                     _CREN	set	196
  1311  0081                     _TMR1CS	set	129
  1312  0085                     _T1CKPS1	set	133
  1313  0084                     _T1CKPS0	set	132
  1314  008C                     _PIE1bits	set	140
  1315  0099                     _SPBRG	set	153
  1316  0098                     _TXSTAbits	set	152
  1317  009E                     _ADRESL	set	158
  1318  009F                     _ADCON1	set	159
  1319  009F                     _ADCON1bits	set	159
  1320  0095                     _WPUB	set	149
  1321  0081                     _OPTION_REGbits	set	129
  1322  0089                     _TRISE	set	137
  1323  0087                     _TRISC	set	135
  1324  0086                     _TRISB	set	134
  1325  0085                     _TRISA	set	133
  1326  008F                     _OSCCONbits	set	143
  1327  0091                     _SSPCON2bits	set	145
  1328  0094                     _SSPSTAT	set	148
  1329  0093                     _SSPADD	set	147
  1330  0091                     _SSPCON2	set	145
  1331  043F                     _TRISC7	set	1087
  1332  043E                     _TRISC6	set	1086
  1333  0460                     _TMR1IE	set	1120
  1334  043C                     _TRISC4	set	1084
  1335  043B                     _TRISC3	set	1083
  1336  010C                     _EEDATA	set	268
  1337  010D                     _EEADR	set	269
  1338  0187                     _BAUDCTLbits	set	391
  1339  018D                     _EECON2	set	397
  1340  018C                     _EECON1bits	set	396
  1341  0189                     _ANSELH	set	393
  1342  0188                     _ANSEL	set	392
  1343  1050                     STR_1:	
  1344  1050  3446               	retlw	70	;'F'
  1345  1051  3456               	retlw	86	;'V'
  1346  1052  3445               	retlw	69	;'E'
  1347  1053  3452               	retlw	82	;'R'
  1348  1054  3453               	retlw	83	;'S'
  1349  1055  3449               	retlw	73	;'I'
  1350  1056  344F               	retlw	79	;'O'
  1351  1057  344E               	retlw	78	;'N'
  1352  1058  3400               	retlw	0
  1353  1059                     STR_2:	
  1354  1059  344F               	retlw	79	;'O'
  1355  105A  344B               	retlw	75	;'K'
  1356  105B  3400               	retlw	0
  1357                           
  1358                           ; #config settings
  1359  0000                     
  1360                           	psect	cinit
  1361  0015                     start_initialization:	
  1362  0015                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30A0               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30DD               	movlw	low (__pbssBANK1+61)
  1377  001F  160A  158A  2274  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30CA               	movlw	low (__pbssBANK3+58)
  1384  0028  160A  158A  2274  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  2274   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:	
  1395  0033  0183               	clrf	3
  1396  0034  120A  118A  2ECC   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:	
  1400  0078                     _Delay_Led_Tmr0:	
  1401  0078                     	ds	2
  1402  007A                     _minuto:	
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:	
  1405  007B                     	ds	1
  1406  007C                     _hora:	
  1407  007C                     	ds	1
  1408  007D                     _segundo:	
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00A0                     __pbssBANK1:	
  1413  00A0                     _Tensao1:	
  1414  00A0                     	ds	4
  1415  00A4                     _Vaccum0:	
  1416  00A4                     	ds	4
  1417  00A8                     _errno:	
  1418  00A8                     	ds	2
  1419  00AA                     _tempodecorrido:	
  1420  00AA                     	ds	2
  1421  00AC                     _count:	
  1422  00AC                     	ds	2
  1423  00AE                     _header:	
  1424  00AE                     	ds	2
  1425  00B0                     _milisegundo:	
  1426  00B0                     	ds	2
  1427  00B2                     _Delay_Led_Usart:	
  1428  00B2                     	ds	2
  1429  00B4                     _Delay_Led_Memory:	
  1430  00B4                     	ds	2
  1431  00B6                     _pointer:	
  1432  00B6                     	ds	1
  1433  00B7                     _destino:	
  1434  00B7                     	ds	1
  1435  00B8                     _Board_Number:	
  1436  00B8                     	ds	1
  1437  00B9                     _canal:	
  1438  00B9                     	ds	1
  1439  00BA                     _statuspower:	
  1440  00BA                     	ds	1
  1441  00BB                     _generic_status:	
  1442  00BB                     	ds	1
  1443  00BC                     _buffer:	
  1444  00BC                     	ds	33
  1445                           
  1446                           	psect	bssBANK3
  1447  0190                     __pbssBANK3:	
  1448  0190                     _usart_protocol:	
  1449  0190                     	ds	58
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:	
  1453  0110                     _usart_buffer:	
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  1A74                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  1A74  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  1A75                     clrloop0:	
  1463  1A75  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  1A76  0A84               	incf	4,f	;increment pointer
  1465  1A77  0604               	xorwf	4,w	;XOR with final address
  1466  1A78  1903               	btfsc	3,2	;have we reached the end yet?
  1467  1A79  3400               	retlw	0	;all done for this memory range, return
  1468  1A7A  0604               	xorwf	4,w	;XOR again to restore value
  1469  1A7B  2A75               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00DD                     __pcstackBANK1:	
  1473  00DD                     Decodify_Command@dados:	
  1474  00DD                     MediaPlacaVaccum@Valor:	
  1475                           ; 2 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x0
  1479  00DD                     	ds	2
  1480  00DF                     Decodify_Command@add:	
  1481                           
  1482                           ; 1 bytes @ 0x2
  1483  00DF                     	ds	1
  1484  00E0                     Decodify_Command@sizedata:	
  1485                           
  1486                           ; 1 bytes @ 0x3
  1487  00E0                     	ds	1
  1488  00E1                     MediaPlacaVaccum@canal:	
  1489  00E1                     Decodify_Command@tempint:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0x4
  1494  00E1                     	ds	1
  1495  00E2                     MediaPlacaVaccum@Temp:	
  1496                           
  1497                           ; 4 bytes @ 0x5
  1498  00E2                     	ds	1
  1499  00E3                     Decodify_Command@OutPut:	
  1500                           
  1501                           ; 4 bytes @ 0x6
  1502  00E3                     	ds	3
  1503  00E6                     MediaPlacaVaccum@i:	
  1504                           
  1505                           ; 2 bytes @ 0x9
  1506  00E6                     	ds	1
  1507  00E7                     Decodify_Command@tempchar:	
  1508                           
  1509                           ; 1 bytes @ 0xA
  1510  00E7                     	ds	1
  1511  00E8                     Decodify_Command@add_24LCxxxx:	
  1512                           
  1513                           ; 4 bytes @ 0xB
  1514  00E8                     	ds	4
  1515                           
  1516                           	psect	cstackCOMMON
  1517  0070                     __pcstackCOMMON:	
  1518  0070                     ?_I2C_Master_Start:	
  1519  0070                     ?_I2C_Master_Stop:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_I2C_Master_RepeatedStart:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_ADC_init:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_MediaPlacaVaccum:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_Decodify_Command:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_USART_to_Protocol:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_Send_To_MB:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_Send_Reply_OK:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_EEPROM_Read_Byte:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_USART_putc:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_Package_Usart_is_for_me:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_I2C_Master_Wait:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_main:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_isr:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ??_isr:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564                           
  1565                           ; 1 bytes @ 0x0
  1566  0070                     	ds	6
  1567  0076                     isr@tempo:	
  1568                           
  1569                           ; 2 bytes @ 0x6
  1570  0076                     	ds	2
  1571                           
  1572                           	psect	cstackBANK0
  1573  0020                     __pcstackBANK0:	
  1574  0020                     ?___flge:	
  1575  0020                     ?_my_delay_ms_WDT:	
  1576                           ; 1 bit 
  1577                           
  1578  0020                     ??_ADC_init:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ?_USART_init:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     ??_USART_to_Protocol:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     ?_EEPROM_Write_Byte:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     ??_EEPROM_Read_Byte:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     ??_USART_putc:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     ?_my_delay_ms:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0020                     ??_Package_Usart_is_for_me:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0020                     ?_PROCULUS_Delay:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     ??_I2C_Master_Wait:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     ?_strlen:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0020                     ?_captura:	
  1612                           ; 2 bytes @ 0x0
  1613                           
  1614  0020                     ?__Umul8_16:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     ?___lwdiv:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     ?___lldiv:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     EEPROM_Write_Byte@dado:	
  1624                           ; 4 bytes @ 0x0
  1625                           
  1626  0020                     Package_Usart_is_for_me@retorno:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0020                     USART_putc@value:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0020                     __Umul8_16@multiplicand:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0020                     PROCULUS_Delay@tempo_ms:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0020                     ___lwdiv@divisor:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641  0020                     strlen@s:	
  1642                           ; 2 bytes @ 0x0
  1643                           
  1644  0020                     my_delay_ms@time:	
  1645                           ; 2 bytes @ 0x0
  1646                           
  1647  0020                     my_delay_ms_WDT@time:	
  1648                           ; 4 bytes @ 0x0
  1649                           
  1650  0020                     USART_init@baudrate:	
  1651                           ; 4 bytes @ 0x0
  1652                           
  1653  0020                     ___lldiv@divisor:	
  1654                           ; 4 bytes @ 0x0
  1655                           
  1656  0020                     ___flge@ff1:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659                           
  1660                           ; 4 bytes @ 0x0
  1661  0020                     	ds	1
  1662  0021                     ??_Send_To_MB:	
  1663  0021                     ?_USART_put_string:	
  1664                           ; 1 bytes @ 0x1
  1665                           
  1666  0021                     ??_EEPROM_Write_Byte:	
  1667                           ; 1 bytes @ 0x1
  1668                           
  1669  0021                     ?_USART_put_buffer:	
  1670                           ; 1 bytes @ 0x1
  1671                           
  1672  0021                     Send_To_MB@size:	
  1673                           ; 1 bytes @ 0x1
  1674                           
  1675  0021                     USART_put_buffer@size:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0021                     USART_put_string@vetor:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681                           
  1682                           ; 2 bytes @ 0x1
  1683  0021                     	ds	1
  1684  0022                     ??_USART_put_buffer:	
  1685  0022                     ??_strlen:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0022                     ??_captura:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0022                     ??_PROCULUS_Delay:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ??__Umul8_16:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     I2C_Master_Wait@tempo:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     EEPROM_Read_Byte@addr:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     USART_to_Protocol@i:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     ___lwdiv@dividend:	
  1707                           ; 2 bytes @ 0x2
  1708                           
  1709  0022                     strlen@cp:	
  1710                           ; 2 bytes @ 0x2
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0x2
  1714  0022                     	ds	1
  1715  0023                     ??_I2C_Master_Start:	
  1716  0023                     ?_I2C_Master_Write:	
  1717                           ; 1 bytes @ 0x3
  1718                           
  1719  0023                     ??_I2C_Master_Stop:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722  0023                     ??_I2C_Master_RepeatedStart:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725  0023                     ??_USART_put_string:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     ?_EEPROM_Read_String:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ?_I2C_Master_Read:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     ?_EEPROM_Read_Integer:	
  1735                           ; 2 bytes @ 0x3
  1736                           
  1737  0023                     EEPROM_Write_Byte@addr:	
  1738                           ; 2 bytes @ 0x3
  1739                           
  1740  0023                     EEPROM_Read_String@dado:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0023                     USART_put_buffer@vetor:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0023                     I2C_Master_Write@d:	
  1747                           ; 1 bytes @ 0x3
  1748                           
  1749  0023                     I2C_Master_Read@a:	
  1750                           ; 2 bytes @ 0x3
  1751                           
  1752  0023                     USART_put_string@ptr:	
  1753                           ; 2 bytes @ 0x3
  1754                           
  1755                           
  1756                           ; 2 bytes @ 0x3
  1757  0023                     	ds	1
  1758  0024                     ??_my_delay_ms_WDT:	
  1759  0024                     ??_USART_init:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0024                     ??_EEPROM_Read_String:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     ??_my_delay_ms:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     ??___lwdiv:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     EEPROM_Write_Byte@last_GIE:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     USART_to_Protocol@usart_protocol:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     USART_put_buffer@loop:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     PROCULUS_Delay@i:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     __Umul8_16@product:	
  1784                           ; 2 bytes @ 0x4
  1785                           
  1786  0024                     ___lldiv@dividend:	
  1787                           ; 2 bytes @ 0x4
  1788                           
  1789  0024                     ___flge@ff2:	
  1790                           ; 4 bytes @ 0x4
  1791                           
  1792                           
  1793                           ; 4 bytes @ 0x4
  1794  0024                     	ds	1
  1795  0025                     ??_I2C_Master_Write:	
  1796  0025                     ??_I2C_Master_Read:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799  0025                     ??_EEPROM_Read_Integer:	
  1800                           ; 1 bytes @ 0x5
  1801                           
  1802  0025                     ?_EEPROM_Write_Integer:	
  1803                           ; 1 bytes @ 0x5
  1804                           
  1805  0025                     ??_Send_Reply_OK:	
  1806                           ; 1 bytes @ 0x5
  1807                           
  1808  0025                     ?_EEPROM_Write_String:	
  1809                           ; 1 bytes @ 0x5
  1810                           
  1811  0025                     EEPROM_Write_String@dado:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     EEPROM_Read_String@addr:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     USART_put_buffer@ptr:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     ___lwdiv@counter:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823  0025                     EEPROM_Write_Integer@dado:	
  1824                           ; 1 bytes @ 0x5
  1825                           
  1826                           
  1827                           ; 2 bytes @ 0x5
  1828  0025                     	ds	1
  1829  0026                     ??_EEPROM_Write_String:	
  1830  0026                     EEPROM_Read_Integer@addr:	
  1831                           ; 1 bytes @ 0x6
  1832                           
  1833  0026                     EEPROM_Read_String@c:	
  1834                           ; 1 bytes @ 0x6
  1835                           
  1836  0026                     USART_init@i:	
  1837                           ; 1 bytes @ 0x6
  1838                           
  1839  0026                     ___lwdiv@quotient:	
  1840                           ; 1 bytes @ 0x6
  1841                           
  1842  0026                     __Umul8_16@word_mpld:	
  1843                           ; 2 bytes @ 0x6
  1844                           
  1845  0026                     my_delay_ms@i:	
  1846                           ; 2 bytes @ 0x6
  1847                           
  1848  0026                     my_delay_ms_WDT@i:	
  1849                           ; 4 bytes @ 0x6
  1850                           
  1851                           
  1852                           ; 4 bytes @ 0x6
  1853  0026                     	ds	1
  1854  0027                     ??_EEPROM_Write_Integer:	
  1855  0027                     EEPROM_Read_Integer@ptr:	
  1856                           ; 1 bytes @ 0x7
  1857                           
  1858  0027                     EEPROM_Write_String@addr:	
  1859                           ; 1 bytes @ 0x7
  1860                           
  1861  0027                     I2C_Master_Read@temp:	
  1862                           ; 1 bytes @ 0x7
  1863                           
  1864                           
  1865                           ; 2 bytes @ 0x7
  1866  0027                     	ds	1
  1867  0028                     ??___lldiv:	
  1868  0028                     ??___flge:	
  1869                           ; 1 bytes @ 0x8
  1870                           
  1871  0028                     __Umul8_16@multiplier:	
  1872                           ; 1 bytes @ 0x8
  1873                           
  1874  0028                     EEPROM_Read_Integer@result:	
  1875                           ; 1 bytes @ 0x8
  1876                           
  1877                           
  1878                           ; 2 bytes @ 0x8
  1879  0028                     	ds	1
  1880  0029                     ?_EEPROM_24C1025_Read_Str:	
  1881  0029                     ?___flmul:	
  1882                           ; 1 bytes @ 0x9
  1883                           
  1884  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1885                           ; 4 bytes @ 0x9
  1886                           
  1887  0029                     ___lldiv@quotient:	
  1888                           ; 4 bytes @ 0x9
  1889                           
  1890  0029                     ___flmul@b:	
  1891                           ; 4 bytes @ 0x9
  1892                           
  1893                           
  1894                           ; 4 bytes @ 0x9
  1895  0029                     	ds	1
  1896  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1897  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1898                           ; 1 bytes @ 0xA
  1899                           
  1900  002A                     ?_EEPROM_24C1025_Write_Str:	
  1901                           ; 1 bytes @ 0xA
  1902                           
  1903  002A                     ?_ADC_Max_10Bits:	
  1904                           ; 1 bytes @ 0xA
  1905                           
  1906  002A                     EEPROM_Write_Integer@ptr:	
  1907                           ; 2 bytes @ 0xA
  1908                           
  1909  002A                     EEPROM_Read_Integer@i:	
  1910                           ; 1 bytes @ 0xA
  1911                           
  1912  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1913                           ; 1 bytes @ 0xA
  1914                           
  1915  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1916                           ; 4 bytes @ 0xA
  1917                           
  1918  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1919                           ; 4 bytes @ 0xA
  1920                           
  1921                           
  1922                           ; 4 bytes @ 0xA
  1923  002A                     	ds	1
  1924  002B                     EEPROM_Write_Integer@addr:	
  1925                           
  1926                           ; 1 bytes @ 0xB
  1927  002B                     	ds	1
  1928  002C                     ??_ADC_Max_10Bits:	
  1929  002C                     EEPROM_Write_Integer@i:	
  1930                           ; 1 bytes @ 0xC
  1931                           
  1932                           
  1933                           ; 1 bytes @ 0xC
  1934  002C                     	ds	1
  1935  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1936  002D                     ADC_Max_10Bits@canal:	
  1937                           ; 1 bytes @ 0xD
  1938                           
  1939  002D                     ___lldiv@counter:	
  1940                           ; 1 bytes @ 0xD
  1941                           
  1942  002D                     ___flmul@a:	
  1943                           ; 1 bytes @ 0xD
  1944                           
  1945                           
  1946                           ; 4 bytes @ 0xD
  1947  002D                     	ds	1
  1948  002E                     ??_EEPROM_24C1025_Read_Str:	
  1949  002E                     ?_I2C_Master_Init:	
  1950                           ; 1 bytes @ 0xE
  1951                           
  1952  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1953                           ; 1 bytes @ 0xE
  1954                           
  1955  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1956                           ; 1 bytes @ 0xE
  1957                           
  1958  002E                     EEPROM_24C1025_Write_Str@data:	
  1959                           ; 1 bytes @ 0xE
  1960                           
  1961  002E                     ADC_Max_10Bits@Temp:	
  1962                           ; 1 bytes @ 0xE
  1963                           
  1964  002E                     I2C_Master_Init@c:	
  1965                           ; 2 bytes @ 0xE
  1966                           
  1967                           
  1968                           ; 4 bytes @ 0xE
  1969  002E                     	ds	1
  1970  002F                     ??_EEPROM_24C1025_Write_Str:	
  1971  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1972                           ; 1 bytes @ 0xF
  1973                           
  1974  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1975                           ; 1 bytes @ 0xF
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0xF
  1979  002F                     	ds	1
  1980  0030                     ??_EEPROM_24C1025_Read_Buffer:	
  1981  0030                     EEPROM_24C1025_Read_Str@cnt:	
  1982                           ; 1 bytes @ 0x10
  1983                           
  1984  0030                     ADC_Max_10Bits@value:	
  1985                           ; 1 bytes @ 0x10
  1986                           
  1987                           
  1988                           ; 2 bytes @ 0x10
  1989  0030                     	ds	1
  1990  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  1991  0031                     ??___flmul:	
  1992                           ; 1 bytes @ 0x11
  1993                           
  1994  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  1995                           ; 1 bytes @ 0x11
  1996                           
  1997  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  1998                           ; 1 bytes @ 0x11
  1999                           
  2000                           
  2001                           ; 1 bytes @ 0x11
  2002  0031                     	ds	1
  2003  0032                     ??_I2C_Master_Init:	
  2004  0032                     EEPROM_24C1025_Write_Str@range:	
  2005                           ; 1 bytes @ 0x12
  2006                           
  2007  0032                     EEPROM_24C1025_Read_Str@range:	
  2008                           ; 1 bytes @ 0x12
  2009                           
  2010  0032                     ADC_Max_10Bits@i:	
  2011                           ; 1 bytes @ 0x12
  2012                           
  2013                           
  2014                           ; 1 bytes @ 0x12
  2015  0032                     	ds	1
  2016  0033                     ?___xxtofl:	
  2017  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2018                           ; 4 bytes @ 0x13
  2019                           
  2020  0033                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2021                           ; 1 bytes @ 0x13
  2022                           
  2023  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2024                           ; 1 bytes @ 0x13
  2025                           
  2026  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2027                           ; 1 bytes @ 0x13
  2028                           
  2029  0033                     ___xxtofl@val:	
  2030                           ; 1 bytes @ 0x13
  2031                           
  2032                           
  2033                           ; 4 bytes @ 0x13
  2034  0033                     	ds	1
  2035  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2036  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2037                           ; 1 bytes @ 0x14
  2038                           
  2039                           
  2040                           ; 1 bytes @ 0x14
  2041  0034                     	ds	1
  2042  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2043  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2044                           ; 1 bytes @ 0x15
  2045                           
  2046                           
  2047                           ; 1 bytes @ 0x15
  2048  0035                     	ds	1
  2049  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2050  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2051                           ; 1 bytes @ 0x16
  2052                           
  2053  0036                     ___flmul@sign:	
  2054                           ; 1 bytes @ 0x16
  2055                           
  2056                           
  2057                           ; 1 bytes @ 0x16
  2058  0036                     	ds	1
  2059  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2060  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2061                           ; 1 bytes @ 0x17
  2062                           
  2063  0037                     ??___xxtofl:	
  2064                           ; 1 bytes @ 0x17
  2065                           
  2066  0037                     ?_EEPROM_24C1025_Read_Int:	
  2067                           ; 1 bytes @ 0x17
  2068                           
  2069  0037                     ___flmul@aexp:	
  2070                           ; 2 bytes @ 0x17
  2071                           
  2072  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2073                           ; 1 bytes @ 0x17
  2074                           
  2075  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2076                           ; 4 bytes @ 0x17
  2077                           
  2078  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2079                           ; 4 bytes @ 0x17
  2080                           
  2081                           
  2082                           ; 4 bytes @ 0x17
  2083  0037                     	ds	1
  2084  0038                     ___flmul@bexp:	
  2085                           
  2086                           ; 1 bytes @ 0x18
  2087  0038                     	ds	1
  2088  0039                     ___flmul@grs:	
  2089                           
  2090                           ; 4 bytes @ 0x19
  2091  0039                     	ds	2
  2092  003B                     ??_EEPROM_24C1025_Read_Byte:	
  2093  003B                     ??_EEPROM_24C1025_Read_Int:	
  2094                           ; 1 bytes @ 0x1B
  2095                           
  2096  003B                     EEPROM_24C1025_Write_Byte@data:	
  2097                           ; 1 bytes @ 0x1B
  2098                           
  2099  003B                     ___xxtofl@sign:	
  2100                           ; 1 bytes @ 0x1B
  2101                           
  2102                           
  2103                           ; 1 bytes @ 0x1B
  2104  003B                     	ds	1
  2105  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2106  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2107                           ; 1 bytes @ 0x1C
  2108                           
  2109  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2110                           ; 1 bytes @ 0x1C
  2111                           
  2112  003C                     ___xxtofl@exp:	
  2113                           ; 1 bytes @ 0x1C
  2114                           
  2115                           
  2116                           ; 1 bytes @ 0x1C
  2117  003C                     	ds	1
  2118  003D                     EEPROM_24C1025_Read_Byte@data:	
  2119  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2120                           ; 1 bytes @ 0x1D
  2121                           
  2122  003D                     ___flmul@prod:	
  2123                           ; 1 bytes @ 0x1D
  2124                           
  2125  003D                     ___xxtofl@arg:	
  2126                           ; 4 bytes @ 0x1D
  2127                           
  2128                           
  2129                           ; 4 bytes @ 0x1D
  2130  003D                     	ds	1
  2131  003E                     EEPROM_24C1025_Read_Int@data:	
  2132                           
  2133                           ; 2 bytes @ 0x1E
  2134  003E                     	ds	3
  2135  0041                     ?_ADC_Media_10bits:	
  2136  0041                     ?___fldiv:	
  2137                           ; 4 bytes @ 0x21
  2138                           
  2139  0041                     ___flmul@temp:	
  2140                           ; 4 bytes @ 0x21
  2141                           
  2142  0041                     ___fldiv@a:	
  2143                           ; 2 bytes @ 0x21
  2144                           
  2145                           
  2146                           ; 4 bytes @ 0x21
  2147  0041                     	ds	2
  2148  0043                     ?___fltol:	
  2149  0043                     ___fltol@f1:	
  2150                           ; 4 bytes @ 0x23
  2151                           
  2152                           
  2153                           ; 4 bytes @ 0x23
  2154  0043                     	ds	2
  2155  0045                     ??_ADC_Media_10bits:	
  2156  0045                     ___fldiv@b:	
  2157                           ; 1 bytes @ 0x25
  2158                           
  2159                           
  2160                           ; 4 bytes @ 0x25
  2161  0045                     	ds	1
  2162  0046                     ADC_Media_10bits@canal:	
  2163                           
  2164                           ; 1 bytes @ 0x26
  2165  0046                     	ds	1
  2166  0047                     ??___fltol:	
  2167  0047                     ADC_Media_10bits@value:	
  2168                           ; 1 bytes @ 0x27
  2169                           
  2170                           
  2171                           ; 2 bytes @ 0x27
  2172  0047                     	ds	2
  2173  0049                     ??___fldiv:	
  2174  0049                     ADC_Media_10bits@i:	
  2175                           ; 1 bytes @ 0x29
  2176                           
  2177                           
  2178                           ; 1 bytes @ 0x29
  2179  0049                     	ds	1
  2180  004A                     ?___fladd:	
  2181  004A                     ___fladd@b:	
  2182                           ; 4 bytes @ 0x2A
  2183                           
  2184                           
  2185                           ; 4 bytes @ 0x2A
  2186  004A                     	ds	2
  2187  004C                     ___fltol@sign1:	
  2188                           
  2189                           ; 1 bytes @ 0x2C
  2190  004C                     	ds	1
  2191  004D                     ___fltol@exp1:	
  2192                           
  2193                           ; 1 bytes @ 0x2D
  2194  004D                     	ds	1
  2195  004E                     ?_USART_put_int:	
  2196  004E                     ?_EEPROM_24C1025_Write_Int:	
  2197                           ; 1 bytes @ 0x2E
  2198                           
  2199  004E                     USART_put_int@value:	
  2200                           ; 1 bytes @ 0x2E
  2201                           
  2202  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2203                           ; 2 bytes @ 0x2E
  2204                           
  2205  004E                     ___fladd@a:	
  2206                           ; 4 bytes @ 0x2E
  2207                           
  2208  004E                     ___fldiv@rem:	
  2209                           ; 4 bytes @ 0x2E
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0x2E
  2213  004E                     	ds	2
  2214  0050                     ??_USART_put_int:	
  2215                           
  2216                           ; 1 bytes @ 0x30
  2217  0050                     	ds	1
  2218  0051                     USART_put_int@dado:	
  2219                           
  2220                           ; 1 bytes @ 0x31
  2221  0051                     	ds	1
  2222  0052                     ?_PROCULUS_Control_Register_Write:	
  2223  0052                     ?_PROCULUS_VP_Write:	
  2224                           ; 1 bytes @ 0x32
  2225                           
  2226  0052                     ??___fladd:	
  2227                           ; 1 bytes @ 0x32
  2228                           
  2229  0052                     PROCULUS_Control_Register_Write@size:	
  2230                           ; 1 bytes @ 0x32
  2231                           
  2232  0052                     ___fldiv@sign:	
  2233                           ; 1 bytes @ 0x32
  2234                           
  2235  0052                     EEPROM_24C1025_Write_Int@data:	
  2236                           ; 1 bytes @ 0x32
  2237                           
  2238  0052                     PROCULUS_VP_Write@vp:	
  2239                           ; 2 bytes @ 0x32
  2240                           
  2241                           
  2242                           ; 2 bytes @ 0x32
  2243  0052                     	ds	1
  2244  0053                     ??_PROCULUS_Control_Register_Write:	
  2245  0053                     ___fldiv@new_exp:	
  2246                           ; 1 bytes @ 0x33
  2247                           
  2248                           
  2249                           ; 2 bytes @ 0x33
  2250  0053                     	ds	1
  2251  0054                     ??_EEPROM_24C1025_Write_Int:	
  2252  0054                     PROCULUS_Control_Register_Write@vetor:	
  2253                           ; 1 bytes @ 0x34
  2254                           
  2255  0054                     PROCULUS_VP_Write@vetor:	
  2256                           ; 1 bytes @ 0x34
  2257                           
  2258                           
  2259                           ; 2 bytes @ 0x34
  2260  0054                     	ds	1
  2261  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2262  0055                     PROCULUS_Control_Register_Write@i:	
  2263                           ; 1 bytes @ 0x35
  2264                           
  2265  0055                     ___fldiv@grs:	
  2266                           ; 1 bytes @ 0x35
  2267                           
  2268                           
  2269                           ; 4 bytes @ 0x35
  2270  0055                     	ds	1
  2271  0056                     ?_PROCULUS_Show_Screen:	
  2272  0056                     ?_PROCULUS_Buzzer:	
  2273                           ; 1 bytes @ 0x36
  2274                           
  2275  0056                     PROCULUS_VP_Write@size:	
  2276                           ; 1 bytes @ 0x36
  2277                           
  2278  0056                     EEPROM_24C1025_Write_Int@local:	
  2279                           ; 1 bytes @ 0x36
  2280                           
  2281  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2282                           ; 2 bytes @ 0x36
  2283                           
  2284  0056                     PROCULUS_Show_Screen@screen:	
  2285                           ; 2 bytes @ 0x36
  2286                           
  2287                           
  2288                           ; 2 bytes @ 0x36
  2289  0056                     	ds	1
  2290  0057                     ??_PROCULUS_VP_Write:	
  2291                           
  2292                           ; 1 bytes @ 0x37
  2293  0057                     	ds	1
  2294  0058                     ?_Save_Log:	
  2295  0058                     ??_PROCULUS_Show_Screen:	
  2296                           ; 1 bytes @ 0x38
  2297                           
  2298  0058                     ??_PROCULUS_Buzzer:	
  2299                           ; 1 bytes @ 0x38
  2300                           
  2301  0058                     ?_EEPROM_24C1025_Fill_All:	
  2302                           ; 1 bytes @ 0x38
  2303                           
  2304  0058                     EEPROM_24C1025_Fill_All@value:	
  2305                           ; 1 bytes @ 0x38
  2306                           
  2307  0058                     Save_Log@add_datalog:	
  2308                           ; 2 bytes @ 0x38
  2309                           
  2310                           
  2311                           ; 4 bytes @ 0x38
  2312  0058                     	ds	1
  2313  0059                     PROCULUS_VP_Write@i:	
  2314  0059                     ___fldiv@bexp:	
  2315                           ; 1 bytes @ 0x39
  2316                           
  2317  0059                     PROCULUS_Buzzer@vetor:	
  2318                           ; 1 bytes @ 0x39
  2319                           
  2320  0059                     PROCULUS_Show_Screen@vetor:	
  2321                           ; 2 bytes @ 0x39
  2322                           
  2323                           
  2324                           ; 3 bytes @ 0x39
  2325  0059                     	ds	1
  2326  005A                     ?_PROCULUS_VP_Write_String:	
  2327  005A                     ??_EEPROM_24C1025_Fill_All:	
  2328                           ; 1 bytes @ 0x3A
  2329                           
  2330  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2331                           ; 1 bytes @ 0x3A
  2332                           
  2333  005A                     ___fladd@signs:	
  2334                           ; 1 bytes @ 0x3A
  2335                           
  2336  005A                     ___fldiv@aexp:	
  2337                           ; 1 bytes @ 0x3A
  2338                           
  2339  005A                     PROCULUS_VP_Write_String@vp:	
  2340                           ; 1 bytes @ 0x3A
  2341                           
  2342                           
  2343                           ; 2 bytes @ 0x3A
  2344  005A                     	ds	1
  2345  005B                     ___fladd@aexp:	
  2346  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2347                           ; 1 bytes @ 0x3B
  2348                           
  2349                           
  2350                           ; 4 bytes @ 0x3B
  2351  005B                     	ds	1
  2352  005C                     ??_Save_Log:	
  2353  005C                     PROCULUS_VP_Write_String@text:	
  2354                           ; 1 bytes @ 0x3C
  2355                           
  2356  005C                     ___fladd@bexp:	
  2357                           ; 1 bytes @ 0x3C
  2358                           
  2359                           
  2360                           ; 1 bytes @ 0x3C
  2361  005C                     	ds	1
  2362  005D                     ??_PROCULUS_VP_Write_String:	
  2363  005D                     ___fladd@grs:	
  2364                           ; 1 bytes @ 0x3D
  2365                           
  2366                           
  2367                           ; 1 bytes @ 0x3D
  2368  005D                     	ds	1
  2369  005E                     ?___flsub:	
  2370  005E                     ___flsub@a:	
  2371                           ; 4 bytes @ 0x3E
  2372                           
  2373                           
  2374                           ; 4 bytes @ 0x3E
  2375  005E                     	ds	1
  2376  005F                     ??_Decodify_Command:	
  2377                           
  2378                           ; 1 bytes @ 0x3F
  2379  005F                     	ds	3
  2380  0062                     ___flsub@b:	
  2381                           
  2382                           ; 4 bytes @ 0x42
  2383  0062                     	ds	4
  2384  0066                     ??_MediaPlacaVaccum:	
  2385  0066                     ??___flsub:	
  2386                           ; 1 bytes @ 0x46
  2387                           
  2388                           
  2389                           ; 1 bytes @ 0x46
  2390  0066                     	ds	4
  2391  006A                     ??_main:	
  2392                           
  2393                           ; 1 bytes @ 0x4A
  2394  006A                     	ds	3
  2395  006D                     main@reset:	
  2396                           
  2397                           ; 2 bytes @ 0x4D
  2398  006D                     	ds	2
  2399                           
  2400                           	psect	maintext
  2401  06CC                     __pmaintext:	
  2402 ;;
  2403 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2404 ;;
  2405 ;; *************** function _main *****************
  2406 ;; Defined at:
  2407 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  reset           2   77[BANK0 ] unsigned int 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : B00/0
  2418 ;;		On exit  : 300/100
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       0       0       0       0
  2422 ;;      Locals:         0       2       0       0       0
  2423 ;;      Temps:          0       3       0       0       0
  2424 ;;      Totals:         0       5       0       0       0
  2425 ;;Total ram usage:        5 bytes
  2426 ;; Hardware stack levels required when called:    7
  2427 ;; This function calls:
  2428 ;;		_ADC_init
  2429 ;;		_Decodify_Command
  2430 ;;		_EEPROM_Read_Integer
  2431 ;;		_EEPROM_Write_Integer
  2432 ;;		_I2C_Master_Init
  2433 ;;		_MediaPlacaVaccum
  2434 ;;		_USART_init
  2435 ;;		_my_delay_ms_WDT
  2436 ;; This function is called by:
  2437 ;;		Startup code after reset
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           
  2442                           ;psect for function _main
  2443  06CC                     _main:	
  2444                           
  2445                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2449  06CC  3002               	movlw	2
  2450  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  2451  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  2452  06CF  00EC               	movwf	??_main+2
  2453  06D0  3004               	movlw	4
  2454  06D1  00EB               	movwf	??_main+1
  2455  06D2  30B9               	movlw	185
  2456  06D3  00EA               	movwf	??_main
  2457  06D4                     u7707:	
  2458  06D4  0BEA               	decfsz	??_main,f
  2459  06D5  2ED4               	goto	u7707
  2460  06D6  0BEB               	decfsz	??_main+1,f
  2461  06D7  2ED4               	goto	u7707
  2462  06D8  0BEC               	decfsz	??_main+2,f
  2463  06D9  2ED4               	goto	u7707
  2464  06DA  2EDB               	nop2
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2467  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  2468  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2469  06DD  160F               	bsf	15,4	;volatile
  2470                           
  2471                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2472  06DE  168F               	bsf	15,5	;volatile
  2473                           
  2474                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2475  06DF  170F               	bsf	15,6	;volatile
  2476                           
  2477                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2478  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2479  06E1  0185               	clrf	5	;volatile
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2482  06E2  0186               	clrf	6	;volatile
  2483                           
  2484                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2485  06E3  0187               	clrf	7	;volatile
  2486                           
  2487                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2488  06E4  0189               	clrf	9	;volatile
  2489                           
  2490                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2491  06E5  30EF               	movlw	239
  2492  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  2493  06E7  0085               	movwf	5	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2496  06E8  300F               	movlw	15
  2497  06E9  0086               	movwf	6	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2500  06EA  30F0               	movlw	240
  2501  06EB  0087               	movwf	7	;volatile
  2502                           
  2503                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2504  06EC  30FF               	movlw	255
  2505  06ED  0089               	movwf	9	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2508  06EE  3011               	movlw	17
  2509  06EF  1703               	bsf	3,6	;RP1=1, select bank3
  2510  06F0  0088               	movwf	8	;volatile
  2511                           
  2512                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2513  06F1  0189               	clrf	9	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2516  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  2517  06F3  1381               	bcf	1,7	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2520  06F4  300F               	movlw	15
  2521  06F5  0095               	movwf	21	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2524  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2525  06F7  1786               	bsf	6,7	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2528  06F8  1706               	bsf	6,6	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2531  06F9  1686               	bsf	6,5	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2534  06FA  3000               	movlw	0
  2535  06FB  00A3               	movwf	my_delay_ms_WDT@time+3
  2536  06FC  3000               	movlw	0
  2537  06FD  00A2               	movwf	my_delay_ms_WDT@time+2
  2538  06FE  3003               	movlw	3
  2539  06FF  00A1               	movwf	my_delay_ms_WDT@time+1
  2540  0700  30E8               	movlw	232
  2541  0701  00A0               	movwf	my_delay_ms_WDT@time
  2542  0702  160A  158A  2602  120A  118A  	fcall	_my_delay_ms_WDT
  2543                           
  2544                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2545  0707  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0708  1281               	bcf	1,5	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2549  0709  1581               	bsf	1,3	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2552  070A  1401               	bsf	1,0	;volatile
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2555  070B  1481               	bsf	1,1	;volatile
  2556                           
  2557                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2558  070C  1501               	bsf	1,2	;volatile
  2559                           
  2560                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2561  070D  128B               	bcf	11,5	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2564  070E  120B               	bcf	11,4	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2567  070F  178B               	bsf	11,7	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2570  0710  170B               	bsf	11,6	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2573  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0712  1610               	bsf	16,4	;volatile
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2577  0713  1690               	bsf	16,5	;volatile
  2578                           
  2579                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2580  0714  1090               	bcf	16,1	;volatile
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2583  0715  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0716  140C               	bsf	12,0	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2587  0717  3001               	movlw	1
  2588  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0719  0090               	movwf	16	;volatile
  2590  071A  0064               	clrwdt	;# 
  2591                           
  2592                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2593  071B  160A  158A  2298  120A  118A  	fcall	_ADC_init
  2594                           
  2595                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2596  0720  3000               	movlw	0
  2597  0721  00B1               	movwf	I2C_Master_Init@c+3
  2598  0722  3001               	movlw	1
  2599  0723  00B0               	movwf	I2C_Master_Init@c+2
  2600  0724  3086               	movlw	134
  2601  0725  00AF               	movwf	I2C_Master_Init@c+1
  2602  0726  30A0               	movlw	160
  2603  0727  00AE               	movwf	I2C_Master_Init@c
  2604  0728  160A  158A  2500  120A  118A  	fcall	_I2C_Master_Init
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2607  072D  3000               	movlw	0
  2608  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2609  072F  00A3               	movwf	USART_init@baudrate+3
  2610  0730  3001               	movlw	1
  2611  0731  00A2               	movwf	USART_init@baudrate+2
  2612  0732  30C2               	movlw	194
  2613  0733  00A1               	movwf	USART_init@baudrate+1
  2614  0734  3000               	movlw	0
  2615  0735  00A0               	movwf	USART_init@baudrate
  2616  0736  160A  158A  26EA  120A  118A  	fcall	_USART_init
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2619  073B  3010               	movlw	16
  2620  073C  160A  158A  24AB  120A  118A  	fcall	_EEPROM_Read_Integer
  2621  0741  0824               	movf	?_EEPROM_Read_Integer+1,w
  2622  0742  00EE               	movwf	main@reset+1
  2623  0743  0823               	movf	?_EEPROM_Read_Integer,w
  2624  0744  00ED               	movwf	main@reset
  2625                           
  2626                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2627  0745  0A6D               	incf	main@reset,w
  2628  0746  1D03               	skipz
  2629  0747  2F54               	goto	l7200
  2630  0748  0A6E               	incf	main@reset+1,w
  2631  0749  1D03               	btfss	3,2
  2632  074A  2F54               	goto	l7200
  2633  074B  3000               	movlw	0
  2634  074C  00A5               	movwf	EEPROM_Write_Integer@dado
  2635  074D  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2636  074E  3010               	movlw	16
  2637  074F  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  2638  0754                     l7200:	
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2641  0754  3001               	movlw	1
  2642  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0757  07ED               	addwf	main@reset,f
  2645  0758  1803               	skipnc
  2646  0759  0AEE               	incf	main@reset+1,f
  2647  075A  3000               	movlw	0
  2648  075B  07EE               	addwf	main@reset+1,f
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2651  075C  086E               	movf	main@reset+1,w
  2652  075D  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2653  075E  086D               	movf	main@reset,w
  2654  075F  00A5               	movwf	EEPROM_Write_Integer@dado
  2655  0760  3010               	movlw	16
  2656  0761  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2659  0766  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2660  0767  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2663  0768  1683               	bsf	3,5	;RP0=1, select bank1
  2664  0769  1303               	bcf	3,6	;RP1=0, select bank1
  2665  076A  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2666  076B  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2669  076C  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2670  076D  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2671                           
  2672                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2673  076E  01FD               	clrf	_segundo	;volatile
  2674                           
  2675                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2676  076F  01FC               	clrf	_hora	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2679  0770  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0771  1007               	bcf	7,0	;volatile
  2681                           
  2682                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2683  0772  1087               	bcf	7,1	;volatile
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2686  0773  1105               	bcf	5,2	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2689  0774  1185               	bcf	5,3	;volatile
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2692  0775  0906               	comf	6,w	;volatile
  2693  0776  390F               	andlw	15
  2694  0777  00EA               	movwf	??_main
  2695  0778  086A               	movf	??_main,w
  2696  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2697  077A  00B8               	movwf	_Board_Number^(0+128)
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2700  077B  01B9               	clrf	_canal^(0+128)
  2701  077C  0AB9               	incf	_canal^(0+128),f
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2704  077D  113A               	bcf	_statuspower^(0+128),2
  2705  077E                     l7226:	
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2708  077E  17BB               	bsf	_generic_status^(0+128),7
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2711  077F  3001               	movlw	1
  2712  0780  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0781  00EA               	movwf	??_main
  2714  0782  086A               	movf	??_main,w
  2715  0783  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0784  07B9               	addwf	_canal^(0+128),f
  2717  0785  3002               	movlw	2
  2718  0786  0639               	xorwf	_canal^(0+128),w
  2719  0787  1903               	btfsc	3,2
  2720  0788  01B9               	clrf	_canal^(0+128)
  2721                           
  2722                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2723  0789  0839               	movf	_canal^(0+128),w
  2724  078A  120A  158A  2569  120A  118A  	fcall	_MediaPlacaVaccum
  2725                           
  2726                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2727  078F  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0790  1C3B               	btfss	_generic_status^(0+128),0
  2729  0791  2F7E               	goto	l7226
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2732  0792  1283               	bcf	3,5	;RP0=0, select bank2
  2733  0793  1703               	bsf	3,6	;RP1=1, select bank2
  2734  0794  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2735  0795  1683               	bsf	3,5	;RP0=1, select bank1
  2736  0796  1303               	bcf	3,6	;RP1=0, select bank1
  2737  0797  00AF               	movwf	(_header+1)^(0+128)
  2738  0798  1283               	bcf	3,5	;RP0=0, select bank2
  2739  0799  1703               	bsf	3,6	;RP1=1, select bank2
  2740  079A  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2741  079B  1683               	bsf	3,5	;RP0=1, select bank1
  2742  079C  1303               	bcf	3,6	;RP1=0, select bank1
  2743  079D  00AE               	movwf	_header^(0+128)
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2746  079E  30BB               	movlw	187
  2747  079F  062E               	xorwf	_header^(0+128),w
  2748  07A0  30AA               	movlw	170
  2749  07A1  1903               	skipnz
  2750  07A2  062F               	xorwf	(_header+1)^(0+128),w
  2751  07A3  1D03               	btfss	3,2
  2752  07A4  2F7E               	goto	l7226
  2753                           
  2754                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2755  07A5  1283               	bcf	3,5	;RP0=0, select bank2
  2756  07A6  1703               	bsf	3,6	;RP1=1, select bank2
  2757  07A7  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2758  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2759  07A9  00EA               	movwf	??_main
  2760  07AA  086A               	movf	??_main,w
  2761  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  2762  07AC  00B7               	movwf	_destino^(0+128)
  2763                           
  2764                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2765  07AD  0837               	movf	_destino^(0+128),w
  2766  07AE  0638               	xorwf	_Board_Number^(0+128),w
  2767  07AF  1D03               	btfss	3,2
  2768  07B0  0A37               	incf	_destino^(0+128),w
  2769  07B1  1D03               	btfss	3,2
  2770  07B2  2F7E               	goto	l7226
  2771                           
  2772                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2773  07B3  3014               	movlw	20
  2774  07B4  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2775  07B5  3000               	movlw	0
  2776  07B6  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2779  07B7  120A  118A  2037  120A  118A  	fcall	_Decodify_Command
  2780                           
  2781                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2782  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  2783  07BD  103B               	bcf	_generic_status^(0+128),0
  2784                           
  2785                           ;SlaveLiofilizadorVer1.c: 296:             }
  2786  07BE  2F7E               	goto	l7226
  2787  07BF                     __end_of_main:	
  2788                           
  2789                           	psect	text1
  2790  1EEA                     __ptext1:	
  2791 ;; *************** function _USART_init *****************
  2792 ;; Defined at:
  2793 ;;		line 18 in file "usart.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  i               1    6[BANK0 ] unsigned char 
  2798 ;;  erro            1    0        unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 300/0
  2805 ;;		On exit  : 300/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       4       0       0       0
  2809 ;;      Locals:         0       2       0       0       0
  2810 ;;      Temps:          0       1       0       0       0
  2811 ;;      Totals:         0       7       0       0       0
  2812 ;;Total ram usage:        7 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _USART_init
  2824  1EEA                     _USART_init:	
  2825                           
  2826                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2830  1EEA  304B               	movlw	75
  2831  1EEB  0621               	xorwf	USART_init@baudrate+1,w
  2832  1EEC  0420               	iorwf	USART_init@baudrate,w
  2833  1EED  0422               	iorwf	USART_init@baudrate+2,w
  2834  1EEE  0423               	iorwf	USART_init@baudrate+3,w
  2835  1EEF  1D03               	btfss	3,2
  2836  1EF0  2EFB               	goto	l6840
  2837                           
  2838                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2839  1EF1  1798               	bsf	24,7	;volatile
  2840                           
  2841                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2842  1EF2  1618               	bsf	24,4	;volatile
  2843                           
  2844                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2845  1EF3  1683               	bsf	3,5	;RP0=1, select bank1
  2846  1EF4  1518               	bsf	24,2	;volatile
  2847                           
  2848                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2849  1EF5  1218               	bcf	24,4	;volatile
  2850                           
  2851                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2852  1EF6  1318               	bcf	24,6	;volatile
  2853                           
  2854                           ;usart.c: 32:           SPBRG =12;
  2855  1EF7  300C               	movlw	12
  2856  1EF8  0099               	movwf	25	;volatile
  2857                           
  2858                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2859  1EF9  170B               	bsf	11,6	;volatile
  2860  1EFA  2F14               	goto	L1
  2861  1EFB                     l6840:	
  2862                           ;usart.c: 35:           }
  2863                           
  2864                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2865                           
  2866  1EFB  30C2               	movlw	194
  2867  1EFC  0621               	xorwf	USART_init@baudrate+1,w
  2868  1EFD  1D03               	skipz
  2869  1EFE  2F15               	goto	l6860
  2870  1EFF  0322               	decf	USART_init@baudrate+2,w
  2871  1F00  0420               	iorwf	USART_init@baudrate,w
  2872  1F01  0423               	iorwf	USART_init@baudrate+3,w
  2873  1F02  1D03               	btfss	3,2
  2874  1F03  2F15               	goto	l6860
  2875                           
  2876                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2877  1F04  3010               	movlw	16
  2878  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  2879  1F06  0099               	movwf	25	;volatile
  2880                           
  2881                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2882  1F07  1703               	bsf	3,6	;RP1=1, select bank3
  2883  1F08  1587               	bsf	7,3	;volatile
  2884                           
  2885                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2886  1F09  1303               	bcf	3,6	;RP1=0, select bank1
  2887  1F0A  1518               	bsf	24,2	;volatile
  2888                           
  2889                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2890  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2891  1F0C  1798               	bsf	24,7	;volatile
  2892                           
  2893                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2894  1F0D  1683               	bsf	3,5	;RP0=1, select bank1
  2895  1F0E  1218               	bcf	24,4	;volatile
  2896                           
  2897                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2898  1F0F  1318               	bcf	24,6	;volatile
  2899                           
  2900                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2901  1F10  1283               	bcf	3,5	;RP0=0, select bank0
  2902  1F11  1618               	bsf	24,4	;volatile
  2903                           
  2904                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2905  1F12  170B               	bsf	11,6	;volatile
  2906                           
  2907                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2908  1F13  1683               	bsf	3,5	;RP0=1, select bank1
  2909  1F14                     L1:	
  2910  1F14  168C               	bsf	12,5	;volatile
  2911  1F15                     l6860:	
  2912                           
  2913                           ;usart.c: 68:      TRISC6= 1;
  2914  1F15  1683               	bsf	3,5	;RP0=1, select bank1
  2915  1F16  1707               	bsf	7,6	;volatile
  2916                           
  2917                           ;usart.c: 69:      TRISC7= 1;
  2918  1F17  1787               	bsf	7,7	;volatile
  2919                           
  2920                           ;usart.c: 71:      CREN=0;
  2921  1F18  1283               	bcf	3,5	;RP0=0, select bank0
  2922  1F19  1218               	bcf	24,4	;volatile
  2923                           
  2924                           ;usart.c: 72:      CREN=1;
  2925  1F1A  1618               	bsf	24,4	;volatile
  2926                           
  2927                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2928  1F1B  01A6               	clrf	USART_init@i
  2929  1F1C                     l6874:	
  2930  1F1C  081A               	movf	26,w	;volatile
  2931  1F1D  3001               	movlw	1
  2932  1F1E  00A4               	movwf	??_USART_init
  2933  1F1F  0824               	movf	??_USART_init,w
  2934  1F20  07A6               	addwf	USART_init@i,f
  2935  1F21  300F               	movlw	15
  2936  1F22  0226               	subwf	USART_init@i,w
  2937  1F23  1803               	btfsc	3,0
  2938  1F24  0008               	return
  2939  1F25  2F1C               	goto	l6874
  2940  1F26                     __end_of_USART_init:	
  2941                           
  2942                           	psect	text2
  2943  0D69                     __ptext2:	
  2944 ;; *************** function _MediaPlacaVaccum *****************
  2945 ;; Defined at:
  2946 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  canal           1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  canal           1    4[BANK1 ] unsigned char 
  2951 ;;  Temp            4    5[BANK1 ] float 
  2952 ;;  Valor           4    0[BANK1 ] float 
  2953 ;;  i               2    9[BANK1 ] unsigned int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 300/100
  2960 ;;		On exit  : 200/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0      11       0       0
  2965 ;;      Temps:          0       4       0       0       0
  2966 ;;      Totals:         0       4      11       0       0
  2967 ;;Total ram usage:       15 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    3
  2970 ;; This function calls:
  2971 ;;		_ADC_Max_10Bits
  2972 ;;		_ADC_Media_10bits
  2973 ;;		_Package_Usart_is_for_me
  2974 ;;		___fladd
  2975 ;;		___fldiv
  2976 ;;		___flge
  2977 ;;		___flmul
  2978 ;;		___flsub
  2979 ;;		___xxtofl
  2980 ;;		_my_delay_ms
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _MediaPlacaVaccum
  2988  0D69                     _MediaPlacaVaccum:	
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2992                           ;MediaPlacaVaccum@canal stored from wreg
  2993  0D69  00E1               	movwf	MediaPlacaVaccum@canal^(0+128)
  2994                           
  2995                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  2996  0D6A  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  2997  0D6B  1D03               	btfss	3,2
  2998  0D6C  2F0F               	goto	l425
  2999                           
  3000                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3001  0D6D  161F               	bsf	31,4	;volatile
  3002                           
  3003                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3004  0D6E  169F               	bsf	31,5	;volatile
  3005                           
  3006                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3007  0D6F  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3008  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3010  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3011  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3012  0D74  081F               	movf	31,w	;volatile
  3013  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3014  0D76  39C3               	andlw	-61
  3015  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3016  0D78  009F               	movwf	31	;volatile
  3017                           
  3018                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3019  0D79  3000               	movlw	0
  3020  0D7A  00A3               	movwf	my_delay_ms@time+3
  3021  0D7B  3000               	movlw	0
  3022  0D7C  00A2               	movwf	my_delay_ms@time+2
  3023  0D7D  3000               	movlw	0
  3024  0D7E  00A1               	movwf	my_delay_ms@time+1
  3025  0D7F  3001               	movlw	1
  3026  0D80  00A0               	movwf	my_delay_ms@time
  3027  0D81  160A  158A  25CB  120A  158A  	fcall	_my_delay_ms
  3028                           
  3029                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3030  0D86  3000               	movlw	0
  3031  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0D88  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3033  0D89  3000               	movlw	0
  3034  0D8A  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3035  0D8B  3000               	movlw	0
  3036  0D8C  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3037  0D8D  3000               	movlw	0
  3038  0D8E  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3039                           
  3040                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3041  0D8F  3001               	movlw	1
  3042  0D90  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3043  0D91  3000               	movlw	0
  3044  0D92  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3045  0D93                     l6896:	
  3046                           
  3047                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3048  0D93  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3049  0D94  160A  118A  207D  120A  158A  	fcall	_ADC_Media_10bits
  3050  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3051  0D9A  00CD               	movwf	___fladd@b+3
  3052  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3053  0D9C  00CC               	movwf	___fladd@b+2
  3054  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3055  0D9E  00CB               	movwf	___fladd@b+1
  3056  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3057  0DA0  00CA               	movwf	___fladd@b
  3058  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0DA2  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3060  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0DA4  00D1               	movwf	___fladd@a+3
  3062  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3063  0DA6  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3064  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0DA8  00D0               	movwf	___fladd@a+2
  3066  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0DAA  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3068  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0DAC  00CF               	movwf	___fladd@a+1
  3070  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0DAE  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3072  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0DB0  00CE               	movwf	___fladd@a
  3074  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3075  0DB6  084D               	movf	?___fladd+3,w
  3076  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0DB8  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3078  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0DBA  084C               	movf	?___fladd+2,w
  3080  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3081  0DBC  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3082  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0DBE  084B               	movf	?___fladd+1,w
  3084  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3085  0DC0  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3086  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0DC2  084A               	movf	?___fladd,w
  3088  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0DC4  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3090                           
  3091                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3092  0DC5  160A  158A  234E  120A  158A  	fcall	_Package_Usart_is_for_me
  3093  0DCA  3A01               	xorlw	1
  3094  0DCB  1903               	btfsc	3,2
  3095  0DCC  2DDB               	goto	l6904
  3096                           
  3097                           ;SlaveLiofilizadorVer1.c: 758:            }
  3098  0DCD  3001               	movlw	1
  3099  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0DCF  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3101  0DD0  1803               	skipnc
  3102  0DD1  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3103  0DD2  3000               	movlw	0
  3104  0DD3  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3105  0DD4  3000               	movlw	0
  3106  0DD5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3107  0DD6  300F               	movlw	15
  3108  0DD7  1903               	skipnz
  3109  0DD8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3110  0DD9  1C03               	skipc
  3111  0DDA  2D93               	goto	l6896
  3112  0DDB                     l6904:	
  3113                           
  3114                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3115  0DDB  3000               	movlw	0
  3116  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0DDD  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3118  0DDE  300A               	movlw	10
  3119  0DDF  1903               	skipnz
  3120  0DE0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3121  0DE1  1C03               	btfss	3,0
  3122  0DE2  0008               	return
  3123                           
  3124                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3125  0DE3  300F               	movlw	15
  3126  0DE4  0666               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3127  0DE5  0467               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3128  0DE6  1D03               	btfss	3,2
  3129  0DE7  2DF2               	goto	l6912
  3130                           
  3131                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3132  0DE8  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3133  0DE9  3EFF               	addlw	255
  3134  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0DEB  00B3               	movwf	___xxtofl@val
  3136  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0DED  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3138  0DEE  1803               	skipnc
  3139  0DEF  3E01               	addlw	1
  3140  0DF0  3EFF               	addlw	255
  3141  0DF1  2DF7               	goto	L2
  3142  0DF2                     l6912:	
  3143                           
  3144                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3145  0DF2  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3146  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0DF4  00B3               	movwf	___xxtofl@val
  3148  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0DF6  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3150  0DF7                     L2:	
  3151  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0DF8  00B4               	movwf	___xxtofl@val+1
  3153  0DF9  01B5               	clrf	___xxtofl@val+2
  3154  0DFA  01B6               	clrf	___xxtofl@val+3
  3155  0DFB  3000               	movlw	0
  3156  0DFC  160A  118A  22A6  120A  158A  	fcall	___xxtofl
  3157  0E01  0836               	movf	?___xxtofl+3,w
  3158  0E02  00C4               	movwf	___fldiv@a+3
  3159  0E03  0835               	movf	?___xxtofl+2,w
  3160  0E04  00C3               	movwf	___fldiv@a+2
  3161  0E05  0834               	movf	?___xxtofl+1,w
  3162  0E06  00C2               	movwf	___fldiv@a+1
  3163  0E07  0833               	movf	?___xxtofl,w
  3164  0E08  00C1               	movwf	___fldiv@a
  3165  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0E0A  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3167  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0E0C  00C8               	movwf	___fldiv@b+3
  3169  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0E0E  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3171  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0E10  00C7               	movwf	___fldiv@b+2
  3173  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3174  0E12  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3175  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0E14  00C6               	movwf	___fldiv@b+1
  3177  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0E16  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3179  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0E18  00C5               	movwf	___fldiv@b
  3181  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3182  0E1E  0844               	movf	?___fldiv+3,w
  3183  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0E20  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3185  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0E22  0843               	movf	?___fldiv+2,w
  3187  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0E24  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3189  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0E26  0842               	movf	?___fldiv+1,w
  3191  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0E28  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3193  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0E2A  0841               	movf	?___fldiv,w
  3195  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0E2C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3197                           
  3198                           ;SlaveLiofilizadorVer1.c: 770:        Vaccum0 =1023.0-Temp;
  3199  0E2D  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3200  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0E2F  00E1               	movwf	___flsub@a+3
  3202  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0E31  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3204  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0E33  00E0               	movwf	___flsub@a+2
  3206  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0E35  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3208  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3209  0E37  00DF               	movwf	___flsub@a+1
  3210  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0E39  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3212  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0E3B  00DE               	movwf	___flsub@a
  3214  0E3C  3044               	movlw	68
  3215  0E3D  00E5               	movwf	___flsub@b+3
  3216  0E3E  307F               	movlw	127
  3217  0E3F  00E4               	movwf	___flsub@b+2
  3218  0E40  30C0               	movlw	192
  3219  0E41  00E3               	movwf	___flsub@b+1
  3220  0E42  3000               	movlw	0
  3221  0E43  00E2               	movwf	___flsub@b
  3222  0E44  160A  158A  23BE  120A  158A  	fcall	___flsub
  3223  0E49  0861               	movf	?___flsub+3,w
  3224  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0E4B  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3226  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0E4D  0860               	movf	?___flsub+2,w
  3228  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0E4F  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3230  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0E51  085F               	movf	?___flsub+1,w
  3232  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3233  0E53  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3234  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0E55  085E               	movf	?___flsub,w
  3236  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0E57  00A4               	movwf	_Vaccum0^(0+128)
  3238                           
  3239                           ;SlaveLiofilizadorVer1.c: 771:        Vaccum0*=Vaccum0;
  3240  0E58  0827               	movf	(_Vaccum0+3)^(0+128),w
  3241  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0E5A  00AC               	movwf	___flmul@b+3
  3243  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0E5C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3245  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0E5E  00AB               	movwf	___flmul@b+2
  3247  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0E60  0825               	movf	(_Vaccum0+1)^(0+128),w
  3249  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0E62  00AA               	movwf	___flmul@b+1
  3251  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3252  0E64  0824               	movf	_Vaccum0^(0+128),w
  3253  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0E66  00A9               	movwf	___flmul@b
  3255  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0E68  0827               	movf	(_Vaccum0+3)^(0+128),w
  3257  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0E6A  00B0               	movwf	___flmul@a+3
  3259  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0E6C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3261  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0E6E  00AF               	movwf	___flmul@a+2
  3263  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3264  0E70  0825               	movf	(_Vaccum0+1)^(0+128),w
  3265  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0E72  00AE               	movwf	___flmul@a+1
  3267  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0E74  0824               	movf	_Vaccum0^(0+128),w
  3269  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0E76  00AD               	movwf	___flmul@a
  3271  0E77  120A  118A  23D7  120A  158A  	fcall	___flmul
  3272  0E7C  082C               	movf	?___flmul+3,w
  3273  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0E7E  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3275  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0E80  082B               	movf	?___flmul+2,w
  3277  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0E82  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3279  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0E84  082A               	movf	?___flmul+1,w
  3281  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0E86  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3283  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0E88  0829               	movf	?___flmul,w
  3285  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0E8A  00A4               	movwf	_Vaccum0^(0+128)
  3287                           
  3288                           ;SlaveLiofilizadorVer1.c: 772:        Vaccum0*=0.00222;
  3289  0E8B  303B               	movlw	59
  3290  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0E8D  00AC               	movwf	___flmul@b+3
  3292  0E8E  3011               	movlw	17
  3293  0E8F  00AB               	movwf	___flmul@b+2
  3294  0E90  307D               	movlw	125
  3295  0E91  00AA               	movwf	___flmul@b+1
  3296  0E92  306B               	movlw	107
  3297  0E93  00A9               	movwf	___flmul@b
  3298  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0E95  0827               	movf	(_Vaccum0+3)^(0+128),w
  3300  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0E97  00B0               	movwf	___flmul@a+3
  3302  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E99  0826               	movf	(_Vaccum0+2)^(0+128),w
  3304  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E9B  00AF               	movwf	___flmul@a+2
  3306  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E9D  0825               	movf	(_Vaccum0+1)^(0+128),w
  3308  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E9F  00AE               	movwf	___flmul@a+1
  3310  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0EA1  0824               	movf	_Vaccum0^(0+128),w
  3312  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0EA3  00AD               	movwf	___flmul@a
  3314  0EA4  120A  118A  23D7  120A  158A  	fcall	___flmul
  3315  0EA9  082C               	movf	?___flmul+3,w
  3316  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0EAB  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3318  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0EAD  082B               	movf	?___flmul+2,w
  3320  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0EAF  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3322  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0EB1  082A               	movf	?___flmul+1,w
  3324  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0EB3  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3326  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0EB5  0829               	movf	?___flmul,w
  3328  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0EB7  00A4               	movwf	_Vaccum0^(0+128)
  3330                           
  3331                           ;SlaveLiofilizadorVer1.c: 773:        Vaccum0+=150;
  3332  0EB8  3043               	movlw	67
  3333  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0EBA  00CD               	movwf	___fladd@b+3
  3335  0EBB  3016               	movlw	22
  3336  0EBC  00CC               	movwf	___fladd@b+2
  3337  0EBD  3000               	movlw	0
  3338  0EBE  00CB               	movwf	___fladd@b+1
  3339  0EBF  3000               	movlw	0
  3340  0EC0  00CA               	movwf	___fladd@b
  3341  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0EC2  0827               	movf	(_Vaccum0+3)^(0+128),w
  3343  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0EC4  00D1               	movwf	___fladd@a+3
  3345  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0EC6  0826               	movf	(_Vaccum0+2)^(0+128),w
  3347  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0EC8  00D0               	movwf	___fladd@a+2
  3349  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0ECA  0825               	movf	(_Vaccum0+1)^(0+128),w
  3351  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0ECC  00CF               	movwf	___fladd@a+1
  3353  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0ECE  0824               	movf	_Vaccum0^(0+128),w
  3355  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0ED0  00CE               	movwf	___fladd@a
  3357  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3358  0ED6  084D               	movf	?___fladd+3,w
  3359  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0ED8  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3361  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0EDA  084C               	movf	?___fladd+2,w
  3363  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3364  0EDC  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3365  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0EDE  084B               	movf	?___fladd+1,w
  3367  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0EE0  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3369  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0EE2  084A               	movf	?___fladd,w
  3371  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0EE4  00A4               	movwf	_Vaccum0^(0+128)
  3373                           
  3374                           ;SlaveLiofilizadorVer1.c: 775:        if(Vaccum0>2000)Vaccum0=2000;
  3375  0EE5  3044               	movlw	68
  3376  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0EE7  00A3               	movwf	___flge@ff1+3
  3378  0EE8  30FA               	movlw	250
  3379  0EE9  00A2               	movwf	___flge@ff1+2
  3380  0EEA  3000               	movlw	0
  3381  0EEB  00A1               	movwf	___flge@ff1+1
  3382  0EEC  3000               	movlw	0
  3383  0EED  00A0               	movwf	___flge@ff1
  3384  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0EEF  0827               	movf	(_Vaccum0+3)^(0+128),w
  3386  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0EF1  00A7               	movwf	___flge@ff2+3
  3388  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0EF3  0826               	movf	(_Vaccum0+2)^(0+128),w
  3390  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0EF5  00A6               	movwf	___flge@ff2+2
  3392  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0EF7  0825               	movf	(_Vaccum0+1)^(0+128),w
  3394  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0EF9  00A5               	movwf	___flge@ff2+1
  3396  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0EFB  0824               	movf	_Vaccum0^(0+128),w
  3398  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0EFD  00A4               	movwf	___flge@ff2
  3400  0EFE  160A  118A  2213  120A  158A  	fcall	___flge
  3401  0F03  1803               	btfsc	3,0
  3402  0F04  0008               	return
  3403  0F05  3044               	movlw	68
  3404  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3405  0F07  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3406  0F08  30FA               	movlw	250
  3407  0F09  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3408  0F0A  3000               	movlw	0
  3409  0F0B  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3410  0F0C  3000               	movlw	0
  3411  0F0D  00A4               	movwf	_Vaccum0^(0+128)
  3412  0F0E  0008               	return
  3413  0F0F                     l425:	
  3414                           ;SlaveLiofilizadorVer1.c: 778:      else
  3415                           
  3416                           
  3417                           ;SlaveLiofilizadorVer1.c: 779:        {;SlaveLiofilizadorVer1.c: 780:        ADCON1bits.
      +                          VCFG0=0;
  3418  0F0F  121F               	bcf	31,4	;volatile
  3419                           
  3420                           ;SlaveLiofilizadorVer1.c: 781:        ADCON1bits.VCFG1=0;
  3421  0F10  129F               	bcf	31,5	;volatile
  3422                           
  3423                           ;SlaveLiofilizadorVer1.c: 782:        ADCON0bits.CHS=canal;
  3424  0F11  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3425  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3427  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3428  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3429  0F16  081F               	movf	31,w	;volatile
  3430  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3431  0F18  39C3               	andlw	-61
  3432  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3433  0F1A  009F               	movwf	31	;volatile
  3434                           
  3435                           ;SlaveLiofilizadorVer1.c: 783:        my_delay_ms(1);
  3436  0F1B  3000               	movlw	0
  3437  0F1C  00A3               	movwf	my_delay_ms@time+3
  3438  0F1D  3000               	movlw	0
  3439  0F1E  00A2               	movwf	my_delay_ms@time+2
  3440  0F1F  3000               	movlw	0
  3441  0F20  00A1               	movwf	my_delay_ms@time+1
  3442  0F21  3001               	movlw	1
  3443  0F22  00A0               	movwf	my_delay_ms@time
  3444  0F23  160A  158A  25CB  120A  158A  	fcall	_my_delay_ms
  3445                           
  3446                           ;SlaveLiofilizadorVer1.c: 784:        Temp=0;
  3447  0F28  3000               	movlw	0
  3448  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0F2A  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3450  0F2B  3000               	movlw	0
  3451  0F2C  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3452  0F2D  3000               	movlw	0
  3453  0F2E  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3454  0F2F  3000               	movlw	0
  3455  0F30  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3456                           
  3457                           ;SlaveLiofilizadorVer1.c: 786:        for(i=1;i<15;i++)
  3458  0F31  3001               	movlw	1
  3459  0F32  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3460  0F33  3000               	movlw	0
  3461  0F34  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3462  0F35                     l6930:	
  3463                           
  3464                           ;SlaveLiofilizadorVer1.c: 787:            {;SlaveLiofilizadorVer1.c: 788:            Val
      +                          or=ADC_Max_10Bits(canal);
  3465  0F35  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3466  0F36  160A  158A  2726  120A  158A  	fcall	_ADC_Max_10Bits
  3467  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3468  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3469  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3470  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3471  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3472  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3473  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3474  0F42  00B6               	movwf	___xxtofl@val+3
  3475  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3476  0F44  00B5               	movwf	___xxtofl@val+2
  3477  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3478  0F46  00B4               	movwf	___xxtofl@val+1
  3479  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3480  0F48  00B3               	movwf	___xxtofl@val
  3481  0F49  3000               	movlw	0
  3482  0F4A  160A  118A  22A6  120A  158A  	fcall	___xxtofl
  3483  0F4F  0836               	movf	?___xxtofl+3,w
  3484  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0F51  00E0               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3486  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0F53  0835               	movf	?___xxtofl+2,w
  3488  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3489  0F55  00DF               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3490  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0F57  0834               	movf	?___xxtofl+1,w
  3492  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0F59  00DE               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3494  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0F5B  0833               	movf	?___xxtofl,w
  3496  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0F5D  00DD               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3498                           
  3499                           ;SlaveLiofilizadorVer1.c: 789:            if(Valor>Temp) Temp=Valor;
  3500  0F5E  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3501  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0F60  00A3               	movwf	___flge@ff1+3
  3503  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0F62  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3505  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0F64  00A2               	movwf	___flge@ff1+2
  3507  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3508  0F66  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3509  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0F68  00A1               	movwf	___flge@ff1+1
  3511  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0F6A  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3513  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0F6C  00A0               	movwf	___flge@ff1
  3515  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3516  0F6E  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3517  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0F70  00A7               	movwf	___flge@ff2+3
  3519  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3520  0F72  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3521  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0F74  00A6               	movwf	___flge@ff2+2
  3523  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0F76  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3525  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0F78  00A5               	movwf	___flge@ff2+1
  3527  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0F7A  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3529  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0F7C  00A4               	movwf	___flge@ff2
  3531  0F7D  160A  118A  2213  120A  158A  	fcall	___flge
  3532  0F82  1803               	btfsc	3,0
  3533  0F83  2F8D               	goto	l6936
  3534  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0F85  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3536  0F86  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3537  0F87  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3538  0F88  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3539  0F89  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3540  0F8A  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3541  0F8B  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3542  0F8C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3543  0F8D                     l6936:	
  3544                           
  3545                           ;SlaveLiofilizadorVer1.c: 790:            if(Package_Usart_is_for_me()==1) break;
  3546  0F8D  160A  158A  234E  120A  158A  	fcall	_Package_Usart_is_for_me
  3547  0F92  3A01               	xorlw	1
  3548  0F93  1903               	btfsc	3,2
  3549  0F94  2FA3               	goto	l6942
  3550                           
  3551                           ;SlaveLiofilizadorVer1.c: 791:            }
  3552  0F95  3001               	movlw	1
  3553  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3554  0F97  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3555  0F98  1803               	skipnc
  3556  0F99  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3557  0F9A  3000               	movlw	0
  3558  0F9B  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3559  0F9C  3000               	movlw	0
  3560  0F9D  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3561  0F9E  300F               	movlw	15
  3562  0F9F  1903               	skipnz
  3563  0FA0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3564  0FA1  1C03               	skipc
  3565  0FA2  2F35               	goto	l6930
  3566  0FA3                     l6942:	
  3567                           
  3568                           ;SlaveLiofilizadorVer1.c: 792:         if(i<10)
  3569  0FA3  3000               	movlw	0
  3570  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3571  0FA5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3572  0FA6  300A               	movlw	10
  3573  0FA7  1903               	skipnz
  3574  0FA8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3575  0FA9  1C03               	btfss	3,0
  3576  0FAA  0008               	return
  3577                           
  3578                           ;SlaveLiofilizadorVer1.c: 797:         Tensao1 =Temp*0.318296;
  3579  0FAB  303E               	movlw	62
  3580  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0FAD  00AC               	movwf	___flmul@b+3
  3582  0FAE  30A2               	movlw	162
  3583  0FAF  00AB               	movwf	___flmul@b+2
  3584  0FB0  30F7               	movlw	247
  3585  0FB1  00AA               	movwf	___flmul@b+1
  3586  0FB2  30B1               	movlw	177
  3587  0FB3  00A9               	movwf	___flmul@b
  3588  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0FB5  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3590  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0FB7  00B0               	movwf	___flmul@a+3
  3592  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0FB9  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3594  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0FBB  00AF               	movwf	___flmul@a+2
  3596  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0FBD  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3598  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0FBF  00AE               	movwf	___flmul@a+1
  3600  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3601  0FC1  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3602  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0FC3  00AD               	movwf	___flmul@a
  3604  0FC4  120A  118A  23D7  120A  158A  	fcall	___flmul
  3605  0FC9  082C               	movf	?___flmul+3,w
  3606  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0FCB  00A3               	movwf	(_Tensao1+3)^(0+128)
  3608  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3609  0FCD  082B               	movf	?___flmul+2,w
  3610  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3611  0FCF  00A2               	movwf	(_Tensao1+2)^(0+128)
  3612  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0FD1  082A               	movf	?___flmul+1,w
  3614  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0FD3  00A1               	movwf	(_Tensao1+1)^(0+128)
  3616  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0FD5  0829               	movf	?___flmul,w
  3618  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0FD7  00A0               	movwf	_Tensao1^(0+128)
  3620                           
  3621                           ;SlaveLiofilizadorVer1.c: 798:         if(Tensao1<15) Tensao1=0;
  3622  0FD8  0823               	movf	(_Tensao1+3)^(0+128),w
  3623  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FDA  00A3               	movwf	___flge@ff1+3
  3625  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0FDC  0822               	movf	(_Tensao1+2)^(0+128),w
  3627  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0FDE  00A2               	movwf	___flge@ff1+2
  3629  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0FE0  0821               	movf	(_Tensao1+1)^(0+128),w
  3631  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0FE2  00A1               	movwf	___flge@ff1+1
  3633  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0FE4  0820               	movf	_Tensao1^(0+128),w
  3635  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0FE6  00A0               	movwf	___flge@ff1
  3637  0FE7  3041               	movlw	65
  3638  0FE8  00A7               	movwf	___flge@ff2+3
  3639  0FE9  3070               	movlw	112
  3640  0FEA  00A6               	movwf	___flge@ff2+2
  3641  0FEB  3000               	movlw	0
  3642  0FEC  00A5               	movwf	___flge@ff2+1
  3643  0FED  3000               	movlw	0
  3644  0FEE  00A4               	movwf	___flge@ff2
  3645  0FEF  160A  118A  2213  120A  158A  	fcall	___flge
  3646  0FF4  1803               	btfsc	3,0
  3647  0FF5  0008               	return
  3648  0FF6  3000               	movlw	0
  3649  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3650  0FF8  00A3               	movwf	(_Tensao1+3)^(0+128)
  3651  0FF9  3000               	movlw	0
  3652  0FFA  00A2               	movwf	(_Tensao1+2)^(0+128)
  3653  0FFB  3000               	movlw	0
  3654  0FFC  00A1               	movwf	(_Tensao1+1)^(0+128)
  3655  0FFD  3000               	movlw	0
  3656  0FFE  00A0               	movwf	_Tensao1^(0+128)
  3657  0FFF  0008               	return
  3658  1000                     __end_of_MediaPlacaVaccum:	
  3659                           
  3660                           	psect	text3
  3661  1BBE                     __ptext3:	
  3662 ;; *************** function ___flsub *****************
  3663 ;; Defined at:
  3664 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  a               4   62[BANK0 ] void 
  3667 ;;  b               4   66[BANK0 ] void 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  4   62[BANK0 ] void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 300/0
  3676 ;;		On exit  : 300/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       8       0       0       0
  3680 ;;      Locals:         0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0
  3682 ;;      Totals:         0       8       0       0       0
  3683 ;;Total ram usage:        8 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    2
  3686 ;; This function calls:
  3687 ;;		___fladd
  3688 ;; This function is called by:
  3689 ;;		_MediaPlacaVaccum
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function ___flsub
  3695  1BBE                     ___flsub:	
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3699  1BBE  3080               	movlw	128
  3700  1BBF  06E1               	xorwf	___flsub@a+3,f
  3701  1BC0  0865               	movf	___flsub@b+3,w
  3702  1BC1  00CD               	movwf	___fladd@b+3
  3703  1BC2  0864               	movf	___flsub@b+2,w
  3704  1BC3  00CC               	movwf	___fladd@b+2
  3705  1BC4  0863               	movf	___flsub@b+1,w
  3706  1BC5  00CB               	movwf	___fladd@b+1
  3707  1BC6  0862               	movf	___flsub@b,w
  3708  1BC7  00CA               	movwf	___fladd@b
  3709  1BC8  0861               	movf	___flsub@a+3,w
  3710  1BC9  00D1               	movwf	___fladd@a+3
  3711  1BCA  0860               	movf	___flsub@a+2,w
  3712  1BCB  00D0               	movwf	___fladd@a+2
  3713  1BCC  085F               	movf	___flsub@a+1,w
  3714  1BCD  00CF               	movwf	___fladd@a+1
  3715  1BCE  085E               	movf	___flsub@a,w
  3716  1BCF  00CE               	movwf	___fladd@a
  3717  1BD0  120A  158A  233C   	fcall	___fladd
  3718  1BD3  084D               	movf	?___fladd+3,w
  3719  1BD4  00E1               	movwf	?___flsub+3
  3720  1BD5  084C               	movf	?___fladd+2,w
  3721  1BD6  00E0               	movwf	?___flsub+2
  3722  1BD7  084B               	movf	?___fladd+1,w
  3723  1BD8  00DF               	movwf	?___flsub+1
  3724  1BD9  084A               	movf	?___fladd,w
  3725  1BDA  00DE               	movwf	?___flsub
  3726  1BDB  0008               	return
  3727  1BDC                     __end_of___flsub:	
  3728                           
  3729                           	psect	text4
  3730  0B3C                     __ptext4:	
  3731 ;; *************** function ___fladd *****************
  3732 ;; Defined at:
  3733 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  b               4   42[BANK0 ] void 
  3736 ;;  a               4   46[BANK0 ] void 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  grs             1   61[BANK0 ] unsigned char 
  3739 ;;  bexp            1   60[BANK0 ] unsigned char 
  3740 ;;  aexp            1   59[BANK0 ] unsigned char 
  3741 ;;  signs           1   58[BANK0 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  4   42[BANK0 ] unsigned char 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0, btemp+1
  3746 ;; Tracked objects:
  3747 ;;		On entry : 300/0
  3748 ;;		On exit  : 300/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       8       0       0       0
  3752 ;;      Locals:         0       4       0       0       0
  3753 ;;      Temps:          0       8       0       0       0
  3754 ;;      Totals:         0      20       0       0       0
  3755 ;;Total ram usage:       20 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_MediaPlacaVaccum
  3762 ;;		___flsub
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function ___fladd
  3768  0B3C                     ___fladd:	
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3772  0B3C  084D               	movf	___fladd@b+3,w
  3773  0B3D  3980               	andlw	128
  3774  0B3E  00D2               	movwf	??___fladd
  3775  0B3F  0852               	movf	??___fladd,w
  3776  0B40  00DA               	movwf	___fladd@signs
  3777  0B41  084D               	movf	___fladd@b+3,w
  3778  0B42  00D2               	movwf	??___fladd
  3779  0B43  0752               	addwf	??___fladd,w
  3780  0B44  00D3               	movwf	??___fladd+1
  3781  0B45  0853               	movf	??___fladd+1,w
  3782  0B46  00DC               	movwf	___fladd@bexp
  3783  0B47  1BCC               	btfsc	___fladd@b+2,7
  3784  0B48  145C               	bsf	___fladd@bexp,0
  3785  0B49  085C               	movf	___fladd@bexp,w
  3786  0B4A  1903               	btfsc	3,2
  3787  0B4B  2B5A               	goto	l5878
  3788  0B4C  0A5C               	incf	___fladd@bexp,w
  3789  0B4D  1D03               	btfss	3,2
  3790  0B4E  2B57               	goto	l5874
  3791  0B4F  3000               	movlw	0
  3792  0B50  00CD               	movwf	___fladd@b+3
  3793  0B51  3000               	movlw	0
  3794  0B52  00CC               	movwf	___fladd@b+2
  3795  0B53  3000               	movlw	0
  3796  0B54  00CB               	movwf	___fladd@b+1
  3797  0B55  3000               	movlw	0
  3798  0B56  00CA               	movwf	___fladd@b
  3799  0B57                     l5874:	
  3800  0B57  17CC               	bsf	___fladd@b+2,7
  3801  0B58  01CD               	clrf	___fladd@b+3
  3802  0B59  2B62               	goto	l5880
  3803  0B5A                     l5878:	
  3804  0B5A  3000               	movlw	0
  3805  0B5B  00CD               	movwf	___fladd@b+3
  3806  0B5C  3000               	movlw	0
  3807  0B5D  00CC               	movwf	___fladd@b+2
  3808  0B5E  3000               	movlw	0
  3809  0B5F  00CB               	movwf	___fladd@b+1
  3810  0B60  3000               	movlw	0
  3811  0B61  00CA               	movwf	___fladd@b
  3812  0B62                     l5880:	
  3813  0B62  0851               	movf	___fladd@a+3,w
  3814  0B63  3980               	andlw	128
  3815  0B64  00D2               	movwf	??___fladd
  3816  0B65  0852               	movf	??___fladd,w
  3817  0B66  00DB               	movwf	___fladd@aexp
  3818  0B67  085B               	movf	___fladd@aexp,w
  3819  0B68  065A               	xorwf	___fladd@signs,w
  3820  0B69  1D03               	btfss	3,2
  3821  0B6A  175A               	bsf	___fladd@signs,6
  3822  0B6B  0851               	movf	___fladd@a+3,w
  3823  0B6C  00D2               	movwf	??___fladd
  3824  0B6D  0752               	addwf	??___fladd,w
  3825  0B6E  00D3               	movwf	??___fladd+1
  3826  0B6F  0853               	movf	??___fladd+1,w
  3827  0B70  00DB               	movwf	___fladd@aexp
  3828  0B71  1BD0               	btfsc	___fladd@a+2,7
  3829  0B72  145B               	bsf	___fladd@aexp,0
  3830  0B73  085B               	movf	___fladd@aexp,w
  3831  0B74  1903               	btfsc	3,2
  3832  0B75  2B84               	goto	l5902
  3833  0B76  0A5B               	incf	___fladd@aexp,w
  3834  0B77  1D03               	btfss	3,2
  3835  0B78  2B81               	goto	l5898
  3836  0B79  3000               	movlw	0
  3837  0B7A  00D1               	movwf	___fladd@a+3
  3838  0B7B  3000               	movlw	0
  3839  0B7C  00D0               	movwf	___fladd@a+2
  3840  0B7D  3000               	movlw	0
  3841  0B7E  00CF               	movwf	___fladd@a+1
  3842  0B7F  3000               	movlw	0
  3843  0B80  00CE               	movwf	___fladd@a
  3844  0B81                     l5898:	
  3845  0B81  17D0               	bsf	___fladd@a+2,7
  3846  0B82  01D1               	clrf	___fladd@a+3
  3847  0B83  2B8C               	goto	l1273
  3848  0B84                     l5902:	
  3849  0B84  3000               	movlw	0
  3850  0B85  00D1               	movwf	___fladd@a+3
  3851  0B86  3000               	movlw	0
  3852  0B87  00D0               	movwf	___fladd@a+2
  3853  0B88  3000               	movlw	0
  3854  0B89  00CF               	movwf	___fladd@a+1
  3855  0B8A  3000               	movlw	0
  3856  0B8B  00CE               	movwf	___fladd@a
  3857  0B8C                     l1273:	
  3858  0B8C  085C               	movf	___fladd@bexp,w
  3859  0B8D  025B               	subwf	___fladd@aexp,w
  3860  0B8E  1803               	skipnc
  3861  0B8F  2BD2               	goto	l5938
  3862  0B90  1F5A               	btfss	___fladd@signs,6
  3863  0B91  2B96               	goto	l5908
  3864  0B92  3080               	movlw	128
  3865  0B93  00D2               	movwf	??___fladd
  3866  0B94  0852               	movf	??___fladd,w
  3867  0B95  06DA               	xorwf	___fladd@signs,f
  3868  0B96                     l5908:	
  3869  0B96  085C               	movf	___fladd@bexp,w
  3870  0B97  00D2               	movwf	??___fladd
  3871  0B98  0852               	movf	??___fladd,w
  3872  0B99  00DD               	movwf	___fladd@grs
  3873  0B9A  085B               	movf	___fladd@aexp,w
  3874  0B9B  00D2               	movwf	??___fladd
  3875  0B9C  0852               	movf	??___fladd,w
  3876  0B9D  00DC               	movwf	___fladd@bexp
  3877  0B9E  085D               	movf	___fladd@grs,w
  3878  0B9F  00D2               	movwf	??___fladd
  3879  0BA0  0852               	movf	??___fladd,w
  3880  0BA1  00DB               	movwf	___fladd@aexp
  3881  0BA2  084A               	movf	___fladd@b,w
  3882  0BA3  00D2               	movwf	??___fladd
  3883  0BA4  0852               	movf	??___fladd,w
  3884  0BA5  00DD               	movwf	___fladd@grs
  3885  0BA6  084E               	movf	___fladd@a,w
  3886  0BA7  00D2               	movwf	??___fladd
  3887  0BA8  0852               	movf	??___fladd,w
  3888  0BA9  00CA               	movwf	___fladd@b
  3889  0BAA  085D               	movf	___fladd@grs,w
  3890  0BAB  00D2               	movwf	??___fladd
  3891  0BAC  0852               	movf	??___fladd,w
  3892  0BAD  00CE               	movwf	___fladd@a
  3893  0BAE  084B               	movf	___fladd@b+1,w
  3894  0BAF  00D2               	movwf	??___fladd
  3895  0BB0  0852               	movf	??___fladd,w
  3896  0BB1  00DD               	movwf	___fladd@grs
  3897  0BB2  084F               	movf	___fladd@a+1,w
  3898  0BB3  00D2               	movwf	??___fladd
  3899  0BB4  0852               	movf	??___fladd,w
  3900  0BB5  00CB               	movwf	___fladd@b+1
  3901  0BB6  085D               	movf	___fladd@grs,w
  3902  0BB7  00D2               	movwf	??___fladd
  3903  0BB8  0852               	movf	??___fladd,w
  3904  0BB9  00CF               	movwf	___fladd@a+1
  3905  0BBA  084C               	movf	___fladd@b+2,w
  3906  0BBB  00D2               	movwf	??___fladd
  3907  0BBC  0852               	movf	??___fladd,w
  3908  0BBD  00DD               	movwf	___fladd@grs
  3909  0BBE  0850               	movf	___fladd@a+2,w
  3910  0BBF  00D2               	movwf	??___fladd
  3911  0BC0  0852               	movf	??___fladd,w
  3912  0BC1  00CC               	movwf	___fladd@b+2
  3913  0BC2  085D               	movf	___fladd@grs,w
  3914  0BC3  00D2               	movwf	??___fladd
  3915  0BC4  0852               	movf	??___fladd,w
  3916  0BC5  00D0               	movwf	___fladd@a+2
  3917  0BC6  084D               	movf	___fladd@b+3,w
  3918  0BC7  00D2               	movwf	??___fladd
  3919  0BC8  0852               	movf	??___fladd,w
  3920  0BC9  00DD               	movwf	___fladd@grs
  3921  0BCA  0851               	movf	___fladd@a+3,w
  3922  0BCB  00D2               	movwf	??___fladd
  3923  0BCC  0852               	movf	??___fladd,w
  3924  0BCD  00CD               	movwf	___fladd@b+3
  3925  0BCE  085D               	movf	___fladd@grs,w
  3926  0BCF  00D2               	movwf	??___fladd
  3927  0BD0  0852               	movf	??___fladd,w
  3928  0BD1  00D1               	movwf	___fladd@a+3
  3929  0BD2                     l5938:	
  3930  0BD2  01DD               	clrf	___fladd@grs
  3931  0BD3  085B               	movf	___fladd@aexp,w
  3932  0BD4  00D2               	movwf	??___fladd
  3933  0BD5  01D3               	clrf	??___fladd+1
  3934  0BD6  0853               	movf	??___fladd+1,w
  3935  0BD7  00D5               	movwf	??___fladd+3
  3936  0BD8  085C               	movf	___fladd@bexp,w
  3937  0BD9  0252               	subwf	??___fladd,w
  3938  0BDA  00D4               	movwf	??___fladd+2
  3939  0BDB  1C03               	skipc
  3940  0BDC  03D5               	decf	??___fladd+3,f
  3941  0BDD  0855               	movf	??___fladd+3,w
  3942  0BDE  3A80               	xorlw	128
  3943  0BDF  00FF               	movwf	127
  3944  0BE0  3080               	movlw	128
  3945  0BE1  027F               	subwf	127,w
  3946  0BE2  1D03               	skipz
  3947  0BE3  2BE6               	goto	u5885
  3948  0BE4  301A               	movlw	26
  3949  0BE5  0254               	subwf	??___fladd+2,w
  3950  0BE6                     u5885:	
  3951  0BE6  1C03               	skipc
  3952  0BE7  2C1F               	goto	l5956
  3953  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0BEA  084D               	movf	___fladd@b+3,w
  3956  0BEB  044C               	iorwf	___fladd@b+2,w
  3957  0BEC  044B               	iorwf	___fladd@b+1,w
  3958  0BED  044A               	iorwf	___fladd@b,w
  3959  0BEE  1903               	btfsc	3,2
  3960  0BEF  2BF2               	goto	u5890
  3961  0BF0  3001               	movlw	1
  3962  0BF1  2BF3               	goto	u5900
  3963  0BF2                     u5890:	
  3964  0BF2  3000               	movlw	0
  3965  0BF3                     u5900:	
  3966  0BF3  00D2               	movwf	??___fladd
  3967  0BF4  0852               	movf	??___fladd,w
  3968  0BF5  00DD               	movwf	___fladd@grs
  3969  0BF6  3000               	movlw	0
  3970  0BF7  00CD               	movwf	___fladd@b+3
  3971  0BF8  3000               	movlw	0
  3972  0BF9  00CC               	movwf	___fladd@b+2
  3973  0BFA  3000               	movlw	0
  3974  0BFB  00CB               	movwf	___fladd@b+1
  3975  0BFC  3000               	movlw	0
  3976  0BFD  00CA               	movwf	___fladd@b
  3977  0BFE  085B               	movf	___fladd@aexp,w
  3978  0BFF  00D2               	movwf	??___fladd
  3979  0C00  0852               	movf	??___fladd,w
  3980  0C01  00DC               	movwf	___fladd@bexp
  3981  0C02  2C25               	goto	l1277
  3982  0C03                     l1279:	
  3983  0C03  1C5D               	btfss	___fladd@grs,0
  3984  0C04  2C0E               	goto	l5946
  3985  0C05  085D               	movf	___fladd@grs,w
  3986  0C06  00D2               	movwf	??___fladd
  3987  0C07  1003               	clrc
  3988  0C08  0C52               	rrf	??___fladd,w
  3989  0C09  3801               	iorlw	1
  3990  0C0A  00D3               	movwf	??___fladd+1
  3991  0C0B  0853               	movf	??___fladd+1,w
  3992  0C0C  00DD               	movwf	___fladd@grs
  3993  0C0D  2C10               	goto	l5948
  3994  0C0E                     l5946:	
  3995  0C0E  1003               	clrc
  3996  0C0F  0CDD               	rrf	___fladd@grs,f
  3997  0C10                     l5948:	
  3998  0C10  184A               	btfsc	___fladd@b,0
  3999  0C11  17DD               	bsf	___fladd@grs,7
  4000  0C12  3001               	movlw	1
  4001  0C13  00D2               	movwf	??___fladd
  4002  0C14                     u5935:	
  4003  0C14  0D4D               	rlf	___fladd@b+3,w
  4004  0C15  0CCD               	rrf	___fladd@b+3,f
  4005  0C16  0CCC               	rrf	___fladd@b+2,f
  4006  0C17  0CCB               	rrf	___fladd@b+1,f
  4007  0C18  0CCA               	rrf	___fladd@b,f
  4008  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4009  0C1A  2C14               	goto	u5935
  4010  0C1B  3001               	movlw	1
  4011  0C1C  00D2               	movwf	??___fladd
  4012  0C1D  0852               	movf	??___fladd,w
  4013  0C1E  07DC               	addwf	___fladd@bexp,f
  4014  0C1F                     l5956:	
  4015  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0C21  085B               	movf	___fladd@aexp,w
  4018  0C22  025C               	subwf	___fladd@bexp,w
  4019  0C23  1C03               	skipc
  4020  0C24  2C03               	goto	l1279
  4021  0C25                     l1277:	
  4022  0C25  1B5A               	btfsc	___fladd@signs,6
  4023  0C26  2C66               	goto	l5982
  4024  0C27  085C               	movf	___fladd@bexp,w
  4025  0C28  1D03               	btfss	3,2
  4026  0C29  2C33               	goto	l5964
  4027  0C2A  3000               	movlw	0
  4028  0C2B  00CD               	movwf	?___fladd+3
  4029  0C2C  3000               	movlw	0
  4030  0C2D  00CC               	movwf	?___fladd+2
  4031  0C2E  3000               	movlw	0
  4032  0C2F  00CB               	movwf	?___fladd+1
  4033  0C30  3000               	movlw	0
  4034  0C31  00CA               	movwf	?___fladd
  4035  0C32  0008               	return
  4036  0C33                     l5964:	
  4037  0C33  084E               	movf	___fladd@a,w
  4038  0C34  07CA               	addwf	___fladd@b,f
  4039  0C35  084F               	movf	___fladd@a+1,w
  4040  0C36  1103               	clrz
  4041  0C37  1803               	skipnc
  4042  0C38  3E01               	addlw	1
  4043  0C39  1D03               	btfss	3,2
  4044  0C3A  07CB               	addwf	___fladd@b+1,f
  4045  0C3B  0850               	movf	___fladd@a+2,w
  4046  0C3C  1103               	clrz
  4047  0C3D  1803               	skipnc
  4048  0C3E  3E01               	addlw	1
  4049  0C3F  1D03               	btfss	3,2
  4050  0C40  07CC               	addwf	___fladd@b+2,f
  4051  0C41  0851               	movf	___fladd@a+3,w
  4052  0C42  1103               	clrz
  4053  0C43  1803               	skipnc
  4054  0C44  3E01               	addlw	1
  4055  0C45  1D03               	btfss	3,2
  4056  0C46  07CD               	addwf	___fladd@b+3,f
  4057  0C47  1C4D               	btfss	___fladd@b+3,0
  4058  0C48  2D08               	goto	l6016
  4059  0C49  1C5D               	btfss	___fladd@grs,0
  4060  0C4A  2C54               	goto	l5972
  4061  0C4B  085D               	movf	___fladd@grs,w
  4062  0C4C  00D2               	movwf	??___fladd
  4063  0C4D  1003               	clrc
  4064  0C4E  0C52               	rrf	??___fladd,w
  4065  0C4F  3801               	iorlw	1
  4066  0C50  00D3               	movwf	??___fladd+1
  4067  0C51  0853               	movf	??___fladd+1,w
  4068  0C52  00DD               	movwf	___fladd@grs
  4069  0C53  2C56               	goto	l5974
  4070  0C54                     l5972:	
  4071  0C54  1003               	clrc
  4072  0C55  0CDD               	rrf	___fladd@grs,f
  4073  0C56                     l5974:	
  4074  0C56  184A               	btfsc	___fladd@b,0
  4075  0C57  17DD               	bsf	___fladd@grs,7
  4076  0C58  3001               	movlw	1
  4077  0C59  00D2               	movwf	??___fladd
  4078  0C5A                     u6015:	
  4079  0C5A  0D4D               	rlf	___fladd@b+3,w
  4080  0C5B  0CCD               	rrf	___fladd@b+3,f
  4081  0C5C  0CCC               	rrf	___fladd@b+2,f
  4082  0C5D  0CCB               	rrf	___fladd@b+1,f
  4083  0C5E  0CCA               	rrf	___fladd@b,f
  4084  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4085  0C60  2C5A               	goto	u6015
  4086  0C61  3001               	movlw	1
  4087  0C62  00D2               	movwf	??___fladd
  4088  0C63  0852               	movf	??___fladd,w
  4089  0C64  07DC               	addwf	___fladd@bexp,f
  4090  0C65  2D08               	goto	l6016
  4091  0C66                     l5982:	
  4092  0C66  084D               	movf	___fladd@b+3,w
  4093  0C67  3A80               	xorlw	128
  4094  0C68  00FF               	movwf	127
  4095  0C69  0851               	movf	___fladd@a+3,w
  4096  0C6A  3A80               	xorlw	128
  4097  0C6B  027F               	subwf	127,w
  4098  0C6C  1D03               	skipz
  4099  0C6D  2C78               	goto	u6023
  4100  0C6E  0850               	movf	___fladd@a+2,w
  4101  0C6F  024C               	subwf	___fladd@b+2,w
  4102  0C70  1D03               	skipz
  4103  0C71  2C78               	goto	u6023
  4104  0C72  084F               	movf	___fladd@a+1,w
  4105  0C73  024B               	subwf	___fladd@b+1,w
  4106  0C74  1D03               	skipz
  4107  0C75  2C78               	goto	u6023
  4108  0C76  084E               	movf	___fladd@a,w
  4109  0C77  024A               	subwf	___fladd@b,w
  4110  0C78                     u6023:	
  4111  0C78  1803               	skipnc
  4112  0C79  2CD0               	goto	l5992
  4113  0C7A  30FF               	movlw	255
  4114  0C7B  00D2               	movwf	??___fladd
  4115  0C7C  30FF               	movlw	255
  4116  0C7D  00D3               	movwf	??___fladd+1
  4117  0C7E  30FF               	movlw	255
  4118  0C7F  00D4               	movwf	??___fladd+2
  4119  0C80  30FF               	movlw	255
  4120  0C81  00D5               	movwf	??___fladd+3
  4121  0C82  084E               	movf	___fladd@a,w
  4122  0C83  00D6               	movwf	??___fladd+4
  4123  0C84  084F               	movf	___fladd@a+1,w
  4124  0C85  00D7               	movwf	??___fladd+5
  4125  0C86  0850               	movf	___fladd@a+2,w
  4126  0C87  00D8               	movwf	??___fladd+6
  4127  0C88  0851               	movf	___fladd@a+3,w
  4128  0C89  00D9               	movwf	??___fladd+7
  4129  0C8A  084A               	movf	___fladd@b,w
  4130  0C8B  02D6               	subwf	??___fladd+4,f
  4131  0C8C  084B               	movf	___fladd@b+1,w
  4132  0C8D  1C03               	skipc
  4133  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4134  0C8F  2C91               	goto	u6031
  4135  0C90  2C92               	goto	u6032
  4136  0C91                     u6031:	
  4137  0C91  02D7               	subwf	??___fladd+5,f
  4138  0C92                     u6032:	
  4139  0C92  084C               	movf	___fladd@b+2,w
  4140  0C93  1C03               	skipc
  4141  0C94  0F4C               	incfsz	___fladd@b+2,w
  4142  0C95  2C97               	goto	u6033
  4143  0C96  2C98               	goto	u6034
  4144  0C97                     u6033:	
  4145  0C97  02D8               	subwf	??___fladd+6,f
  4146  0C98                     u6034:	
  4147  0C98  084D               	movf	___fladd@b+3,w
  4148  0C99  1C03               	skipc
  4149  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4150  0C9B  2C9D               	goto	u6035
  4151  0C9C  2C9E               	goto	u6036
  4152  0C9D                     u6035:	
  4153  0C9D  02D9               	subwf	??___fladd+7,f
  4154  0C9E                     u6036:	
  4155  0C9E  0856               	movf	??___fladd+4,w
  4156  0C9F  07D2               	addwf	??___fladd,f
  4157  0CA0  0857               	movf	??___fladd+5,w
  4158  0CA1  1803               	skipnc
  4159  0CA2  0F57               	incfsz	??___fladd+5,w
  4160  0CA3  2CA5               	goto	u6040
  4161  0CA4  2CA6               	goto	u6041
  4162  0CA5                     u6040:	
  4163  0CA5  07D3               	addwf	??___fladd+1,f
  4164  0CA6                     u6041:	
  4165  0CA6  0858               	movf	??___fladd+6,w
  4166  0CA7  1803               	skipnc
  4167  0CA8  0F58               	incfsz	??___fladd+6,w
  4168  0CA9  2CAB               	goto	u6042
  4169  0CAA  2CAC               	goto	u6043
  4170  0CAB                     u6042:	
  4171  0CAB  07D4               	addwf	??___fladd+2,f
  4172  0CAC                     u6043:	
  4173  0CAC  0859               	movf	??___fladd+7,w
  4174  0CAD  1803               	skipnc
  4175  0CAE  0A59               	incf	??___fladd+7,w
  4176  0CAF  07D5               	addwf	??___fladd+3,f
  4177  0CB0  0855               	movf	??___fladd+3,w
  4178  0CB1  00CD               	movwf	___fladd@b+3
  4179  0CB2  0854               	movf	??___fladd+2,w
  4180  0CB3  00CC               	movwf	___fladd@b+2
  4181  0CB4  0853               	movf	??___fladd+1,w
  4182  0CB5  00CB               	movwf	___fladd@b+1
  4183  0CB6  0852               	movf	??___fladd,w
  4184  0CB7  00CA               	movwf	___fladd@b
  4185  0CB8  3080               	movlw	128
  4186  0CB9  00D2               	movwf	??___fladd
  4187  0CBA  0852               	movf	??___fladd,w
  4188  0CBB  06DA               	xorwf	___fladd@signs,f
  4189  0CBC  09DD               	comf	___fladd@grs,f
  4190  0CBD  0ADD               	incf	___fladd@grs,f
  4191  0CBE  085D               	movf	___fladd@grs,w
  4192  0CBF  1D03               	btfss	3,2
  4193  0CC0  2CDE               	goto	l1294
  4194  0CC1  3001               	movlw	1
  4195  0CC2  07CA               	addwf	___fladd@b,f
  4196  0CC3  3000               	movlw	0
  4197  0CC4  1803               	skipnc
  4198  0CC5  3001               	movlw	1
  4199  0CC6  07CB               	addwf	___fladd@b+1,f
  4200  0CC7  3000               	movlw	0
  4201  0CC8  1803               	skipnc
  4202  0CC9  3001               	movlw	1
  4203  0CCA  07CC               	addwf	___fladd@b+2,f
  4204  0CCB  3000               	movlw	0
  4205  0CCC  1803               	skipnc
  4206  0CCD  3001               	movlw	1
  4207  0CCE  07CD               	addwf	___fladd@b+3,f
  4208  0CCF  2CDE               	goto	l1294
  4209  0CD0                     l5992:	
  4210  0CD0  084E               	movf	___fladd@a,w
  4211  0CD1  02CA               	subwf	___fladd@b,f
  4212  0CD2  084F               	movf	___fladd@a+1,w
  4213  0CD3  1C03               	skipc
  4214  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4215  0CD5  02CB               	subwf	___fladd@b+1,f
  4216  0CD6  0850               	movf	___fladd@a+2,w
  4217  0CD7  1C03               	skipc
  4218  0CD8  0F50               	incfsz	___fladd@a+2,w
  4219  0CD9  02CC               	subwf	___fladd@b+2,f
  4220  0CDA  0851               	movf	___fladd@a+3,w
  4221  0CDB  1C03               	skipc
  4222  0CDC  0F51               	incfsz	___fladd@a+3,w
  4223  0CDD  02CD               	subwf	___fladd@b+3,f
  4224  0CDE                     l1294:	
  4225  0CDE  084D               	movf	___fladd@b+3,w
  4226  0CDF  044C               	iorwf	___fladd@b+2,w
  4227  0CE0  044B               	iorwf	___fladd@b+1,w
  4228  0CE1  044A               	iorwf	___fladd@b,w
  4229  0CE2  1D03               	skipz
  4230  0CE3  2D06               	goto	l6014
  4231  0CE4  085D               	movf	___fladd@grs,w
  4232  0CE5  1D03               	btfss	3,2
  4233  0CE6  2D06               	goto	l6014
  4234  0CE7  3000               	movlw	0
  4235  0CE8  00CD               	movwf	?___fladd+3
  4236  0CE9  3000               	movlw	0
  4237  0CEA  00CC               	movwf	?___fladd+2
  4238  0CEB  3000               	movlw	0
  4239  0CEC  00CB               	movwf	?___fladd+1
  4240  0CED  3000               	movlw	0
  4241  0CEE  00CA               	movwf	?___fladd
  4242  0CEF  0008               	return
  4243  0CF0                     l6000:	
  4244  0CF0  3001               	movlw	1
  4245  0CF1  00D2               	movwf	??___fladd
  4246  0CF2                     u6085:	
  4247  0CF2  1003               	clrc
  4248  0CF3  0DCA               	rlf	___fladd@b,f
  4249  0CF4  0DCB               	rlf	___fladd@b+1,f
  4250  0CF5  0DCC               	rlf	___fladd@b+2,f
  4251  0CF6  0DCD               	rlf	___fladd@b+3,f
  4252  0CF7  0BD2               	decfsz	??___fladd,f
  4253  0CF8  2CF2               	goto	u6085
  4254  0CF9  1BDD               	btfsc	___fladd@grs,7
  4255  0CFA  144A               	bsf	___fladd@b,0
  4256  0CFB  1C5D               	btfss	___fladd@grs,0
  4257  0CFC  2CFF               	goto	l6008
  4258  0CFD  1403               	setc
  4259  0CFE  2D00               	goto	L3
  4260  0CFF                     l6008:	
  4261  0CFF  1003               	clrc
  4262  0D00                     L3:	
  4263  0D00  0DDD               	rlf	___fladd@grs,f
  4264  0D01  085C               	movf	___fladd@bexp,w
  4265  0D02  1903               	btfsc	3,2
  4266  0D03  2D06               	goto	l6014
  4267  0D04  3001               	movlw	1
  4268  0D05  02DC               	subwf	___fladd@bexp,f
  4269  0D06                     l6014:	
  4270  0D06  1FCC               	btfss	___fladd@b+2,7
  4271  0D07  2CF0               	goto	l6000
  4272  0D08                     l6016:	
  4273  0D08  01DB               	clrf	___fladd@aexp
  4274  0D09  1FDD               	btfss	___fladd@grs,7
  4275  0D0A  2D13               	goto	l6026
  4276  0D0B  085D               	movf	___fladd@grs,w
  4277  0D0C  397F               	andlw	127
  4278  0D0D  1903               	btfsc	3,2
  4279  0D0E  184A               	btfsc	___fladd@b,0
  4280  0D0F  2D11               	goto	l6022
  4281  0D10  2D13               	goto	l6026
  4282  0D11                     l6022:	
  4283  0D11  01DB               	clrf	___fladd@aexp
  4284  0D12  0ADB               	incf	___fladd@aexp,f
  4285  0D13                     l6026:	
  4286  0D13  085B               	movf	___fladd@aexp,w
  4287  0D14  1903               	btfsc	3,2
  4288  0D15  2D46               	goto	l1307
  4289  0D16  3001               	movlw	1
  4290  0D17  07CA               	addwf	___fladd@b,f
  4291  0D18  3000               	movlw	0
  4292  0D19  1803               	skipnc
  4293  0D1A  3001               	movlw	1
  4294  0D1B  07CB               	addwf	___fladd@b+1,f
  4295  0D1C  3000               	movlw	0
  4296  0D1D  1803               	skipnc
  4297  0D1E  3001               	movlw	1
  4298  0D1F  07CC               	addwf	___fladd@b+2,f
  4299  0D20  3000               	movlw	0
  4300  0D21  1803               	skipnc
  4301  0D22  3001               	movlw	1
  4302  0D23  07CD               	addwf	___fladd@b+3,f
  4303  0D24  1C4D               	btfss	___fladd@b+3,0
  4304  0D25  2D46               	goto	l1307
  4305  0D26  084A               	movf	___fladd@b,w
  4306  0D27  00D2               	movwf	??___fladd
  4307  0D28  084B               	movf	___fladd@b+1,w
  4308  0D29  00D3               	movwf	??___fladd+1
  4309  0D2A  084C               	movf	___fladd@b+2,w
  4310  0D2B  00D4               	movwf	??___fladd+2
  4311  0D2C  084D               	movf	___fladd@b+3,w
  4312  0D2D  00D5               	movwf	??___fladd+3
  4313  0D2E  3001               	movlw	1
  4314  0D2F  00D6               	movwf	??___fladd+4
  4315  0D30                     u6185:	
  4316  0D30  0D55               	rlf	??___fladd+3,w
  4317  0D31  0CD5               	rrf	??___fladd+3,f
  4318  0D32  0CD4               	rrf	??___fladd+2,f
  4319  0D33  0CD3               	rrf	??___fladd+1,f
  4320  0D34  0CD2               	rrf	??___fladd,f
  4321  0D35  0BD6               	decfsz	??___fladd+4,f
  4322  0D36  2D30               	goto	u6185
  4323  0D37  0855               	movf	??___fladd+3,w
  4324  0D38  00CD               	movwf	___fladd@b+3
  4325  0D39  0854               	movf	??___fladd+2,w
  4326  0D3A  00CC               	movwf	___fladd@b+2
  4327  0D3B  0853               	movf	??___fladd+1,w
  4328  0D3C  00CB               	movwf	___fladd@b+1
  4329  0D3D  0852               	movf	??___fladd,w
  4330  0D3E  00CA               	movwf	___fladd@b
  4331  0D3F  0A5C               	incf	___fladd@bexp,w
  4332  0D40  1903               	btfsc	3,2
  4333  0D41  2D46               	goto	l1307
  4334  0D42  3001               	movlw	1
  4335  0D43  00D2               	movwf	??___fladd
  4336  0D44  0852               	movf	??___fladd,w
  4337  0D45  07DC               	addwf	___fladd@bexp,f
  4338  0D46                     l1307:	
  4339  0D46  0A5C               	incf	___fladd@bexp,w
  4340  0D47  1D03               	btfss	3,2
  4341  0D48  085C               	movf	___fladd@bexp,w
  4342  0D49  1D03               	btfss	3,2
  4343  0D4A  2D56               	goto	l6044
  4344  0D4B  3000               	movlw	0
  4345  0D4C  00CD               	movwf	___fladd@b+3
  4346  0D4D  3000               	movlw	0
  4347  0D4E  00CC               	movwf	___fladd@b+2
  4348  0D4F  3000               	movlw	0
  4349  0D50  00CB               	movwf	___fladd@b+1
  4350  0D51  3000               	movlw	0
  4351  0D52  00CA               	movwf	___fladd@b
  4352  0D53  085C               	movf	___fladd@bexp,w
  4353  0D54  1903               	btfsc	3,2
  4354  0D55  01DA               	clrf	___fladd@signs
  4355  0D56                     l6044:	
  4356  0D56  1C5C               	btfss	___fladd@bexp,0
  4357  0D57  2D5A               	goto	l6048
  4358  0D58  17CC               	bsf	___fladd@b+2,7
  4359  0D59  2D5E               	goto	l1315
  4360  0D5A                     l6048:	
  4361  0D5A  307F               	movlw	127
  4362  0D5B  00D2               	movwf	??___fladd
  4363  0D5C  0852               	movf	??___fladd,w
  4364  0D5D  05CC               	andwf	___fladd@b+2,f
  4365  0D5E                     l1315:	
  4366  0D5E  085C               	movf	___fladd@bexp,w
  4367  0D5F  00D2               	movwf	??___fladd
  4368  0D60  1003               	clrc
  4369  0D61  0C52               	rrf	??___fladd,w
  4370  0D62  00D3               	movwf	??___fladd+1
  4371  0D63  0853               	movf	??___fladd+1,w
  4372  0D64  00CD               	movwf	___fladd@b+3
  4373  0D65  1FDA               	btfss	___fladd@signs,7
  4374  0D66  0008               	return
  4375  0D67  17CD               	bsf	___fladd@b+3,7
  4376  0D68  0008               	return
  4377  0D69                     __end_of___fladd:	
  4378                           
  4379                           	psect	text5
  4380  1213                     __ptext5:	
  4381 ;; *************** function ___flge *****************
  4382 ;; Defined at:
  4383 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  ff1             4    0[BANK0 ] unsigned char 
  4386 ;;  ff2             4    4[BANK0 ] unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;		None               void
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 300/0
  4395 ;;		On exit  : 300/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       8       0       0       0
  4399 ;;      Locals:         0       0       0       0       0
  4400 ;;      Temps:          0       4       0       0       0
  4401 ;;      Totals:         0      12       0       0       0
  4402 ;;Total ram usage:       12 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_MediaPlacaVaccum
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function ___flge
  4414  1213                     ___flge:	
  4415                           
  4416                           ;incstack = 0
  4417                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4418  1213  3000               	movlw	0
  4419  1214  0520               	andwf	___flge@ff1,w
  4420  1215  00A8               	movwf	??___flge
  4421  1216  3000               	movlw	0
  4422  1217  0521               	andwf	___flge@ff1+1,w
  4423  1218  00A9               	movwf	??___flge+1
  4424  1219  3080               	movlw	128
  4425  121A  0522               	andwf	___flge@ff1+2,w
  4426  121B  00AA               	movwf	??___flge+2
  4427  121C  307F               	movlw	127
  4428  121D  0523               	andwf	___flge@ff1+3,w
  4429  121E  00AB               	movwf	??___flge+3
  4430  121F  082B               	movf	??___flge+3,w
  4431  1220  042A               	iorwf	??___flge+2,w
  4432  1221  0429               	iorwf	??___flge+1,w
  4433  1222  0428               	iorwf	??___flge,w
  4434  1223  1D03               	skipz
  4435  1224  2A2D               	goto	l1154
  4436  1225  3000               	movlw	0
  4437  1226  00A3               	movwf	___flge@ff1+3
  4438  1227  3000               	movlw	0
  4439  1228  00A2               	movwf	___flge@ff1+2
  4440  1229  3000               	movlw	0
  4441  122A  00A1               	movwf	___flge@ff1+1
  4442  122B  3000               	movlw	0
  4443  122C  00A0               	movwf	___flge@ff1
  4444  122D                     l1154:	
  4445  122D  3000               	movlw	0
  4446  122E  0524               	andwf	___flge@ff2,w
  4447  122F  00A8               	movwf	??___flge
  4448  1230  3000               	movlw	0
  4449  1231  0525               	andwf	___flge@ff2+1,w
  4450  1232  00A9               	movwf	??___flge+1
  4451  1233  3080               	movlw	128
  4452  1234  0526               	andwf	___flge@ff2+2,w
  4453  1235  00AA               	movwf	??___flge+2
  4454  1236  307F               	movlw	127
  4455  1237  0527               	andwf	___flge@ff2+3,w
  4456  1238  00AB               	movwf	??___flge+3
  4457  1239  082B               	movf	??___flge+3,w
  4458  123A  042A               	iorwf	??___flge+2,w
  4459  123B  0429               	iorwf	??___flge+1,w
  4460  123C  0428               	iorwf	??___flge,w
  4461  123D  1D03               	skipz
  4462  123E  2A47               	goto	l6648
  4463  123F  3000               	movlw	0
  4464  1240  00A7               	movwf	___flge@ff2+3
  4465  1241  3000               	movlw	0
  4466  1242  00A6               	movwf	___flge@ff2+2
  4467  1243  3000               	movlw	0
  4468  1244  00A5               	movwf	___flge@ff2+1
  4469  1245  3000               	movlw	0
  4470  1246  00A4               	movwf	___flge@ff2
  4471  1247                     l6648:	
  4472  1247  1FA3               	btfss	___flge@ff1+3,7
  4473  1248  2A6D               	goto	l6652
  4474  1249  3000               	movlw	0
  4475  124A  00A8               	movwf	??___flge
  4476  124B  3000               	movlw	0
  4477  124C  00A9               	movwf	??___flge+1
  4478  124D  3000               	movlw	0
  4479  124E  00AA               	movwf	??___flge+2
  4480  124F  3080               	movlw	128
  4481  1250  00AB               	movwf	??___flge+3
  4482  1251  0820               	movf	___flge@ff1,w
  4483  1252  02A8               	subwf	??___flge,f
  4484  1253  0821               	movf	___flge@ff1+1,w
  4485  1254  1C03               	skipc
  4486  1255  0F21               	incfsz	___flge@ff1+1,w
  4487  1256  2A58               	goto	u7111
  4488  1257  2A59               	goto	u7112
  4489  1258                     u7111:	
  4490  1258  02A9               	subwf	??___flge+1,f
  4491  1259                     u7112:	
  4492  1259  0822               	movf	___flge@ff1+2,w
  4493  125A  1C03               	skipc
  4494  125B  0F22               	incfsz	___flge@ff1+2,w
  4495  125C  2A5E               	goto	u7113
  4496  125D  2A5F               	goto	u7114
  4497  125E                     u7113:	
  4498  125E  02AA               	subwf	??___flge+2,f
  4499  125F                     u7114:	
  4500  125F  0823               	movf	___flge@ff1+3,w
  4501  1260  1C03               	skipc
  4502  1261  0F23               	incfsz	___flge@ff1+3,w
  4503  1262  2A64               	goto	u7115
  4504  1263  2A65               	goto	u7116
  4505  1264                     u7115:	
  4506  1264  02AB               	subwf	??___flge+3,f
  4507  1265                     u7116:	
  4508  1265  082B               	movf	??___flge+3,w
  4509  1266  00A3               	movwf	___flge@ff1+3
  4510  1267  082A               	movf	??___flge+2,w
  4511  1268  00A2               	movwf	___flge@ff1+2
  4512  1269  0829               	movf	??___flge+1,w
  4513  126A  00A1               	movwf	___flge@ff1+1
  4514  126B  0828               	movf	??___flge,w
  4515  126C  00A0               	movwf	___flge@ff1
  4516  126D                     l6652:	
  4517  126D  1FA7               	btfss	___flge@ff2+3,7
  4518  126E  2A93               	goto	l1157
  4519  126F  3000               	movlw	0
  4520  1270  00A8               	movwf	??___flge
  4521  1271  3000               	movlw	0
  4522  1272  00A9               	movwf	??___flge+1
  4523  1273  3000               	movlw	0
  4524  1274  00AA               	movwf	??___flge+2
  4525  1275  3080               	movlw	128
  4526  1276  00AB               	movwf	??___flge+3
  4527  1277  0824               	movf	___flge@ff2,w
  4528  1278  02A8               	subwf	??___flge,f
  4529  1279  0825               	movf	___flge@ff2+1,w
  4530  127A  1C03               	skipc
  4531  127B  0F25               	incfsz	___flge@ff2+1,w
  4532  127C  2A7E               	goto	u7131
  4533  127D  2A7F               	goto	u7132
  4534  127E                     u7131:	
  4535  127E  02A9               	subwf	??___flge+1,f
  4536  127F                     u7132:	
  4537  127F  0826               	movf	___flge@ff2+2,w
  4538  1280  1C03               	skipc
  4539  1281  0F26               	incfsz	___flge@ff2+2,w
  4540  1282  2A84               	goto	u7133
  4541  1283  2A85               	goto	u7134
  4542  1284                     u7133:	
  4543  1284  02AA               	subwf	??___flge+2,f
  4544  1285                     u7134:	
  4545  1285  0827               	movf	___flge@ff2+3,w
  4546  1286  1C03               	skipc
  4547  1287  0F27               	incfsz	___flge@ff2+3,w
  4548  1288  2A8A               	goto	u7135
  4549  1289  2A8B               	goto	u7136
  4550  128A                     u7135:	
  4551  128A  02AB               	subwf	??___flge+3,f
  4552  128B                     u7136:	
  4553  128B  082B               	movf	??___flge+3,w
  4554  128C  00A7               	movwf	___flge@ff2+3
  4555  128D  082A               	movf	??___flge+2,w
  4556  128E  00A6               	movwf	___flge@ff2+2
  4557  128F  0829               	movf	??___flge+1,w
  4558  1290  00A5               	movwf	___flge@ff2+1
  4559  1291  0828               	movf	??___flge,w
  4560  1292  00A4               	movwf	___flge@ff2
  4561  1293                     l1157:	
  4562  1293  3080               	movlw	128
  4563  1294  06A3               	xorwf	___flge@ff1+3,f
  4564  1295  3080               	movlw	128
  4565  1296  06A7               	xorwf	___flge@ff2+3,f
  4566  1297  0827               	movf	___flge@ff2+3,w
  4567  1298  0223               	subwf	___flge@ff1+3,w
  4568  1299  1D03               	skipz
  4569  129A  0008               	return
  4570  129B  0826               	movf	___flge@ff2+2,w
  4571  129C  0222               	subwf	___flge@ff1+2,w
  4572  129D  1D03               	skipz
  4573  129E  0008               	return
  4574  129F  0825               	movf	___flge@ff2+1,w
  4575  12A0  0221               	subwf	___flge@ff1+1,w
  4576  12A1  1D03               	skipz
  4577  12A2  0008               	return
  4578  12A3  0824               	movf	___flge@ff2,w
  4579  12A4  0220               	subwf	___flge@ff1,w
  4580  12A5  0008               	return
  4581  12A6                     __end_of___flge:	
  4582                           
  4583                           	psect	text6
  4584  099B                     __ptext6:	
  4585 ;; *************** function ___fldiv *****************
  4586 ;; Defined at:
  4587 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  a               4   33[BANK0 ] unsigned char 
  4590 ;;  b               4   37[BANK0 ] unsigned char 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  grs             4   53[BANK0 ] unsigned long 
  4593 ;;  rem             4   46[BANK0 ] unsigned long 
  4594 ;;  new_exp         2   51[BANK0 ] int 
  4595 ;;  aexp            1   58[BANK0 ] unsigned char 
  4596 ;;  bexp            1   57[BANK0 ] unsigned char 
  4597 ;;  sign            1   50[BANK0 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  4   33[BANK0 ] unsigned char 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, btemp+1
  4602 ;; Tracked objects:
  4603 ;;		On entry : 300/0
  4604 ;;		On exit  : 300/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       8       0       0       0
  4608 ;;      Locals:         0      13       0       0       0
  4609 ;;      Temps:          0       5       0       0       0
  4610 ;;      Totals:         0      26       0       0       0
  4611 ;;Total ram usage:       26 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_MediaPlacaVaccum
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function ___fldiv
  4623  099B                     ___fldiv:	
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4627  099B  0848               	movf	___fldiv@b+3,w
  4628  099C  3980               	andlw	128
  4629  099D  00C9               	movwf	??___fldiv
  4630  099E  0849               	movf	??___fldiv,w
  4631  099F  00D2               	movwf	___fldiv@sign
  4632  09A0  0848               	movf	___fldiv@b+3,w
  4633  09A1  00C9               	movwf	??___fldiv
  4634  09A2  0749               	addwf	??___fldiv,w
  4635  09A3  00CA               	movwf	??___fldiv+1
  4636  09A4  084A               	movf	??___fldiv+1,w
  4637  09A5  00D9               	movwf	___fldiv@bexp
  4638  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4639  09A7  1459               	bsf	___fldiv@bexp,0
  4640  09A8  0859               	movf	___fldiv@bexp,w
  4641  09A9  1903               	btfsc	3,2
  4642  09AA  29B9               	goto	l6686
  4643  09AB  0A59               	incf	___fldiv@bexp,w
  4644  09AC  1D03               	btfss	3,2
  4645  09AD  29B6               	goto	l6682
  4646  09AE  3000               	movlw	0
  4647  09AF  00C8               	movwf	___fldiv@b+3
  4648  09B0  3000               	movlw	0
  4649  09B1  00C7               	movwf	___fldiv@b+2
  4650  09B2  3000               	movlw	0
  4651  09B3  00C6               	movwf	___fldiv@b+1
  4652  09B4  3000               	movlw	0
  4653  09B5  00C5               	movwf	___fldiv@b
  4654  09B6                     l6682:	
  4655  09B6  17C7               	bsf	___fldiv@b+2,7
  4656  09B7  01C8               	clrf	___fldiv@b+3
  4657  09B8  29C1               	goto	l6688
  4658  09B9                     l6686:	
  4659  09B9  3000               	movlw	0
  4660  09BA  00C8               	movwf	___fldiv@b+3
  4661  09BB  3000               	movlw	0
  4662  09BC  00C7               	movwf	___fldiv@b+2
  4663  09BD  3000               	movlw	0
  4664  09BE  00C6               	movwf	___fldiv@b+1
  4665  09BF  3000               	movlw	0
  4666  09C0  00C5               	movwf	___fldiv@b
  4667  09C1                     l6688:	
  4668  09C1  0844               	movf	___fldiv@a+3,w
  4669  09C2  3980               	andlw	128
  4670  09C3  00C9               	movwf	??___fldiv
  4671  09C4  0849               	movf	??___fldiv,w
  4672  09C5  06D2               	xorwf	___fldiv@sign,f
  4673  09C6  0844               	movf	___fldiv@a+3,w
  4674  09C7  00C9               	movwf	??___fldiv
  4675  09C8  0749               	addwf	??___fldiv,w
  4676  09C9  00CA               	movwf	??___fldiv+1
  4677  09CA  084A               	movf	??___fldiv+1,w
  4678  09CB  00DA               	movwf	___fldiv@aexp
  4679  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4680  09CD  145A               	bsf	___fldiv@aexp,0
  4681  09CE  085A               	movf	___fldiv@aexp,w
  4682  09CF  1903               	btfsc	3,2
  4683  09D0  29DF               	goto	l6706
  4684  09D1  0A5A               	incf	___fldiv@aexp,w
  4685  09D2  1D03               	btfss	3,2
  4686  09D3  29DC               	goto	l6702
  4687  09D4  3000               	movlw	0
  4688  09D5  00C4               	movwf	___fldiv@a+3
  4689  09D6  3000               	movlw	0
  4690  09D7  00C3               	movwf	___fldiv@a+2
  4691  09D8  3000               	movlw	0
  4692  09D9  00C2               	movwf	___fldiv@a+1
  4693  09DA  3000               	movlw	0
  4694  09DB  00C1               	movwf	___fldiv@a
  4695  09DC                     l6702:	
  4696  09DC  17C3               	bsf	___fldiv@a+2,7
  4697  09DD  01C4               	clrf	___fldiv@a+3
  4698  09DE  29E7               	goto	l1329
  4699  09DF                     l6706:	
  4700  09DF  3000               	movlw	0
  4701  09E0  00C4               	movwf	___fldiv@a+3
  4702  09E1  3000               	movlw	0
  4703  09E2  00C3               	movwf	___fldiv@a+2
  4704  09E3  3000               	movlw	0
  4705  09E4  00C2               	movwf	___fldiv@a+1
  4706  09E5  3000               	movlw	0
  4707  09E6  00C1               	movwf	___fldiv@a
  4708  09E7                     l1329:	
  4709  09E7  0844               	movf	___fldiv@a+3,w
  4710  09E8  0443               	iorwf	___fldiv@a+2,w
  4711  09E9  0442               	iorwf	___fldiv@a+1,w
  4712  09EA  0441               	iorwf	___fldiv@a,w
  4713  09EB  1D03               	skipz
  4714  09EC  2A06               	goto	l6716
  4715  09ED  3000               	movlw	0
  4716  09EE  00C8               	movwf	___fldiv@b+3
  4717  09EF  3000               	movlw	0
  4718  09F0  00C7               	movwf	___fldiv@b+2
  4719  09F1  3000               	movlw	0
  4720  09F2  00C6               	movwf	___fldiv@b+1
  4721  09F3  3000               	movlw	0
  4722  09F4  00C5               	movwf	___fldiv@b
  4723  09F5  3080               	movlw	128
  4724  09F6  04C7               	iorwf	___fldiv@b+2,f
  4725  09F7  307F               	movlw	127
  4726  09F8  04C8               	iorwf	___fldiv@b+3,f
  4727  09F9                     L5:	
  4728  09F9  0852               	movf	___fldiv@sign,w
  4729  09FA  00C9               	movwf	??___fldiv
  4730  09FB  0849               	movf	??___fldiv,w
  4731  09FC  04C8               	iorwf	___fldiv@b+3,f
  4732  09FD  0848               	movf	___fldiv@b+3,w
  4733  09FE  00C4               	movwf	?___fldiv+3
  4734  09FF  0847               	movf	___fldiv@b+2,w
  4735  0A00  00C3               	movwf	?___fldiv+2
  4736  0A01  0846               	movf	___fldiv@b+1,w
  4737  0A02  00C2               	movwf	?___fldiv+1
  4738  0A03  0845               	movf	___fldiv@b,w
  4739  0A04  00C1               	movwf	?___fldiv
  4740  0A05  0008               	return
  4741  0A06                     l6716:	
  4742  0A06  0859               	movf	___fldiv@bexp,w
  4743  0A07  1D03               	btfss	3,2
  4744  0A08  2A12               	goto	l6722
  4745  0A09  3000               	movlw	0
  4746  0A0A  00C4               	movwf	?___fldiv+3
  4747  0A0B  3000               	movlw	0
  4748  0A0C  00C3               	movwf	?___fldiv+2
  4749  0A0D  3000               	movlw	0
  4750  0A0E  00C2               	movwf	?___fldiv+1
  4751  0A0F  3000               	movlw	0
  4752  0A10  00C1               	movwf	?___fldiv
  4753  0A11  0008               	return
  4754  0A12                     l6722:	
  4755  0A12  0859               	movf	___fldiv@bexp,w
  4756  0A13  00C9               	movwf	??___fldiv
  4757  0A14  01CA               	clrf	??___fldiv+1
  4758  0A15  084A               	movf	??___fldiv+1,w
  4759  0A16  00CC               	movwf	??___fldiv+3
  4760  0A17  085A               	movf	___fldiv@aexp,w
  4761  0A18  0249               	subwf	??___fldiv,w
  4762  0A19  00CB               	movwf	??___fldiv+2
  4763  0A1A  1C03               	skipc
  4764  0A1B  03CC               	decf	??___fldiv+3,f
  4765  0A1C  084B               	movf	??___fldiv+2,w
  4766  0A1D  3E7F               	addlw	127
  4767  0A1E  00D3               	movwf	___fldiv@new_exp
  4768  0A1F  084C               	movf	??___fldiv+3,w
  4769  0A20  1803               	skipnc
  4770  0A21  3E01               	addlw	1
  4771  0A22  3E00               	addlw	0
  4772  0A23  00D4               	movwf	___fldiv@new_exp+1
  4773  0A24  0848               	movf	___fldiv@b+3,w
  4774  0A25  00D1               	movwf	___fldiv@rem+3
  4775  0A26  0847               	movf	___fldiv@b+2,w
  4776  0A27  00D0               	movwf	___fldiv@rem+2
  4777  0A28  0846               	movf	___fldiv@b+1,w
  4778  0A29  00CF               	movwf	___fldiv@rem+1
  4779  0A2A  0845               	movf	___fldiv@b,w
  4780  0A2B  00CE               	movwf	___fldiv@rem
  4781  0A2C  3000               	movlw	0
  4782  0A2D  00C8               	movwf	___fldiv@b+3
  4783  0A2E  3000               	movlw	0
  4784  0A2F  00C7               	movwf	___fldiv@b+2
  4785  0A30  3000               	movlw	0
  4786  0A31  00C6               	movwf	___fldiv@b+1
  4787  0A32  3000               	movlw	0
  4788  0A33  00C5               	movwf	___fldiv@b
  4789  0A34  3000               	movlw	0
  4790  0A35  00D8               	movwf	___fldiv@grs+3
  4791  0A36  3000               	movlw	0
  4792  0A37  00D7               	movwf	___fldiv@grs+2
  4793  0A38  3000               	movlw	0
  4794  0A39  00D6               	movwf	___fldiv@grs+1
  4795  0A3A  3000               	movlw	0
  4796  0A3B  00D5               	movwf	___fldiv@grs
  4797  0A3C  01DA               	clrf	___fldiv@aexp
  4798  0A3D                     l6750:	
  4799  0A3D  301A               	movlw	26
  4800  0A3E  025A               	subwf	___fldiv@aexp,w
  4801  0A3F  1803               	btfsc	3,0
  4802  0A40  2A85               	goto	l6752
  4803  0A41  085A               	movf	___fldiv@aexp,w
  4804  0A42  1903               	btfsc	3,2
  4805  0A43  2A61               	goto	l6742
  4806  0A44  3001               	movlw	1
  4807  0A45  00C9               	movwf	??___fldiv
  4808  0A46                     u7245:	
  4809  0A46  1003               	clrc
  4810  0A47  0DCE               	rlf	___fldiv@rem,f
  4811  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4812  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4813  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4814  0A4B  0BC9               	decfsz	??___fldiv,f
  4815  0A4C  2A46               	goto	u7245
  4816  0A4D  3001               	movlw	1
  4817  0A4E  00C9               	movwf	??___fldiv
  4818  0A4F                     u7255:	
  4819  0A4F  1003               	clrc
  4820  0A50  0DC5               	rlf	___fldiv@b,f
  4821  0A51  0DC6               	rlf	___fldiv@b+1,f
  4822  0A52  0DC7               	rlf	___fldiv@b+2,f
  4823  0A53  0DC8               	rlf	___fldiv@b+3,f
  4824  0A54  0BC9               	decfsz	??___fldiv,f
  4825  0A55  2A4F               	goto	u7255
  4826  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4827  0A57  1445               	bsf	___fldiv@b,0
  4828  0A58  3001               	movlw	1
  4829  0A59  00C9               	movwf	??___fldiv
  4830  0A5A                     u7275:	
  4831  0A5A  1003               	clrc
  4832  0A5B  0DD5               	rlf	___fldiv@grs,f
  4833  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4834  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4835  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4836  0A5F  0BC9               	decfsz	??___fldiv,f
  4837  0A60  2A5A               	goto	u7275
  4838  0A61                     l6742:	
  4839  0A61  0844               	movf	___fldiv@a+3,w
  4840  0A62  0251               	subwf	___fldiv@rem+3,w
  4841  0A63  1D03               	skipz
  4842  0A64  2A6F               	goto	u7285
  4843  0A65  0843               	movf	___fldiv@a+2,w
  4844  0A66  0250               	subwf	___fldiv@rem+2,w
  4845  0A67  1D03               	skipz
  4846  0A68  2A6F               	goto	u7285
  4847  0A69  0842               	movf	___fldiv@a+1,w
  4848  0A6A  024F               	subwf	___fldiv@rem+1,w
  4849  0A6B  1D03               	skipz
  4850  0A6C  2A6F               	goto	u7285
  4851  0A6D  0841               	movf	___fldiv@a,w
  4852  0A6E  024E               	subwf	___fldiv@rem,w
  4853  0A6F                     u7285:	
  4854  0A6F  1C03               	skipc
  4855  0A70  2A80               	goto	l6748
  4856  0A71  1758               	bsf	___fldiv@grs+3,6
  4857  0A72  0841               	movf	___fldiv@a,w
  4858  0A73  02CE               	subwf	___fldiv@rem,f
  4859  0A74  0842               	movf	___fldiv@a+1,w
  4860  0A75  1C03               	skipc
  4861  0A76  0F42               	incfsz	___fldiv@a+1,w
  4862  0A77  02CF               	subwf	___fldiv@rem+1,f
  4863  0A78  0843               	movf	___fldiv@a+2,w
  4864  0A79  1C03               	skipc
  4865  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4866  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4867  0A7C  0844               	movf	___fldiv@a+3,w
  4868  0A7D  1C03               	skipc
  4869  0A7E  0F44               	incfsz	___fldiv@a+3,w
  4870  0A7F  02D1               	subwf	___fldiv@rem+3,f
  4871  0A80                     l6748:	
  4872  0A80  3001               	movlw	1
  4873  0A81  00C9               	movwf	??___fldiv
  4874  0A82  0849               	movf	??___fldiv,w
  4875  0A83  07DA               	addwf	___fldiv@aexp,f
  4876  0A84  2A3D               	goto	l6750
  4877  0A85                     l6752:	
  4878  0A85  0851               	movf	___fldiv@rem+3,w
  4879  0A86  0450               	iorwf	___fldiv@rem+2,w
  4880  0A87  044F               	iorwf	___fldiv@rem+1,w
  4881  0A88  044E               	iorwf	___fldiv@rem,w
  4882  0A89  1D03               	btfss	3,2
  4883  0A8A  1455               	bsf	___fldiv@grs,0
  4884  0A8B                     l6766:	
  4885  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  4886  0A8C  2AA8               	goto	l6768
  4887  0A8D  3001               	movlw	1
  4888  0A8E  00C9               	movwf	??___fldiv
  4889  0A8F                     u7315:	
  4890  0A8F  1003               	clrc
  4891  0A90  0DC5               	rlf	___fldiv@b,f
  4892  0A91  0DC6               	rlf	___fldiv@b+1,f
  4893  0A92  0DC7               	rlf	___fldiv@b+2,f
  4894  0A93  0DC8               	rlf	___fldiv@b+3,f
  4895  0A94  0BC9               	decfsz	??___fldiv,f
  4896  0A95  2A8F               	goto	u7315
  4897  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  4898  0A97  1445               	bsf	___fldiv@b,0
  4899  0A98  3001               	movlw	1
  4900  0A99  00C9               	movwf	??___fldiv
  4901  0A9A                     u7335:	
  4902  0A9A  1003               	clrc
  4903  0A9B  0DD5               	rlf	___fldiv@grs,f
  4904  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  4905  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  4906  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  4907  0A9F  0BC9               	decfsz	??___fldiv,f
  4908  0AA0  2A9A               	goto	u7335
  4909  0AA1  30FF               	movlw	255
  4910  0AA2  07D3               	addwf	___fldiv@new_exp,f
  4911  0AA3  1803               	skipnc
  4912  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  4913  0AA5  30FF               	movlw	255
  4914  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  4915  0AA7  2A8B               	goto	l6766
  4916  0AA8                     l6768:	
  4917  0AA8  01DA               	clrf	___fldiv@aexp
  4918  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  4919  0AAA  2AC1               	goto	l6778
  4920  0AAB  30FF               	movlw	255
  4921  0AAC  0555               	andwf	___fldiv@grs,w
  4922  0AAD  00C9               	movwf	??___fldiv
  4923  0AAE  30FF               	movlw	255
  4924  0AAF  0556               	andwf	___fldiv@grs+1,w
  4925  0AB0  00CA               	movwf	??___fldiv+1
  4926  0AB1  30FF               	movlw	255
  4927  0AB2  0557               	andwf	___fldiv@grs+2,w
  4928  0AB3  00CB               	movwf	??___fldiv+2
  4929  0AB4  307F               	movlw	127
  4930  0AB5  0558               	andwf	___fldiv@grs+3,w
  4931  0AB6  00CC               	movwf	??___fldiv+3
  4932  0AB7  084C               	movf	??___fldiv+3,w
  4933  0AB8  044B               	iorwf	??___fldiv+2,w
  4934  0AB9  044A               	iorwf	??___fldiv+1,w
  4935  0ABA  0449               	iorwf	??___fldiv,w
  4936  0ABB  1903               	skipnz
  4937  0ABC  1845               	btfsc	___fldiv@b,0
  4938  0ABD  2ABF               	goto	l6774
  4939  0ABE  2AC1               	goto	l6778
  4940  0ABF                     l6774:	
  4941  0ABF  01DA               	clrf	___fldiv@aexp
  4942  0AC0  0ADA               	incf	___fldiv@aexp,f
  4943  0AC1                     l6778:	
  4944  0AC1  085A               	movf	___fldiv@aexp,w
  4945  0AC2  1903               	btfsc	3,2
  4946  0AC3  2AF3               	goto	l6788
  4947  0AC4  3001               	movlw	1
  4948  0AC5  07C5               	addwf	___fldiv@b,f
  4949  0AC6  3000               	movlw	0
  4950  0AC7  1803               	skipnc
  4951  0AC8  3001               	movlw	1
  4952  0AC9  07C6               	addwf	___fldiv@b+1,f
  4953  0ACA  3000               	movlw	0
  4954  0ACB  1803               	skipnc
  4955  0ACC  3001               	movlw	1
  4956  0ACD  07C7               	addwf	___fldiv@b+2,f
  4957  0ACE  3000               	movlw	0
  4958  0ACF  1803               	skipnc
  4959  0AD0  3001               	movlw	1
  4960  0AD1  07C8               	addwf	___fldiv@b+3,f
  4961  0AD2  1C48               	btfss	___fldiv@b+3,0
  4962  0AD3  2AF3               	goto	l6788
  4963  0AD4  0845               	movf	___fldiv@b,w
  4964  0AD5  00C9               	movwf	??___fldiv
  4965  0AD6  0846               	movf	___fldiv@b+1,w
  4966  0AD7  00CA               	movwf	??___fldiv+1
  4967  0AD8  0847               	movf	___fldiv@b+2,w
  4968  0AD9  00CB               	movwf	??___fldiv+2
  4969  0ADA  0848               	movf	___fldiv@b+3,w
  4970  0ADB  00CC               	movwf	??___fldiv+3
  4971  0ADC  3001               	movlw	1
  4972  0ADD  00CD               	movwf	??___fldiv+4
  4973  0ADE                     u7405:	
  4974  0ADE  0D4C               	rlf	??___fldiv+3,w
  4975  0ADF  0CCC               	rrf	??___fldiv+3,f
  4976  0AE0  0CCB               	rrf	??___fldiv+2,f
  4977  0AE1  0CCA               	rrf	??___fldiv+1,f
  4978  0AE2  0CC9               	rrf	??___fldiv,f
  4979  0AE3  0BCD               	decfsz	??___fldiv+4,f
  4980  0AE4  2ADE               	goto	u7405
  4981  0AE5  084C               	movf	??___fldiv+3,w
  4982  0AE6  00C8               	movwf	___fldiv@b+3
  4983  0AE7  084B               	movf	??___fldiv+2,w
  4984  0AE8  00C7               	movwf	___fldiv@b+2
  4985  0AE9  084A               	movf	??___fldiv+1,w
  4986  0AEA  00C6               	movwf	___fldiv@b+1
  4987  0AEB  0849               	movf	??___fldiv,w
  4988  0AEC  00C5               	movwf	___fldiv@b
  4989  0AED  3001               	movlw	1
  4990  0AEE  07D3               	addwf	___fldiv@new_exp,f
  4991  0AEF  1803               	skipnc
  4992  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  4993  0AF1  3000               	movlw	0
  4994  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  4995  0AF3                     l6788:	
  4996  0AF3  0854               	movf	___fldiv@new_exp+1,w
  4997  0AF4  3A80               	xorlw	128
  4998  0AF5  00FF               	movwf	127
  4999  0AF6  3080               	movlw	128
  5000  0AF7  027F               	subwf	127,w
  5001  0AF8  1D03               	skipz
  5002  0AF9  2AFC               	goto	u7415
  5003  0AFA  30FF               	movlw	255
  5004  0AFB  0253               	subwf	___fldiv@new_exp,w
  5005  0AFC                     u7415:	
  5006  0AFC  1C03               	skipc
  5007  0AFD  2B0C               	goto	l6792
  5008  0AFE  30FF               	movlw	255
  5009  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0B01  00D3               	movwf	___fldiv@new_exp
  5012  0B02  3000               	movlw	0
  5013  0B03  00D4               	movwf	___fldiv@new_exp+1
  5014  0B04  3000               	movlw	0
  5015  0B05  00C8               	movwf	___fldiv@b+3
  5016  0B06  3000               	movlw	0
  5017  0B07  00C7               	movwf	___fldiv@b+2
  5018  0B08  3000               	movlw	0
  5019  0B09  00C6               	movwf	___fldiv@b+1
  5020  0B0A  3000               	movlw	0
  5021  0B0B  00C5               	movwf	___fldiv@b
  5022  0B0C                     l6792:	
  5023  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5024  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5025  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5026  0B0F  3A80               	xorlw	128
  5027  0B10  00FF               	movwf	127
  5028  0B11  3080               	movlw	128
  5029  0B12  027F               	subwf	127,w
  5030  0B13  1D03               	skipz
  5031  0B14  2B17               	goto	u7425
  5032  0B15  3001               	movlw	1
  5033  0B16  0253               	subwf	___fldiv@new_exp,w
  5034  0B17                     u7425:	
  5035  0B17  1803               	skipnc
  5036  0B18  2B26               	goto	l1351
  5037  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0B1B  01D3               	clrf	___fldiv@new_exp
  5040  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5041  0B1D  3000               	movlw	0
  5042  0B1E  00C8               	movwf	___fldiv@b+3
  5043  0B1F  3000               	movlw	0
  5044  0B20  00C7               	movwf	___fldiv@b+2
  5045  0B21  3000               	movlw	0
  5046  0B22  00C6               	movwf	___fldiv@b+1
  5047  0B23  3000               	movlw	0
  5048  0B24  00C5               	movwf	___fldiv@b
  5049  0B25  01D2               	clrf	___fldiv@sign
  5050  0B26                     l1351:	
  5051  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0B28  0853               	movf	___fldiv@new_exp,w
  5054  0B29  00C9               	movwf	??___fldiv
  5055  0B2A  0849               	movf	??___fldiv,w
  5056  0B2B  00D9               	movwf	___fldiv@bexp
  5057  0B2C  1C59               	btfss	___fldiv@bexp,0
  5058  0B2D  2B30               	goto	l6804
  5059  0B2E  17C7               	bsf	___fldiv@b+2,7
  5060  0B2F  2B34               	goto	l1353
  5061  0B30                     l6804:	
  5062  0B30  307F               	movlw	127
  5063  0B31  00C9               	movwf	??___fldiv
  5064  0B32  0849               	movf	??___fldiv,w
  5065  0B33  05C7               	andwf	___fldiv@b+2,f
  5066  0B34                     l1353:	
  5067  0B34  0859               	movf	___fldiv@bexp,w
  5068  0B35  00C9               	movwf	??___fldiv
  5069  0B36  1003               	clrc
  5070  0B37  0C49               	rrf	??___fldiv,w
  5071  0B38  00CA               	movwf	??___fldiv+1
  5072  0B39  084A               	movf	??___fldiv+1,w
  5073  0B3A  00C8               	movwf	___fldiv@b+3
  5074  0B3B  29F9               	goto	L5
  5075  0B3C                     __end_of___fldiv:	
  5076                           
  5077                           	psect	text7
  5078  1B4E                     __ptext7:	
  5079 ;; *************** function _Package_Usart_is_for_me *****************
  5080 ;; Defined at:
  5081 ;;		line 8 in file "protocolo.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  retorno         1    0[BANK0 ] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      unsigned char 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 200/100
  5092 ;;		On exit  : 300/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         0       0       0       0       0
  5096 ;;      Locals:         0       1       0       0       0
  5097 ;;      Temps:          0       0       0       0       0
  5098 ;;      Totals:         0       1       0       0       0
  5099 ;;Total ram usage:        1 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_MediaPlacaVaccum
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _Package_Usart_is_for_me
  5111  1B4E                     _Package_Usart_is_for_me:	
  5112                           
  5113                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5117  1B4E  1683               	bsf	3,5	;RP0=1, select bank1
  5118  1B4F  1C3B               	btfss	_generic_status^(0+128),0
  5119  1B50  2B63               	goto	l6582
  5120                           
  5121                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5122  1B51  1283               	bcf	3,5	;RP0=0, select bank2
  5123  1B52  1703               	bsf	3,6	;RP1=1, select bank2
  5124  1B53  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5125  1B54  1683               	bsf	3,5	;RP0=1, select bank1
  5126  1B55  1303               	bcf	3,6	;RP1=0, select bank1
  5127  1B56  0638               	xorwf	_Board_Number^(0+128),w
  5128  1B57  1903               	skipnz
  5129  1B58  2B5E               	goto	l800
  5130  1B59  1283               	bcf	3,5	;RP0=0, select bank2
  5131  1B5A  1703               	bsf	3,6	;RP1=1, select bank2
  5132  1B5B  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5133  1B5C  1D03               	btfss	3,2
  5134  1B5D  2B63               	goto	l6582
  5135  1B5E                     l800:	
  5136                           
  5137                           ;protocolo.c: 13:             retorno=1;
  5138  1B5E  1283               	bcf	3,5	;RP0=0, select bank0
  5139  1B5F  1303               	bcf	3,6	;RP1=0, select bank0
  5140  1B60  01A0               	clrf	Package_Usart_is_for_me@retorno
  5141  1B61  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5142  1B62  2B66               	goto	l6586
  5143  1B63                     l6582:	
  5144                           
  5145                           ;protocolo.c: 15:             retorno=0;
  5146  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  5147  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  5148  1B65  01A0               	clrf	Package_Usart_is_for_me@retorno
  5149  1B66                     l6586:	
  5150                           
  5151                           ;protocolo.c: 21:      return retorno;
  5152  1B66  0820               	movf	Package_Usart_is_for_me@retorno,w
  5153  1B67  0008               	return
  5154  1B68                     __end_of_Package_Usart_is_for_me:	
  5155                           
  5156                           	psect	text8
  5157  107D                     __ptext8:	
  5158 ;; *************** function _ADC_Media_10bits *****************
  5159 ;; Defined at:
  5160 ;;		line 20 in file "adc.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  canal           1    wreg     unsigned char 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  canal           1   38[BANK0 ] unsigned char 
  5165 ;;  value           2   39[BANK0 ] unsigned int 
  5166 ;;  i               1   41[BANK0 ] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  4   33[BANK0 ] float 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 300/100
  5173 ;;		On exit  : 300/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5176 ;;      Params:         0       4       0       0       0
  5177 ;;      Locals:         0       4       0       0       0
  5178 ;;      Temps:          0       1       0       0       0
  5179 ;;      Totals:         0       9       0       0       0
  5180 ;;Total ram usage:        9 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    2
  5183 ;; This function calls:
  5184 ;;		___lwdiv
  5185 ;;		___xxtofl
  5186 ;;		_captura
  5187 ;;		_my_delay_ms
  5188 ;; This function is called by:
  5189 ;;		_MediaPlacaVaccum
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _ADC_Media_10bits
  5195  107D                     _ADC_Media_10bits:	
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5199                           ;ADC_Media_10bits@canal stored from wreg
  5200  107D  1283               	bcf	3,5	;RP0=0, select bank0
  5201  107E  00C6               	movwf	ADC_Media_10bits@canal
  5202                           
  5203                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5204  107F  0846               	movf	ADC_Media_10bits@canal,w
  5205  1080  00C5               	movwf	??_ADC_Media_10bits
  5206  1081  0DC5               	rlf	??_ADC_Media_10bits,f
  5207  1082  0DC5               	rlf	??_ADC_Media_10bits,f
  5208  1083  081F               	movf	31,w	;volatile
  5209  1084  0645               	xorwf	??_ADC_Media_10bits,w
  5210  1085  39C3               	andlw	-61
  5211  1086  0645               	xorwf	??_ADC_Media_10bits,w
  5212  1087  009F               	movwf	31	;volatile
  5213                           
  5214                           ;adc.c: 24:       my_delay_ms(1);
  5215  1088  3000               	movlw	0
  5216  1089  00A3               	movwf	my_delay_ms@time+3
  5217  108A  3000               	movlw	0
  5218  108B  00A2               	movwf	my_delay_ms@time+2
  5219  108C  3000               	movlw	0
  5220  108D  00A1               	movwf	my_delay_ms@time+1
  5221  108E  3001               	movlw	1
  5222  108F  00A0               	movwf	my_delay_ms@time
  5223  1090  160A  158A  25CB  160A  118A  	fcall	_my_delay_ms
  5224                           
  5225                           ;adc.c: 26:       value=0;
  5226  1095  01C7               	clrf	ADC_Media_10bits@value
  5227  1096  01C8               	clrf	ADC_Media_10bits@value+1
  5228                           
  5229                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5230  1097  01C9               	clrf	ADC_Media_10bits@i
  5231  1098  0AC9               	incf	ADC_Media_10bits@i,f
  5232  1099                     l6564:	
  5233                           
  5234                           ;adc.c: 28:           value+=captura();
  5235  1099  160A  158A  228E  160A  118A  	fcall	_captura
  5236  109E  0820               	movf	?_captura,w
  5237  109F  07C7               	addwf	ADC_Media_10bits@value,f
  5238  10A0  1803               	skipnc
  5239  10A1  0AC8               	incf	ADC_Media_10bits@value+1,f
  5240  10A2  0821               	movf	?_captura+1,w
  5241  10A3  07C8               	addwf	ADC_Media_10bits@value+1,f
  5242  10A4  3001               	movlw	1
  5243  10A5  00C5               	movwf	??_ADC_Media_10bits
  5244  10A6  0845               	movf	??_ADC_Media_10bits,w
  5245  10A7  07C9               	addwf	ADC_Media_10bits@i,f
  5246  10A8  3033               	movlw	51
  5247  10A9  0249               	subwf	ADC_Media_10bits@i,w
  5248  10AA  1C03               	skipc
  5249  10AB  2899               	goto	l6564
  5250                           
  5251                           ;adc.c: 29:       value/=(i-1);
  5252  10AC  0849               	movf	ADC_Media_10bits@i,w
  5253  10AD  3EFF               	addlw	255
  5254  10AE  00A0               	movwf	___lwdiv@divisor
  5255  10AF  30FF               	movlw	255
  5256  10B0  1803               	skipnc
  5257  10B1  3000               	movlw	0
  5258  10B2  00A1               	movwf	___lwdiv@divisor+1
  5259  10B3  0848               	movf	ADC_Media_10bits@value+1,w
  5260  10B4  00A3               	movwf	___lwdiv@dividend+1
  5261  10B5  0847               	movf	ADC_Media_10bits@value,w
  5262  10B6  00A2               	movwf	___lwdiv@dividend
  5263  10B7  160A  158A  26AE  160A  118A  	fcall	___lwdiv
  5264  10BC  0821               	movf	?___lwdiv+1,w
  5265  10BD  00C8               	movwf	ADC_Media_10bits@value+1
  5266  10BE  0820               	movf	?___lwdiv,w
  5267  10BF  00C7               	movwf	ADC_Media_10bits@value
  5268                           
  5269                           ;adc.c: 30:       return value;
  5270  10C0  0847               	movf	ADC_Media_10bits@value,w
  5271  10C1  00B3               	movwf	___xxtofl@val
  5272  10C2  0848               	movf	ADC_Media_10bits@value+1,w
  5273  10C3  00B4               	movwf	___xxtofl@val+1
  5274  10C4  01B5               	clrf	___xxtofl@val+2
  5275  10C5  01B6               	clrf	___xxtofl@val+3
  5276  10C6  3000               	movlw	0
  5277  10C7  160A  118A  22A6   	fcall	___xxtofl
  5278  10CA  0836               	movf	?___xxtofl+3,w
  5279  10CB  00C4               	movwf	?_ADC_Media_10bits+3
  5280  10CC  0835               	movf	?___xxtofl+2,w
  5281  10CD  00C3               	movwf	?_ADC_Media_10bits+2
  5282  10CE  0834               	movf	?___xxtofl+1,w
  5283  10CF  00C2               	movwf	?_ADC_Media_10bits+1
  5284  10D0  0833               	movf	?___xxtofl,w
  5285  10D1  00C1               	movwf	?_ADC_Media_10bits
  5286  10D2  0008               	return
  5287  10D3                     __end_of_ADC_Media_10bits:	
  5288                           
  5289                           	psect	text9
  5290  12A6                     __ptext9:	
  5291 ;; *************** function ___xxtofl *****************
  5292 ;; Defined at:
  5293 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  sign            1    wreg     unsigned char 
  5296 ;;  val             4   19[BANK0 ] long 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  sign            1   27[BANK0 ] unsigned char 
  5299 ;;  arg             4   29[BANK0 ] unsigned long 
  5300 ;;  exp             1   28[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4   19[BANK0 ] unsigned char 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 300/0
  5307 ;;		On exit  : 300/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       4       0       0       0
  5311 ;;      Locals:         0       6       0       0       0
  5312 ;;      Temps:          0       4       0       0       0
  5313 ;;      Totals:         0      14       0       0       0
  5314 ;;Total ram usage:       14 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_MediaPlacaVaccum
  5321 ;;		_ADC_Media_10bits
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function ___xxtofl
  5327  12A6                     ___xxtofl:	
  5328                           
  5329                           ;incstack = 0
  5330                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5331                           ;___xxtofl@sign stored from wreg
  5332  12A6  00BB               	movwf	___xxtofl@sign
  5333  12A7  083B               	movf	___xxtofl@sign,w
  5334  12A8  1D03               	btfss	3,2
  5335  12A9  1FB6               	btfss	___xxtofl@val+3,7
  5336  12AA  2ABB               	goto	l6200
  5337  12AB  0933               	comf	___xxtofl@val,w
  5338  12AC  00BD               	movwf	___xxtofl@arg
  5339  12AD  0934               	comf	___xxtofl@val+1,w
  5340  12AE  00BE               	movwf	___xxtofl@arg+1
  5341  12AF  0935               	comf	___xxtofl@val+2,w
  5342  12B0  00BF               	movwf	___xxtofl@arg+2
  5343  12B1  0936               	comf	___xxtofl@val+3,w
  5344  12B2  00C0               	movwf	___xxtofl@arg+3
  5345  12B3  0ABD               	incf	___xxtofl@arg,f
  5346  12B4  1903               	skipnz
  5347  12B5  0ABE               	incf	___xxtofl@arg+1,f
  5348  12B6  1903               	skipnz
  5349  12B7  0ABF               	incf	___xxtofl@arg+2,f
  5350  12B8  1903               	skipnz
  5351  12B9  0AC0               	incf	___xxtofl@arg+3,f
  5352  12BA  2AC3               	goto	l1407
  5353  12BB                     l6200:	
  5354  12BB  0836               	movf	___xxtofl@val+3,w
  5355  12BC  00C0               	movwf	___xxtofl@arg+3
  5356  12BD  0835               	movf	___xxtofl@val+2,w
  5357  12BE  00BF               	movwf	___xxtofl@arg+2
  5358  12BF  0834               	movf	___xxtofl@val+1,w
  5359  12C0  00BE               	movwf	___xxtofl@arg+1
  5360  12C1  0833               	movf	___xxtofl@val,w
  5361  12C2  00BD               	movwf	___xxtofl@arg
  5362  12C3                     l1407:	
  5363  12C3  0836               	movf	___xxtofl@val+3,w
  5364  12C4  0435               	iorwf	___xxtofl@val+2,w
  5365  12C5  0434               	iorwf	___xxtofl@val+1,w
  5366  12C6  0433               	iorwf	___xxtofl@val,w
  5367  12C7  1D03               	skipz
  5368  12C8  2AD2               	goto	l6206
  5369  12C9  3000               	movlw	0
  5370  12CA  00B6               	movwf	?___xxtofl+3
  5371  12CB  3000               	movlw	0
  5372  12CC  00B5               	movwf	?___xxtofl+2
  5373  12CD  3000               	movlw	0
  5374  12CE  00B4               	movwf	?___xxtofl+1
  5375  12CF  3000               	movlw	0
  5376  12D0  00B3               	movwf	?___xxtofl
  5377  12D1  0008               	return
  5378  12D2                     l6206:	
  5379  12D2  3096               	movlw	150
  5380  12D3  00B7               	movwf	??___xxtofl
  5381  12D4  0837               	movf	??___xxtofl,w
  5382  12D5  00BC               	movwf	___xxtofl@exp
  5383  12D6                     l6210:	
  5384  12D6  30FE               	movlw	254
  5385  12D7  0540               	andwf	___xxtofl@arg+3,w
  5386  12D8  1903               	btfsc	3,2
  5387  12D9  2B03               	goto	l1413
  5388  12DA  3001               	movlw	1
  5389  12DB  00B7               	movwf	??___xxtofl
  5390  12DC  0837               	movf	??___xxtofl,w
  5391  12DD  07BC               	addwf	___xxtofl@exp,f
  5392  12DE  3001               	movlw	1
  5393  12DF                     u6645:	
  5394  12DF  1003               	clrc
  5395  12E0  0CC0               	rrf	___xxtofl@arg+3,f
  5396  12E1  0CBF               	rrf	___xxtofl@arg+2,f
  5397  12E2  0CBE               	rrf	___xxtofl@arg+1,f
  5398  12E3  0CBD               	rrf	___xxtofl@arg,f
  5399  12E4  3EFF               	addlw	-1
  5400  12E5  1D03               	skipz
  5401  12E6  2ADF               	goto	u6645
  5402  12E7  2AD6               	goto	l6210
  5403  12E8                     l6212:	
  5404  12E8  3001               	movlw	1
  5405  12E9  00B7               	movwf	??___xxtofl
  5406  12EA  0837               	movf	??___xxtofl,w
  5407  12EB  07BC               	addwf	___xxtofl@exp,f
  5408  12EC  3001               	movlw	1
  5409  12ED  07BD               	addwf	___xxtofl@arg,f
  5410  12EE  3000               	movlw	0
  5411  12EF  1803               	skipnc
  5412  12F0  3001               	movlw	1
  5413  12F1  07BE               	addwf	___xxtofl@arg+1,f
  5414  12F2  3000               	movlw	0
  5415  12F3  1803               	skipnc
  5416  12F4  3001               	movlw	1
  5417  12F5  07BF               	addwf	___xxtofl@arg+2,f
  5418  12F6  3000               	movlw	0
  5419  12F7  1803               	skipnc
  5420  12F8  3001               	movlw	1
  5421  12F9  07C0               	addwf	___xxtofl@arg+3,f
  5422  12FA  3001               	movlw	1
  5423  12FB                     u6665:	
  5424  12FB  1003               	clrc
  5425  12FC  0CC0               	rrf	___xxtofl@arg+3,f
  5426  12FD  0CBF               	rrf	___xxtofl@arg+2,f
  5427  12FE  0CBE               	rrf	___xxtofl@arg+1,f
  5428  12FF  0CBD               	rrf	___xxtofl@arg,f
  5429  1300  3EFF               	addlw	-1
  5430  1301  1D03               	skipz
  5431  1302  2AFB               	goto	u6665
  5432  1303                     l1413:	
  5433  1303  30FF               	movlw	255
  5434  1304  0540               	andwf	___xxtofl@arg+3,w
  5435  1305  1903               	btfsc	3,2
  5436  1306  2B17               	goto	l6220
  5437  1307  2AE8               	goto	l6212
  5438  1308                     l6222:	
  5439  1308  3002               	movlw	2
  5440  1309  023C               	subwf	___xxtofl@exp,w
  5441  130A  1C03               	btfss	3,0
  5442  130B  2B19               	goto	l1420
  5443  130C  3001               	movlw	1
  5444  130D  02BC               	subwf	___xxtofl@exp,f
  5445  130E  3001               	movlw	1
  5446  130F  00B7               	movwf	??___xxtofl
  5447  1310                     u6685:	
  5448  1310  1003               	clrc
  5449  1311  0DBD               	rlf	___xxtofl@arg,f
  5450  1312  0DBE               	rlf	___xxtofl@arg+1,f
  5451  1313  0DBF               	rlf	___xxtofl@arg+2,f
  5452  1314  0DC0               	rlf	___xxtofl@arg+3,f
  5453  1315  0BB7               	decfsz	??___xxtofl,f
  5454  1316  2B10               	goto	u6685
  5455  1317                     l6220:	
  5456  1317  1FBF               	btfss	___xxtofl@arg+2,7
  5457  1318  2B08               	goto	l6222
  5458  1319                     l1420:	
  5459  1319  183C               	btfsc	___xxtofl@exp,0
  5460  131A  2B23               	goto	l1421
  5461  131B  30FF               	movlw	255
  5462  131C  05BD               	andwf	___xxtofl@arg,f
  5463  131D  30FF               	movlw	255
  5464  131E  05BE               	andwf	___xxtofl@arg+1,f
  5465  131F  307F               	movlw	127
  5466  1320  05BF               	andwf	___xxtofl@arg+2,f
  5467  1321  30FF               	movlw	255
  5468  1322  05C0               	andwf	___xxtofl@arg+3,f
  5469  1323                     l1421:	
  5470  1323  1003               	clrc
  5471  1324  0CBC               	rrf	___xxtofl@exp,f
  5472  1325  083C               	movf	___xxtofl@exp,w
  5473  1326  00B7               	movwf	??___xxtofl
  5474  1327  01B8               	clrf	??___xxtofl+1
  5475  1328  01B9               	clrf	??___xxtofl+2
  5476  1329  01BA               	clrf	??___xxtofl+3
  5477  132A  3018               	movlw	24
  5478  132B                     u6725:	
  5479  132B  1003               	clrc
  5480  132C  0DB7               	rlf	??___xxtofl,f
  5481  132D  0DB8               	rlf	??___xxtofl+1,f
  5482  132E  0DB9               	rlf	??___xxtofl+2,f
  5483  132F  0DBA               	rlf	??___xxtofl+3,f
  5484  1330  3EFF               	addlw	-1
  5485  1331  1D03               	skipz
  5486  1332  2B2B               	goto	u6725
  5487  1333  0837               	movf	??___xxtofl,w
  5488  1334  04BD               	iorwf	___xxtofl@arg,f
  5489  1335  0838               	movf	??___xxtofl+1,w
  5490  1336  04BE               	iorwf	___xxtofl@arg+1,f
  5491  1337  0839               	movf	??___xxtofl+2,w
  5492  1338  04BF               	iorwf	___xxtofl@arg+2,f
  5493  1339  083A               	movf	??___xxtofl+3,w
  5494  133A  04C0               	iorwf	___xxtofl@arg+3,f
  5495  133B  083B               	movf	___xxtofl@sign,w
  5496  133C  1D03               	btfss	3,2
  5497  133D  1FB6               	btfss	___xxtofl@val+3,7
  5498  133E  2B40               	goto	l6234
  5499  133F  17C0               	bsf	___xxtofl@arg+3,7
  5500  1340                     l6234:	
  5501  1340  0840               	movf	___xxtofl@arg+3,w
  5502  1341  00B6               	movwf	?___xxtofl+3
  5503  1342  083F               	movf	___xxtofl@arg+2,w
  5504  1343  00B5               	movwf	?___xxtofl+2
  5505  1344  083E               	movf	___xxtofl@arg+1,w
  5506  1345  00B4               	movwf	?___xxtofl+1
  5507  1346  083D               	movf	___xxtofl@arg,w
  5508  1347  00B3               	movwf	?___xxtofl
  5509  1348  0008               	return
  5510  1349                     __end_of___xxtofl:	
  5511                           
  5512                           	psect	text10
  5513  1F26                     __ptext10:	
  5514 ;; *************** function _ADC_Max_10Bits *****************
  5515 ;; Defined at:
  5516 ;;		line 34 in file "adc.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  canal           1    wreg     unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  canal           1   13[BANK0 ] unsigned char 
  5521 ;;  value           2   16[BANK0 ] unsigned int 
  5522 ;;  Temp            2   14[BANK0 ] unsigned int 
  5523 ;;  i               1   18[BANK0 ] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  2   10[BANK0 ] unsigned int 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 300/100
  5530 ;;		On exit  : 300/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5533 ;;      Params:         0       2       0       0       0
  5534 ;;      Locals:         0       6       0       0       0
  5535 ;;      Temps:          0       1       0       0       0
  5536 ;;      Totals:         0       9       0       0       0
  5537 ;;Total ram usage:        9 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    2
  5540 ;; This function calls:
  5541 ;;		_captura
  5542 ;;		_my_delay_ms
  5543 ;; This function is called by:
  5544 ;;		_MediaPlacaVaccum
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _ADC_Max_10Bits
  5550  1F26                     _ADC_Max_10Bits:	
  5551                           
  5552                           ;incstack = 0
  5553                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5554                           ;ADC_Max_10Bits@canal stored from wreg
  5555  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  5556  1F27  00AD               	movwf	ADC_Max_10Bits@canal
  5557                           
  5558                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5559  1F28  082D               	movf	ADC_Max_10Bits@canal,w
  5560  1F29  00AC               	movwf	??_ADC_Max_10Bits
  5561  1F2A  0DAC               	rlf	??_ADC_Max_10Bits,f
  5562  1F2B  0DAC               	rlf	??_ADC_Max_10Bits,f
  5563  1F2C  081F               	movf	31,w	;volatile
  5564  1F2D  062C               	xorwf	??_ADC_Max_10Bits,w
  5565  1F2E  39C3               	andlw	-61
  5566  1F2F  062C               	xorwf	??_ADC_Max_10Bits,w
  5567  1F30  009F               	movwf	31	;volatile
  5568                           
  5569                           ;adc.c: 39:       my_delay_ms(1);
  5570  1F31  3000               	movlw	0
  5571  1F32  00A3               	movwf	my_delay_ms@time+3
  5572  1F33  3000               	movlw	0
  5573  1F34  00A2               	movwf	my_delay_ms@time+2
  5574  1F35  3000               	movlw	0
  5575  1F36  00A1               	movwf	my_delay_ms@time+1
  5576  1F37  3001               	movlw	1
  5577  1F38  00A0               	movwf	my_delay_ms@time
  5578  1F39  160A  158A  25CB  160A  158A  	fcall	_my_delay_ms
  5579                           
  5580                           ;adc.c: 41:       value=0;
  5581  1F3E  01B0               	clrf	ADC_Max_10Bits@value
  5582  1F3F  01B1               	clrf	ADC_Max_10Bits@value+1
  5583                           
  5584                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5585  1F40  01B2               	clrf	ADC_Max_10Bits@i
  5586  1F41  0AB2               	incf	ADC_Max_10Bits@i,f
  5587  1F42                     l6604:	
  5588                           
  5589                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5590  1F42  160A  158A  228E  160A  158A  	fcall	_captura
  5591  1F47  0821               	movf	?_captura+1,w
  5592  1F48  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5593  1F49  0820               	movf	?_captura,w
  5594  1F4A  00AE               	movwf	ADC_Max_10Bits@Temp
  5595                           
  5596                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5597  1F4B  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5598  1F4C  0231               	subwf	ADC_Max_10Bits@value+1,w
  5599  1F4D  1D03               	skipz
  5600  1F4E  2F51               	goto	u6995
  5601  1F4F  082E               	movf	ADC_Max_10Bits@Temp,w
  5602  1F50  0230               	subwf	ADC_Max_10Bits@value,w
  5603  1F51                     u6995:	
  5604  1F51  1803               	skipnc
  5605  1F52  2F57               	goto	l6610
  5606  1F53  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5607  1F54  00B1               	movwf	ADC_Max_10Bits@value+1
  5608  1F55  082E               	movf	ADC_Max_10Bits@Temp,w
  5609  1F56  00B0               	movwf	ADC_Max_10Bits@value
  5610  1F57                     l6610:	
  5611                           
  5612                           ;adc.c: 46:           }
  5613  1F57  3001               	movlw	1
  5614  1F58  00AC               	movwf	??_ADC_Max_10Bits
  5615  1F59  082C               	movf	??_ADC_Max_10Bits,w
  5616  1F5A  07B2               	addwf	ADC_Max_10Bits@i,f
  5617  1F5B  3033               	movlw	51
  5618  1F5C  0232               	subwf	ADC_Max_10Bits@i,w
  5619  1F5D  1C03               	skipc
  5620  1F5E  2F42               	goto	l6604
  5621                           
  5622                           ;adc.c: 47:       return value;
  5623  1F5F  0831               	movf	ADC_Max_10Bits@value+1,w
  5624  1F60  00AB               	movwf	?_ADC_Max_10Bits+1
  5625  1F61  0830               	movf	ADC_Max_10Bits@value,w
  5626  1F62  00AA               	movwf	?_ADC_Max_10Bits
  5627  1F63  0008               	return
  5628  1F64                     __end_of_ADC_Max_10Bits:	
  5629                           
  5630                           	psect	text11
  5631  1DCB                     __ptext11:	
  5632 ;; *************** function _my_delay_ms *****************
  5633 ;; Defined at:
  5634 ;;		line 5 in file "my_delay.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  time            4    0[BANK0 ] long 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  i               4    6[BANK0 ] long 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, btemp+1
  5643 ;; Tracked objects:
  5644 ;;		On entry : 300/0
  5645 ;;		On exit  : 300/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5648 ;;      Params:         0       4       0       0       0
  5649 ;;      Locals:         0       4       0       0       0
  5650 ;;      Temps:          0       2       0       0       0
  5651 ;;      Totals:         0      10       0       0       0
  5652 ;;Total ram usage:       10 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_MediaPlacaVaccum
  5659 ;;		_ADC_Media_10bits
  5660 ;;		_ADC_Max_10Bits
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function _my_delay_ms
  5666  1DCB                     _my_delay_ms:	
  5667                           
  5668                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5669                           
  5670                           ;incstack = 0
  5671                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5672  1DCB  3000               	movlw	0
  5673  1DCC  00A9               	movwf	my_delay_ms@i+3
  5674  1DCD  3000               	movlw	0
  5675  1DCE  00A8               	movwf	my_delay_ms@i+2
  5676  1DCF  3000               	movlw	0
  5677  1DD0  00A7               	movwf	my_delay_ms@i+1
  5678  1DD1  3000               	movlw	0
  5679  1DD2  00A6               	movwf	my_delay_ms@i
  5680  1DD3                     l5758:	
  5681  1DD3  0829               	movf	my_delay_ms@i+3,w
  5682  1DD4  3A80               	xorlw	128
  5683  1DD5  00FF               	movwf	127
  5684  1DD6  0823               	movf	my_delay_ms@time+3,w
  5685  1DD7  3A80               	xorlw	128
  5686  1DD8  027F               	subwf	127,w
  5687  1DD9  1D03               	skipz
  5688  1DDA  2DE5               	goto	u5583
  5689  1DDB  0822               	movf	my_delay_ms@time+2,w
  5690  1DDC  0228               	subwf	my_delay_ms@i+2,w
  5691  1DDD  1D03               	skipz
  5692  1DDE  2DE5               	goto	u5583
  5693  1DDF  0821               	movf	my_delay_ms@time+1,w
  5694  1DE0  0227               	subwf	my_delay_ms@i+1,w
  5695  1DE1  1D03               	skipz
  5696  1DE2  2DE5               	goto	u5583
  5697  1DE3  0820               	movf	my_delay_ms@time,w
  5698  1DE4  0226               	subwf	my_delay_ms@i,w
  5699  1DE5                     u5583:	
  5700  1DE5  1803               	btfsc	3,0
  5701  1DE6  0008               	return
  5702                           
  5703                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5704  1DE7  3003               	movlw	3
  5705  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5706  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5707  1DEA  00A5               	movwf	??_my_delay_ms+1
  5708  1DEB  3097               	movlw	151
  5709  1DEC  00A4               	movwf	??_my_delay_ms
  5710  1DED                     u7717:	
  5711  1DED  0BA4               	decfsz	??_my_delay_ms,f
  5712  1DEE  2DED               	goto	u7717
  5713  1DEF  0BA5               	decfsz	??_my_delay_ms+1,f
  5714  1DF0  2DED               	goto	u7717
  5715                           
  5716                           ;my_delay.c: 10:             }
  5717  1DF1  3001               	movlw	1
  5718  1DF2  1283               	bcf	3,5	;RP0=0, select bank0
  5719  1DF3  1303               	bcf	3,6	;RP1=0, select bank0
  5720  1DF4  07A6               	addwf	my_delay_ms@i,f
  5721  1DF5  3000               	movlw	0
  5722  1DF6  1803               	skipnc
  5723  1DF7  3001               	movlw	1
  5724  1DF8  07A7               	addwf	my_delay_ms@i+1,f
  5725  1DF9  3000               	movlw	0
  5726  1DFA  1803               	skipnc
  5727  1DFB  3001               	movlw	1
  5728  1DFC  07A8               	addwf	my_delay_ms@i+2,f
  5729  1DFD  3000               	movlw	0
  5730  1DFE  1803               	skipnc
  5731  1DFF  3001               	movlw	1
  5732  1E00  07A9               	addwf	my_delay_ms@i+3,f
  5733  1E01  2DD3               	goto	l5758
  5734  1E02                     __end_of_my_delay_ms:	
  5735                           
  5736                           	psect	text12
  5737  1A8E                     __ptext12:	
  5738 ;; *************** function _captura *****************
  5739 ;; Defined at:
  5740 ;;		line 140 in file "adc.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  2    0[BANK0 ] unsigned int 
  5747 ;; Registers used:
  5748 ;;		wreg
  5749 ;; Tracked objects:
  5750 ;;		On entry : 300/0
  5751 ;;		On exit  : 300/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5754 ;;      Params:         0       2       0       0       0
  5755 ;;      Locals:         0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0
  5757 ;;      Totals:         0       2       0       0       0
  5758 ;;Total ram usage:        2 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_ADC_Media_10bits
  5765 ;;		_ADC_Max_10Bits
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           
  5770                           ;psect for function _captura
  5771  1A8E                     _captura:	
  5772                           
  5773                           ;adc.c: 141:     ADCON0bits.GO=1;
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _captura: [wreg]
  5777  1A8E  149F               	bsf	31,1	;volatile
  5778  1A8F                     l478:	
  5779                           ;adc.c: 145:           }
  5780                           
  5781                           
  5782                           ;adc.c: 142:     while(ADCON0bits.GO)
  5783  1A8F  189F               	btfsc	31,1	;volatile
  5784  1A90  2A8F               	goto	l478
  5785                           
  5786                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5787  1A91  081E               	movf	30,w	;volatile
  5788  1A92  00A1               	movwf	?_captura+1
  5789  1A93  1683               	bsf	3,5	;RP0=1, select bank1
  5790  1A94  081E               	movf	30,w	;volatile
  5791  1A95  1283               	bcf	3,5	;RP0=0, select bank0
  5792  1A96  00A0               	movwf	?_captura
  5793  1A97  0008               	return
  5794  1A98                     __end_of_captura:	
  5795                           
  5796                           	psect	text13
  5797  1D00                     __ptext13:	
  5798 ;; *************** function _I2C_Master_Init *****************
  5799 ;; Defined at:
  5800 ;;		line 7 in file "I2C.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  c               4   14[BANK0 ] const unsigned long 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      void 
  5807 ;; Registers used:
  5808 ;;		wreg, status,2, status,0, pclath, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 300/0
  5811 ;;		On exit  : 300/100
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5814 ;;      Params:         0       4       0       0       0
  5815 ;;      Locals:         0       0       0       0       0
  5816 ;;      Temps:          0       4       0       0       0
  5817 ;;      Totals:         0       8       0       0       0
  5818 ;;Total ram usage:        8 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    2
  5821 ;; This function calls:
  5822 ;;		___lldiv
  5823 ;; This function is called by:
  5824 ;;		_main
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function _I2C_Master_Init
  5830  1D00                     _I2C_Master_Init:	
  5831                           
  5832                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5833                           
  5834                           ;incstack = 0
  5835                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5836  1D00  3028               	movlw	40
  5837  1D01  0094               	movwf	20	;volatile
  5838                           
  5839                           ;I2C.c: 11:   SSPCON2 = 0;
  5840  1D02  1683               	bsf	3,5	;RP0=1, select bank1
  5841  1D03  0191               	clrf	17	;volatile
  5842                           
  5843                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5844  1D04  1283               	bcf	3,5	;RP0=0, select bank0
  5845  1D05  082E               	movf	I2C_Master_Init@c,w
  5846  1D06  00B2               	movwf	??_I2C_Master_Init
  5847  1D07  082F               	movf	I2C_Master_Init@c+1,w
  5848  1D08  00B3               	movwf	??_I2C_Master_Init+1
  5849  1D09  0830               	movf	I2C_Master_Init@c+2,w
  5850  1D0A  00B4               	movwf	??_I2C_Master_Init+2
  5851  1D0B  0831               	movf	I2C_Master_Init@c+3,w
  5852  1D0C  00B5               	movwf	??_I2C_Master_Init+3
  5853  1D0D  3002               	movlw	2
  5854  1D0E                     u7445:	
  5855  1D0E  1003               	clrc
  5856  1D0F  0DB2               	rlf	??_I2C_Master_Init,f
  5857  1D10  0DB3               	rlf	??_I2C_Master_Init+1,f
  5858  1D11  0DB4               	rlf	??_I2C_Master_Init+2,f
  5859  1D12  0DB5               	rlf	??_I2C_Master_Init+3,f
  5860  1D13  3EFF               	addlw	-1
  5861  1D14  1D03               	skipz
  5862  1D15  2D0E               	goto	u7445
  5863  1D16  0835               	movf	??_I2C_Master_Init+3,w
  5864  1D17  00A3               	movwf	___lldiv@divisor+3
  5865  1D18  0834               	movf	??_I2C_Master_Init+2,w
  5866  1D19  00A2               	movwf	___lldiv@divisor+2
  5867  1D1A  0833               	movf	??_I2C_Master_Init+1,w
  5868  1D1B  00A1               	movwf	___lldiv@divisor+1
  5869  1D1C  0832               	movf	??_I2C_Master_Init,w
  5870  1D1D  00A0               	movwf	___lldiv@divisor
  5871  1D1E  3000               	movlw	0
  5872  1D1F  00A7               	movwf	___lldiv@dividend+3
  5873  1D20  307A               	movlw	122
  5874  1D21  00A6               	movwf	___lldiv@dividend+2
  5875  1D22  3012               	movlw	18
  5876  1D23  00A5               	movwf	___lldiv@dividend+1
  5877  1D24  3000               	movlw	0
  5878  1D25  00A4               	movwf	___lldiv@dividend
  5879  1D26  160A  118A  20D3   	fcall	___lldiv
  5880  1D29  0820               	movf	?___lldiv,w
  5881  1D2A  3EFF               	addlw	255
  5882  1D2B  1683               	bsf	3,5	;RP0=1, select bank1
  5883  1D2C  0093               	movwf	19	;volatile
  5884                           
  5885                           ;I2C.c: 13:   SSPSTAT = 0;
  5886  1D2D  0194               	clrf	20	;volatile
  5887                           
  5888                           ;I2C.c: 14:   TRISC3 = 1;
  5889  1D2E  1587               	bsf	7,3	;volatile
  5890                           
  5891                           ;I2C.c: 15:   TRISC4 = 1;
  5892  1D2F  1607               	bsf	7,4	;volatile
  5893  1D30  0008               	return
  5894  1D31                     __end_of_I2C_Master_Init:	
  5895                           
  5896                           	psect	text14
  5897  10D3                     __ptext14:	
  5898 ;; *************** function ___lldiv *****************
  5899 ;; Defined at:
  5900 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  divisor         4    0[BANK0 ] unsigned long 
  5903 ;;  dividend        4    4[BANK0 ] unsigned long 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  quotient        4    9[BANK0 ] unsigned long 
  5906 ;;  counter         1   13[BANK0 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  4    0[BANK0 ] unsigned long 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0
  5911 ;; Tracked objects:
  5912 ;;		On entry : 300/0
  5913 ;;		On exit  : 300/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       8       0       0       0
  5917 ;;      Locals:         0       5       0       0       0
  5918 ;;      Temps:          0       1       0       0       0
  5919 ;;      Totals:         0      14       0       0       0
  5920 ;;Total ram usage:       14 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    1
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_I2C_Master_Init
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function ___lldiv
  5932  10D3                     ___lldiv:	
  5933                           
  5934                           ;incstack = 0
  5935                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5936  10D3  3000               	movlw	0
  5937  10D4  00AC               	movwf	___lldiv@quotient+3
  5938  10D5  3000               	movlw	0
  5939  10D6  00AB               	movwf	___lldiv@quotient+2
  5940  10D7  3000               	movlw	0
  5941  10D8  00AA               	movwf	___lldiv@quotient+1
  5942  10D9  3000               	movlw	0
  5943  10DA  00A9               	movwf	___lldiv@quotient
  5944  10DB  0823               	movf	___lldiv@divisor+3,w
  5945  10DC  0422               	iorwf	___lldiv@divisor+2,w
  5946  10DD  0421               	iorwf	___lldiv@divisor+1,w
  5947  10DE  0420               	iorwf	___lldiv@divisor,w
  5948  10DF  1903               	skipnz
  5949  10E0  2928               	goto	l6638
  5950  10E1  01AD               	clrf	___lldiv@counter
  5951  10E2  0AAD               	incf	___lldiv@counter,f
  5952  10E3                     l6624:	
  5953  10E3  1BA3               	btfsc	___lldiv@divisor+3,7
  5954  10E4  28F3               	goto	l6626
  5955  10E5  3001               	movlw	1
  5956  10E6  00A8               	movwf	??___lldiv
  5957  10E7                     u7025:	
  5958  10E7  1003               	clrc
  5959  10E8  0DA0               	rlf	___lldiv@divisor,f
  5960  10E9  0DA1               	rlf	___lldiv@divisor+1,f
  5961  10EA  0DA2               	rlf	___lldiv@divisor+2,f
  5962  10EB  0DA3               	rlf	___lldiv@divisor+3,f
  5963  10EC  0BA8               	decfsz	??___lldiv,f
  5964  10ED  28E7               	goto	u7025
  5965  10EE  3001               	movlw	1
  5966  10EF  00A8               	movwf	??___lldiv
  5967  10F0  0828               	movf	??___lldiv,w
  5968  10F1  07AD               	addwf	___lldiv@counter,f
  5969  10F2  28E3               	goto	l6624
  5970  10F3                     l6626:	
  5971  10F3  3001               	movlw	1
  5972  10F4  00A8               	movwf	??___lldiv
  5973  10F5                     u7045:	
  5974  10F5  1003               	clrc
  5975  10F6  0DA9               	rlf	___lldiv@quotient,f
  5976  10F7  0DAA               	rlf	___lldiv@quotient+1,f
  5977  10F8  0DAB               	rlf	___lldiv@quotient+2,f
  5978  10F9  0DAC               	rlf	___lldiv@quotient+3,f
  5979  10FA  0BA8               	decfsz	??___lldiv,f
  5980  10FB  28F5               	goto	u7045
  5981  10FC  0823               	movf	___lldiv@divisor+3,w
  5982  10FD  0227               	subwf	___lldiv@dividend+3,w
  5983  10FE  1D03               	skipz
  5984  10FF  290A               	goto	u7055
  5985  1100  0822               	movf	___lldiv@divisor+2,w
  5986  1101  0226               	subwf	___lldiv@dividend+2,w
  5987  1102  1D03               	skipz
  5988  1103  290A               	goto	u7055
  5989  1104  0821               	movf	___lldiv@divisor+1,w
  5990  1105  0225               	subwf	___lldiv@dividend+1,w
  5991  1106  1D03               	skipz
  5992  1107  290A               	goto	u7055
  5993  1108  0820               	movf	___lldiv@divisor,w
  5994  1109  0224               	subwf	___lldiv@dividend,w
  5995  110A                     u7055:	
  5996  110A  1C03               	skipc
  5997  110B  291B               	goto	l6634
  5998  110C  0820               	movf	___lldiv@divisor,w
  5999  110D  02A4               	subwf	___lldiv@dividend,f
  6000  110E  0821               	movf	___lldiv@divisor+1,w
  6001  110F  1C03               	skipc
  6002  1110  0F21               	incfsz	___lldiv@divisor+1,w
  6003  1111  02A5               	subwf	___lldiv@dividend+1,f
  6004  1112  0822               	movf	___lldiv@divisor+2,w
  6005  1113  1C03               	skipc
  6006  1114  0F22               	incfsz	___lldiv@divisor+2,w
  6007  1115  02A6               	subwf	___lldiv@dividend+2,f
  6008  1116  0823               	movf	___lldiv@divisor+3,w
  6009  1117  1C03               	skipc
  6010  1118  0F23               	incfsz	___lldiv@divisor+3,w
  6011  1119  02A7               	subwf	___lldiv@dividend+3,f
  6012  111A  1429               	bsf	___lldiv@quotient,0
  6013  111B                     l6634:	
  6014  111B  3001               	movlw	1
  6015  111C                     u7065:	
  6016  111C  1003               	clrc
  6017  111D  0CA3               	rrf	___lldiv@divisor+3,f
  6018  111E  0CA2               	rrf	___lldiv@divisor+2,f
  6019  111F  0CA1               	rrf	___lldiv@divisor+1,f
  6020  1120  0CA0               	rrf	___lldiv@divisor,f
  6021  1121  3EFF               	addlw	-1
  6022  1122  1D03               	skipz
  6023  1123  291C               	goto	u7065
  6024  1124  3001               	movlw	1
  6025  1125  02AD               	subwf	___lldiv@counter,f
  6026  1126  1D03               	btfss	3,2
  6027  1127  28F3               	goto	l6626
  6028  1128                     l6638:	
  6029  1128  082C               	movf	___lldiv@quotient+3,w
  6030  1129  00A3               	movwf	?___lldiv+3
  6031  112A  082B               	movf	___lldiv@quotient+2,w
  6032  112B  00A2               	movwf	?___lldiv+2
  6033  112C  082A               	movf	___lldiv@quotient+1,w
  6034  112D  00A1               	movwf	?___lldiv+1
  6035  112E  0829               	movf	___lldiv@quotient,w
  6036  112F  00A0               	movwf	?___lldiv
  6037  1130  0008               	return
  6038  1131                     __end_of___lldiv:	
  6039                           
  6040                           	psect	text15
  6041  0037                     __ptext15:	
  6042 ;; *************** function _Decodify_Command *****************
  6043 ;; Defined at:
  6044 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  sizedata        1    3[BANK1 ] unsigned char 
  6049 ;;  add             1    2[BANK1 ] unsigned char 
  6050 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  6051 ;;  OutPut          4    6[BANK1 ] float 
  6052 ;;  tempint         2    4[BANK1 ] int 
  6053 ;;  dados           2    0[BANK1 ] int 
  6054 ;;  tempchar        1   10[BANK1 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 300/100
  6061 ;;		On exit  : 200/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         0       0       0       0       0
  6065 ;;      Locals:         0       0      15       0       0
  6066 ;;      Temps:          0       4       0       0       0
  6067 ;;      Totals:         0       4      15       0       0
  6068 ;;Total ram usage:       19 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    6
  6071 ;; This function calls:
  6072 ;;		_EEPROM_24C1025_Fill_All
  6073 ;;		_EEPROM_24C1025_Read_Buffer
  6074 ;;		_EEPROM_24C1025_Read_Byte
  6075 ;;		_EEPROM_24C1025_Read_Int
  6076 ;;		_EEPROM_24C1025_Read_Str
  6077 ;;		_EEPROM_24C1025_Write_Buffer
  6078 ;;		_EEPROM_24C1025_Write_Byte
  6079 ;;		_EEPROM_24C1025_Write_Int
  6080 ;;		_EEPROM_24C1025_Write_Str
  6081 ;;		_EEPROM_Read_Byte
  6082 ;;		_EEPROM_Read_Integer
  6083 ;;		_EEPROM_Read_String
  6084 ;;		_EEPROM_Write_Byte
  6085 ;;		_EEPROM_Write_Integer
  6086 ;;		_EEPROM_Write_String
  6087 ;;		_PROCULUS_Buzzer
  6088 ;;		_PROCULUS_Show_Screen
  6089 ;;		_PROCULUS_VP_Write_String
  6090 ;;		_Save_Log
  6091 ;;		_Send_Reply_OK
  6092 ;;		_Send_To_MB
  6093 ;;		_USART_put_buffer
  6094 ;;		_USART_put_int
  6095 ;;		_USART_put_string
  6096 ;;		_USART_putc
  6097 ;;		_USART_to_Protocol
  6098 ;;		___flmul
  6099 ;;		___fltol
  6100 ;;		_strlen
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _Decodify_Command
  6108  0037                     _Decodify_Command:	
  6109                           
  6110                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6114  0037  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6115  0038  160A  158A  27AB  120A  118A  	fcall	_USART_to_Protocol
  6116                           
  6117                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6118  003D  1683               	bsf	3,5	;RP0=1, select bank3
  6119  003E  1703               	bsf	3,6	;RP1=1, select bank3
  6120  003F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6121  0040  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0041  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0042  00DF               	movwf	??_Decodify_Command
  6124  0043  085F               	movf	??_Decodify_Command,w
  6125  0044  1683               	bsf	3,5	;RP0=1, select bank1
  6126  0045  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6127                           
  6128                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6129  0046  1703               	bsf	3,6	;RP1=1, select bank3
  6130  0047  0818               	movf	(_usart_protocol^(0+384)+8),w
  6131  0048  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0049  1303               	bcf	3,6	;RP1=0, select bank0
  6133  004A  00DF               	movwf	??_Decodify_Command
  6134  004B  085F               	movf	??_Decodify_Command,w
  6135  004C  1683               	bsf	3,5	;RP0=1, select bank1
  6136  004D  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6137                           
  6138                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6139  004E  1703               	bsf	3,6	;RP1=1, select bank3
  6140  004F  0819               	movf	(_usart_protocol^(0+384)+9),w
  6141  0050  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0051  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0052  00DF               	movwf	??_Decodify_Command
  6144  0053  085F               	movf	??_Decodify_Command,w
  6145  0054  1683               	bsf	3,5	;RP0=1, select bank1
  6146  0055  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6147                           
  6148                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6149  0056  1703               	bsf	3,6	;RP1=1, select bank3
  6150  0057  081A               	movf	(_usart_protocol^(0+384)+10),w
  6151  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6152  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6153  005A  00DF               	movwf	??_Decodify_Command
  6154  005B  085F               	movf	??_Decodify_Command,w
  6155  005C  1683               	bsf	3,5	;RP0=1, select bank1
  6156  005D  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6157                           
  6158                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6159  005E  2B84               	goto	l7122
  6160  005F                     l6962:	
  6161                           
  6162                           ;SlaveLiofilizadorVer1.c: 343:              Send_To_MB(11);
  6163  005F  300B               	movlw	11
  6164  0060  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6165                           
  6166                           ;SlaveLiofilizadorVer1.c: 344:              USART_put_string("FVERSION");
  6167  0065  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6168  0066  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0067  00A1               	movwf	USART_put_string@vetor
  6170  0068  3080               	movlw	128
  6171  0069  00A2               	movwf	USART_put_string@vetor+1
  6172  006A  160A  158A  2563   	fcall	_USART_put_string
  6173                           
  6174                           ;SlaveLiofilizadorVer1.c: 345:              break;
  6175  006D  0008               	return
  6176  006E                     l6966:	
  6177                           
  6178                           ;SlaveLiofilizadorVer1.c: 362:              if(usart_protocol.value[0]==0)
  6179  006E  1683               	bsf	3,5	;RP0=1, select bank3
  6180  006F  1703               	bsf	3,6	;RP1=1, select bank3
  6181  0070  0816               	movf	(_usart_protocol^(0+384)+6),w
  6182  0071  1D03               	btfss	3,2
  6183  0072  287C               	goto	l6970
  6184                           
  6185                           ;SlaveLiofilizadorVer1.c: 363:                 OutPut=Tensao1;
  6186  0073  1303               	bcf	3,6	;RP1=0, select bank1
  6187  0074  0823               	movf	(_Tensao1+3)^(0+128),w
  6188  0075  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6189  0076  0822               	movf	(_Tensao1+2)^(0+128),w
  6190  0077  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6191  0078  0821               	movf	(_Tensao1+1)^(0+128),w
  6192  0079  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6193  007A  0820               	movf	_Tensao1^(0+128),w
  6194  007B  2884               	goto	L6
  6195  007C                     l6970:	
  6196                           
  6197                           ;SlaveLiofilizadorVer1.c: 365:                 OutPut=Vaccum0;
  6198  007C  1303               	bcf	3,6	;RP1=0, select bank1
  6199  007D  0827               	movf	(_Vaccum0+3)^(0+128),w
  6200  007E  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6201  007F  0826               	movf	(_Vaccum0+2)^(0+128),w
  6202  0080  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6203  0081  0825               	movf	(_Vaccum0+1)^(0+128),w
  6204  0082  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6205  0083  0824               	movf	_Vaccum0^(0+128),w
  6206  0084                     L6:	
  6207  0084  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6208                           
  6209                           ;SlaveLiofilizadorVer1.c: 368:              OutPut*=10.0;
  6210  0085  3041               	movlw	65
  6211  0086  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0087  00AC               	movwf	___flmul@b+3
  6213  0088  3020               	movlw	32
  6214  0089  00AB               	movwf	___flmul@b+2
  6215  008A  3000               	movlw	0
  6216  008B  00AA               	movwf	___flmul@b+1
  6217  008C  3000               	movlw	0
  6218  008D  00A9               	movwf	___flmul@b
  6219  008E  1683               	bsf	3,5	;RP0=1, select bank1
  6220  008F  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6221  0090  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0091  00B0               	movwf	___flmul@a+3
  6223  0092  1683               	bsf	3,5	;RP0=1, select bank1
  6224  0093  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6225  0094  1283               	bcf	3,5	;RP0=0, select bank0
  6226  0095  00AF               	movwf	___flmul@a+2
  6227  0096  1683               	bsf	3,5	;RP0=1, select bank1
  6228  0097  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6229  0098  1283               	bcf	3,5	;RP0=0, select bank0
  6230  0099  00AE               	movwf	___flmul@a+1
  6231  009A  1683               	bsf	3,5	;RP0=1, select bank1
  6232  009B  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6233  009C  1283               	bcf	3,5	;RP0=0, select bank0
  6234  009D  00AD               	movwf	___flmul@a
  6235  009E  120A  118A  23D7  120A  118A  	fcall	___flmul
  6236  00A3  082C               	movf	?___flmul+3,w
  6237  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  6238  00A5  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6239  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  6240  00A7  082B               	movf	?___flmul+2,w
  6241  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  6242  00A9  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6243  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  6244  00AB  082A               	movf	?___flmul+1,w
  6245  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  6246  00AD  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6247  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  6248  00AF  0829               	movf	?___flmul,w
  6249  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  6250  00B1  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6251                           
  6252                           ;SlaveLiofilizadorVer1.c: 370:              INTCONbits.GIE=0;
  6253  00B2  138B               	bcf	11,7	;volatile
  6254                           
  6255                           ;SlaveLiofilizadorVer1.c: 371:              Send_To_MB(2);
  6256  00B3  3002               	movlw	2
  6257  00B4  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6258                           
  6259                           ;SlaveLiofilizadorVer1.c: 372:              USART_put_int(OutPut);
  6260  00B9  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6261  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  6262  00BB  00C6               	movwf	___fltol@f1+3
  6263  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  6264  00BD  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6265  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  6266  00BF  00C5               	movwf	___fltol@f1+2
  6267  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  6268  00C1  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6269  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  6270  00C3  00C4               	movwf	___fltol@f1+1
  6271  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  6272  00C5  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6273  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  6274  00C7  00C3               	movwf	___fltol@f1
  6275  00C8  160A  118A  2131  120A  118A  	fcall	___fltol
  6276  00CD  0844               	movf	?___fltol+1,w
  6277  00CE  00CF               	movwf	USART_put_int@value+1
  6278  00CF  0843               	movf	?___fltol,w
  6279  00D0  00CE               	movwf	USART_put_int@value
  6280  00D1  160A  158A  2305   	fcall	_USART_put_int
  6281                           
  6282                           ;SlaveLiofilizadorVer1.c: 373:              INTCONbits.GIE=1;
  6283  00D4  178B               	bsf	11,7	;volatile
  6284                           
  6285                           ;SlaveLiofilizadorVer1.c: 374:              break;
  6286  00D5  0008               	return
  6287  00D6                     l6982:	
  6288                           
  6289                           ;SlaveLiofilizadorVer1.c: 379:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6290  00D6  1683               	bsf	3,5	;RP0=1, select bank3
  6291  00D7  1703               	bsf	3,6	;RP1=1, select bank3
  6292  00D8  0816               	movf	(_usart_protocol^(0+384)+6),w
  6293  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  6294  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  6295  00DB  00DF               	movwf	??_Decodify_Command
  6296  00DC  085F               	movf	??_Decodify_Command,w
  6297  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  6298  00DE  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6299                           
  6300                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6301  00DF  1703               	bsf	3,6	;RP1=1, select bank3
  6302  00E0  0817               	movf	(_usart_protocol^(0+384)+7),w
  6303  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  6304  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  6305  00E3  00DF               	movwf	??_Decodify_Command
  6306  00E4  085F               	movf	??_Decodify_Command,w
  6307  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  6308  00E6  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6309                           
  6310                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6311  00E7  1703               	bsf	3,6	;RP1=1, select bank3
  6312  00E8  0818               	movf	(_usart_protocol^(0+384)+8),w
  6313  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  6314  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  6315  00EB  00DF               	movwf	??_Decodify_Command
  6316  00EC  085F               	movf	??_Decodify_Command,w
  6317  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  6318  00EE  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6319                           
  6320                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6321  00EF  1703               	bsf	3,6	;RP1=1, select bank3
  6322  00F0  0819               	movf	(_usart_protocol^(0+384)+9),w
  6323  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  6324  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  6325  00F3  00DF               	movwf	??_Decodify_Command
  6326  00F4  085F               	movf	??_Decodify_Command,w
  6327  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  6328  00F6  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6329                           
  6330                           ;SlaveLiofilizadorVer1.c: 383:              Save_Log(add_24LCxxxx);
  6331  00F7  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6332  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  6333  00F9  00DB               	movwf	Save_Log@add_datalog+3
  6334  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  6335  00FB  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6336  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  6337  00FD  00DA               	movwf	Save_Log@add_datalog+2
  6338  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  6339  00FF  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6340  0100  1283               	bcf	3,5	;RP0=0, select bank0
  6341  0101  00D9               	movwf	Save_Log@add_datalog+1
  6342  0102  1683               	bsf	3,5	;RP0=1, select bank1
  6343  0103  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6344  0104  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0105  00D8               	movwf	Save_Log@add_datalog
  6346  0106  160A  118A  219C   	fcall	_Save_Log
  6347                           
  6348                           ;SlaveLiofilizadorVer1.c: 384:              Delay_Led_Tmr0=0;
  6349  0109  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6350  010A  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6351                           
  6352                           ;SlaveLiofilizadorVer1.c: 385:              milisegundo=0;
  6353  010B  1683               	bsf	3,5	;RP0=1, select bank1
  6354  010C  01B0               	clrf	_milisegundo^(0+128)	;volatile
  6355  010D  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6356                           
  6357                           ;SlaveLiofilizadorVer1.c: 386:              break;
  6358  010E  0008               	return
  6359  010F                     l6990:	
  6360                           
  6361                           ;SlaveLiofilizadorVer1.c: 398:              Send_To_MB(2);
  6362  010F  3002               	movlw	2
  6363  0110  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6364                           
  6365                           ;SlaveLiofilizadorVer1.c: 400:              USART_put_int(1);
  6366  0115  3001               	movlw	1
  6367  0116  1283               	bcf	3,5	;RP0=0, select bank0
  6368  0117  00CE               	movwf	USART_put_int@value
  6369  0118  3000               	movlw	0
  6370  0119  00CF               	movwf	USART_put_int@value+1
  6371  011A  160A  158A  2305   	fcall	_USART_put_int
  6372                           
  6373                           ;SlaveLiofilizadorVer1.c: 410:              break;
  6374  011D  0008               	return
  6375  011E                     l6994:	
  6376                           
  6377                           ;SlaveLiofilizadorVer1.c: 427:              EEPROM_Write_Byte(usart_protocol.value[0],
  6378  011E  1683               	bsf	3,5	;RP0=1, select bank3
  6379  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6380  0120  0817               	movf	(_usart_protocol^(0+384)+7),w
  6381  0121  1283               	bcf	3,5	;RP0=0, select bank0
  6382  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6383  0123  00DF               	movwf	??_Decodify_Command
  6384  0124  085F               	movf	??_Decodify_Command,w
  6385  0125  00A0               	movwf	EEPROM_Write_Byte@dado
  6386  0126  1683               	bsf	3,5	;RP0=1, select bank3
  6387  0127  1703               	bsf	3,6	;RP1=1, select bank3
  6388  0128  0816               	movf	(_usart_protocol^(0+384)+6),w
  6389  0129  160A  158A  2672  120A  118A  	fcall	_EEPROM_Write_Byte
  6390  012E                     L7:	
  6391                           
  6392                           ;SlaveLiofilizadorVer1.c: 429:              Send_To_MB(3);
  6393  012E  3003               	movlw	3
  6394  012F  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6395                           
  6396                           ;SlaveLiofilizadorVer1.c: 430:              Send_Reply_OK();
  6397  0134  160A  158A  2285   	fcall	_Send_Reply_OK
  6398                           
  6399                           ;SlaveLiofilizadorVer1.c: 431:              break;
  6400  0137  0008               	return
  6401  0138                     l6998:	
  6402                           
  6403                           ;SlaveLiofilizadorVer1.c: 433:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6404  0138  1683               	bsf	3,5	;RP0=1, select bank3
  6405  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6406  013A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6407  013B  160A  158A  241C  120A  118A  	fcall	_EEPROM_Read_Byte
  6408  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6409  0141  00DF               	movwf	??_Decodify_Command
  6410  0142  085F               	movf	??_Decodify_Command,w
  6411  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6412  0144  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6413                           
  6414                           ;SlaveLiofilizadorVer1.c: 434:              Send_To_MB(1);;
  6415  0145  3001               	movlw	1
  6416  0146  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6417                           
  6418                           ;SlaveLiofilizadorVer1.c: 435:              USART_putc(tempchar);
  6419  014B  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6420  014C  160A  158A  22B9   	fcall	_USART_putc
  6421                           
  6422                           ;SlaveLiofilizadorVer1.c: 436:              break;
  6423  014F  0008               	return
  6424  0150                     l7004:	
  6425                           
  6426                           ;SlaveLiofilizadorVer1.c: 438:              {;SlaveLiofilizadorVer1.c: 439:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 440:              add=usart_protocol.value[
      +                          0];
  6427  0150  1683               	bsf	3,5	;RP0=1, select bank3
  6428  0151  1703               	bsf	3,6	;RP1=1, select bank3
  6429  0152  0816               	movf	(_usart_protocol^(0+384)+6),w
  6430  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0154  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0155  00DF               	movwf	??_Decodify_Command
  6433  0156  085F               	movf	??_Decodify_Command,w
  6434  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6435  0158  00DF               	movwf	Decodify_Command@add^(0+128)
  6436                           
  6437                           ;SlaveLiofilizadorVer1.c: 441:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6438  0159  1703               	bsf	3,6	;RP1=1, select bank3
  6439  015A  0818               	movf	(_usart_protocol^(0+384)+8),w
  6440  015B  1283               	bcf	3,5	;RP0=0, select bank0
  6441  015C  1303               	bcf	3,6	;RP1=0, select bank0
  6442  015D  00DF               	movwf	??_Decodify_Command
  6443  015E  01E0               	clrf	??_Decodify_Command+1
  6444  015F  1683               	bsf	3,5	;RP0=1, select bank3
  6445  0160  1703               	bsf	3,6	;RP1=1, select bank3
  6446  0161  0817               	movf	(_usart_protocol^(0+384)+7),w
  6447  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6449  0164  00E1               	movwf	??_Decodify_Command+2
  6450  0165  01E2               	clrf	??_Decodify_Command+3
  6451  0166  0861               	movf	??_Decodify_Command+2,w
  6452  0167  00E2               	movwf	??_Decodify_Command+3
  6453  0168  01E1               	clrf	??_Decodify_Command+2
  6454  0169  085F               	movf	??_Decodify_Command,w
  6455  016A  0461               	iorwf	??_Decodify_Command+2,w
  6456  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6457  016C  00DD               	movwf	Decodify_Command@dados^(0+128)
  6458  016D  1283               	bcf	3,5	;RP0=0, select bank0
  6459  016E  0860               	movf	??_Decodify_Command+1,w
  6460  016F  0462               	iorwf	??_Decodify_Command+3,w
  6461  0170  1683               	bsf	3,5	;RP0=1, select bank1
  6462  0171  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  6463                           
  6464                           ;SlaveLiofilizadorVer1.c: 442:              EEPROM_Write_Integer(add,dados);
  6465  0172  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  6466  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0174  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6468  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6469  0176  085D               	movf	Decodify_Command@dados^(0+128),w
  6470  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6471  0178  00A5               	movwf	EEPROM_Write_Integer@dado
  6472  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6473  017A  085F               	movf	Decodify_Command@add^(0+128),w
  6474  017B  160A  158A  2531  120A  118A  	fcall	_EEPROM_Write_Integer
  6475  0180  292E               	goto	L7
  6476  0181                     l7014:	
  6477                           ;SlaveLiofilizadorVer1.c: 443:              Send_To_MB(3);
  6478                           
  6479                           
  6480                           ;SlaveLiofilizadorVer1.c: 448:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6481  0181  1683               	bsf	3,5	;RP0=1, select bank3
  6482  0182  1703               	bsf	3,6	;RP1=1, select bank3
  6483  0183  0816               	movf	(_usart_protocol^(0+384)+6),w
  6484  0184  160A  158A  24AB  120A  118A  	fcall	_EEPROM_Read_Integer
  6485  0189  0824               	movf	?_EEPROM_Read_Integer+1,w
  6486  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6487  018B  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6488  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6489  018D  0823               	movf	?_EEPROM_Read_Integer,w
  6490  018E                     L8:	
  6491  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6492  018F  00E1               	movwf	Decodify_Command@tempint^(0+128)
  6493                           
  6494                           ;SlaveLiofilizadorVer1.c: 449:              Send_To_MB(2);
  6495  0190  3002               	movlw	2
  6496  0191  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6497                           
  6498                           ;SlaveLiofilizadorVer1.c: 450:              USART_put_int(tempint);
  6499  0196  0862               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6500  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6501  0198  00CF               	movwf	USART_put_int@value+1
  6502  0199  1683               	bsf	3,5	;RP0=1, select bank1
  6503  019A  0861               	movf	Decodify_Command@tempint^(0+128),w
  6504  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6505  019C  00CE               	movwf	USART_put_int@value
  6506  019D  160A  158A  2305   	fcall	_USART_put_int
  6507                           
  6508                           ;SlaveLiofilizadorVer1.c: 451:              break;
  6509  01A0  0008               	return
  6510  01A1                     l7020:	
  6511                           
  6512                           ;SlaveLiofilizadorVer1.c: 454:              EEPROM_Write_String(usart_protocol.value[0],
  6513  01A1  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6514  01A2  00DF               	movwf	??_Decodify_Command
  6515  01A3  085F               	movf	??_Decodify_Command,w
  6516  01A4  00A5               	movwf	EEPROM_Write_String@dado
  6517  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  6518  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  6519  01A7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6520  01A8  160A  158A  24D5  120A  118A  	fcall	_EEPROM_Write_String
  6521  01AD  292E               	goto	L7
  6522  01AE                     l7026:	
  6523                           ;SlaveLiofilizadorVer1.c: 456:              Send_To_MB(3);
  6524                           
  6525                           
  6526                           ;SlaveLiofilizadorVer1.c: 460:              {;SlaveLiofilizadorVer1.c: 461:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6527  01AE  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6528  01AF  00DF               	movwf	??_Decodify_Command
  6529  01B0  085F               	movf	??_Decodify_Command,w
  6530  01B1  00A3               	movwf	EEPROM_Read_String@dado
  6531  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  6532  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  6533  01B4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6534  01B5  160A  158A  23FC  120A  118A  	fcall	_EEPROM_Read_String
  6535                           
  6536                           ;SlaveLiofilizadorVer1.c: 462:              Send_To_MB(sizeof(buffer));
  6537  01BA  3021               	movlw	33
  6538  01BB                     L9:	
  6539  01BB  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 463:              USART_put_string(buffer);
  6542  01C0  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6543  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6544  01C2  00A1               	movwf	USART_put_string@vetor
  6545  01C3  3000               	movlw	0
  6546  01C4  00A2               	movwf	USART_put_string@vetor+1
  6547  01C5  160A  158A  2563   	fcall	_USART_put_string
  6548                           
  6549                           ;SlaveLiofilizadorVer1.c: 464:              break;
  6550  01C8  0008               	return
  6551  01C9                     l7032:	
  6552                           
  6553                           ;SlaveLiofilizadorVer1.c: 469:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6554  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6555  01CA  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6556  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  6557  01CC  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6558  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6559  01CE  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6560  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6561  01D0  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6562  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6563  01D2  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6564  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6565  01D4  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6566  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6567  01D6  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6568  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6569  01D8  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6570  01D9  1683               	bsf	3,5	;RP0=1, select bank3
  6571  01DA  1703               	bsf	3,6	;RP1=1, select bank3
  6572  01DB  081B               	movf	(_usart_protocol^(0+384)+11),w
  6573  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  6574  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  6575  01DE  00DF               	movwf	??_Decodify_Command
  6576  01DF  085F               	movf	??_Decodify_Command,w
  6577  01E0  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6578  01E1  1683               	bsf	3,5	;RP0=1, select bank3
  6579  01E2  1703               	bsf	3,6	;RP1=1, select bank3
  6580  01E3  0816               	movf	(_usart_protocol^(0+384)+6),w
  6581  01E4  160A  158A  22EF  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6582  01E9  292E               	goto	L7
  6583  01EA                     l7038:	
  6584                           ;SlaveLiofilizadorVer1.c: 472:              Send_To_MB(3);
  6585                           
  6586                           
  6587                           ;SlaveLiofilizadorVer1.c: 476:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6588  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6589  01EB  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6590  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6591  01ED  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6592  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6593  01EF  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6594  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6595  01F1  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6596  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6597  01F3  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6598  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6599  01F5  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6600  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6601  01F7  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6602  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6603  01F9  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6604  01FA  1683               	bsf	3,5	;RP0=1, select bank3
  6605  01FB  1703               	bsf	3,6	;RP1=1, select bank3
  6606  01FC  0816               	movf	(_usart_protocol^(0+384)+6),w
  6607  01FD  160A  158A  231B  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6608  0202  00DF               	movwf	??_Decodify_Command
  6609  0203  085F               	movf	??_Decodify_Command,w
  6610  0204  1683               	bsf	3,5	;RP0=1, select bank1
  6611  0205  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6612                           
  6613                           ;SlaveLiofilizadorVer1.c: 480:              Send_To_MB(1);
  6614  0206  3001               	movlw	1
  6615  0207  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6616                           
  6617                           ;SlaveLiofilizadorVer1.c: 481:              USART_putc(tempchar);
  6618  020C  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6619  020D  160A  158A  22B9   	fcall	_USART_putc
  6620                           
  6621                           ;SlaveLiofilizadorVer1.c: 482:              break;
  6622  0210  0008               	return
  6623  0211                     l7044:	
  6624                           
  6625                           ;SlaveLiofilizadorVer1.c: 484:              {;SlaveLiofilizadorVer1.c: 485:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6626  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6627  0212  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6628  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6629  0214  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6630  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6631  0216  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6632  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0218  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6634  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6635  021A  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6636  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6637  021C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6638  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6639  021E  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6640  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0220  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6642  0221  1683               	bsf	3,5	;RP0=1, select bank3
  6643  0222  1703               	bsf	3,6	;RP1=1, select bank3
  6644  0223  081C               	movf	(_usart_protocol^(0+384)+12),w
  6645  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6646  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6647  0226  00DF               	movwf	??_Decodify_Command
  6648  0227  01E0               	clrf	??_Decodify_Command+1
  6649  0228  1683               	bsf	3,5	;RP0=1, select bank3
  6650  0229  1703               	bsf	3,6	;RP1=1, select bank3
  6651  022A  081B               	movf	(_usart_protocol^(0+384)+11),w
  6652  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6653  022C  1303               	bcf	3,6	;RP1=0, select bank0
  6654  022D  00E1               	movwf	??_Decodify_Command+2
  6655  022E  01E2               	clrf	??_Decodify_Command+3
  6656  022F  0861               	movf	??_Decodify_Command+2,w
  6657  0230  00E2               	movwf	??_Decodify_Command+3
  6658  0231  01E1               	clrf	??_Decodify_Command+2
  6659  0232  085F               	movf	??_Decodify_Command,w
  6660  0233  0461               	iorwf	??_Decodify_Command+2,w
  6661  0234  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6662  0235  0860               	movf	??_Decodify_Command+1,w
  6663  0236  0462               	iorwf	??_Decodify_Command+3,w
  6664  0237  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6665  0238  1683               	bsf	3,5	;RP0=1, select bank3
  6666  0239  1703               	bsf	3,6	;RP1=1, select bank3
  6667  023A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6668  023B  160A  158A  23DC  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6669  0240  292E               	goto	L7
  6670  0241                     l7050:	
  6671                           ;SlaveLiofilizadorVer1.c: 490:              Send_To_MB(3);
  6672                           
  6673                           
  6674                           ;SlaveLiofilizadorVer1.c: 495:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6675  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6676  0242  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6677  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6678  0244  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6679  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6680  0246  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6681  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0248  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6683  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6684  024A  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6685  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6686  024C  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6687  024D  1683               	bsf	3,5	;RP0=1, select bank1
  6688  024E  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6689  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6690  0250  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6691  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6692  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6693  0253  0816               	movf	(_usart_protocol^(0+384)+6),w
  6694  0254  160A  158A  2483  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6695  0259  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6696  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6697  025B  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6698  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6699  025D  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6700  025E  298E               	goto	L8
  6701  025F                     l7056:	
  6702                           ;SlaveLiofilizadorVer1.c: 497:              Send_To_MB(2);
  6703                           
  6704                           
  6705                           ;SlaveLiofilizadorVer1.c: 503:              {;SlaveLiofilizadorVer1.c: 504:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 505:              sizedata=usart_protocol.value
      +                          [5];
  6706  025F  1683               	bsf	3,5	;RP0=1, select bank3
  6707  0260  1703               	bsf	3,6	;RP1=1, select bank3
  6708  0261  081B               	movf	(_usart_protocol^(0+384)+11),w
  6709  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6710  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6711  0264  00DF               	movwf	??_Decodify_Command
  6712  0265  085F               	movf	??_Decodify_Command,w
  6713  0266  1683               	bsf	3,5	;RP0=1, select bank1
  6714  0267  00E0               	movwf	Decodify_Command@sizedata^(0+128)
  6715                           
  6716                           ;SlaveLiofilizadorVer1.c: 506:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6717  0268  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6718  0269  1283               	bcf	3,5	;RP0=0, select bank0
  6719  026A  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6720  026B  1683               	bsf	3,5	;RP0=1, select bank1
  6721  026C  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6722  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6723  026E  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6724  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6725  0270  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6726  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6727  0272  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6728  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6729  0274  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6730  0275  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0276  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6732  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6733  0278  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6734  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6735  027A  00DF               	movwf	??_Decodify_Command
  6736  027B  085F               	movf	??_Decodify_Command,w
  6737  027C  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6738  027D  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6739  027E  00E0               	movwf	??_Decodify_Command+1
  6740  027F  0860               	movf	??_Decodify_Command+1,w
  6741  0280  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6742  0281  1683               	bsf	3,5	;RP0=1, select bank3
  6743  0282  1703               	bsf	3,6	;RP1=1, select bank3
  6744  0283  0816               	movf	(_usart_protocol^(0+384)+6),w
  6745  0284  120A  158A  2029  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6746                           
  6747                           ;SlaveLiofilizadorVer1.c: 511:              Send_To_MB(5);
  6748  0289  3005               	movlw	5
  6749  028A  120A  158A  2001  120A  118A  	fcall	_Send_To_MB
  6750                           
  6751                           ;SlaveLiofilizadorVer1.c: 512:              USART_put_buffer(buffer,sizedata);
  6752  028F  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6753  0290  1283               	bcf	3,5	;RP0=0, select bank0
  6754  0291  00DF               	movwf	??_Decodify_Command
  6755  0292  085F               	movf	??_Decodify_Command,w
  6756  0293  00A1               	movwf	USART_put_buffer@size
  6757  0294  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6758  0295  160A  158A  23A1   	fcall	_USART_put_buffer
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6761  0298  0008               	return
  6762  0299                     l7064:	
  6763                           
  6764                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6765  0299  1683               	bsf	3,5	;RP0=1, select bank1
  6766  029A  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6767  029B  1283               	bcf	3,5	;RP0=0, select bank0
  6768  029C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6769  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6770  029E  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6771  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6772  02A0  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6773  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  6774  02A2  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6775  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6776  02A4  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6777  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6778  02A6  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6779  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  6780  02A8  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6781  02A9  1683               	bsf	3,5	;RP0=1, select bank3
  6782  02AA  1703               	bsf	3,6	;RP1=1, select bank3
  6783  02AB  081B               	movf	(_usart_protocol^(0+384)+11),w
  6784  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6785  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  6786  02AE  00DF               	movwf	??_Decodify_Command
  6787  02AF  085F               	movf	??_Decodify_Command,w
  6788  02B0  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6789  02B1  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6790  02B2  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6791  02B3  3001               	movlw	1
  6792  02B4  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6793  02B5  1683               	bsf	3,5	;RP0=1, select bank3
  6794  02B6  1703               	bsf	3,6	;RP1=1, select bank3
  6795  02B7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6796  02B8  160A  118A  252A  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6797  02BD  292E               	goto	L7
  6798  02BE                     l7070:	
  6799                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6800                           
  6801                           
  6802                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6803  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  6804  02BF  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6805  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  6806  02C1  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6807  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  6808  02C3  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6809  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  6810  02C5  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6811  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6812  02C7  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6813  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  6814  02C9  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6815  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  6816  02CB  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6817  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  6818  02CD  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6819  02CE  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6820  02CF  00DF               	movwf	??_Decodify_Command
  6821  02D0  085F               	movf	??_Decodify_Command,w
  6822  02D1  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6823  02D2  1683               	bsf	3,5	;RP0=1, select bank3
  6824  02D3  1703               	bsf	3,6	;RP1=1, select bank3
  6825  02D4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6826  02D5  160A  118A  2437  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6827  02DA  292E               	goto	L7
  6828  02DB                     l7076:	
  6829                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6830                           
  6831                           
  6832                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6833  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  6834  02DC  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6835  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  6836  02DE  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6837  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6838  02E0  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6839  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  6840  02E2  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6841  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  6842  02E4  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6843  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  6844  02E6  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6845  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  6846  02E8  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6847  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  6848  02EA  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6849  02EB  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6850  02EC  00DF               	movwf	??_Decodify_Command
  6851  02ED  085F               	movf	??_Decodify_Command,w
  6852  02EE  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6853  02EF  1683               	bsf	3,5	;RP0=1, select bank3
  6854  02F0  1703               	bsf	3,6	;RP1=1, select bank3
  6855  02F1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6856  02F2  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6857                           
  6858                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6859  02F7  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6860  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  6861  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  6862  02FA  00A0               	movwf	strlen@s
  6863  02FB  3000               	movlw	0
  6864  02FC  00A1               	movwf	strlen@s+1
  6865  02FD  160A  158A  2368  120A  118A  	fcall	_strlen
  6866  0302  0820               	movf	?_strlen,w
  6867  0303  3E01               	addlw	1
  6868  0304  29BB               	goto	L9
  6869  0305                     l7080:	
  6870                           
  6871                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6872  0305  1683               	bsf	3,5	;RP0=1, select bank3
  6873  0306  1703               	bsf	3,6	;RP1=1, select bank3
  6874  0307  0817               	movf	(_usart_protocol^(0+384)+7),w
  6875  0308  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0309  1303               	bcf	3,6	;RP1=0, select bank0
  6877  030A  00DF               	movwf	??_Decodify_Command
  6878  030B  01E0               	clrf	??_Decodify_Command+1
  6879  030C  085F               	movf	??_Decodify_Command,w
  6880  030D  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6881  030E  0860               	movf	??_Decodify_Command+1,w
  6882  030F  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6883  0310  1683               	bsf	3,5	;RP0=1, select bank3
  6884  0311  1703               	bsf	3,6	;RP1=1, select bank3
  6885  0312  0816               	movf	(_usart_protocol^(0+384)+6),w
  6886  0313  120A  118A  27BF  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6887  0318  292E               	goto	L7
  6888  0319                     l7086:	
  6889                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  6890                           
  6891                           
  6892                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6893  0319  1683               	bsf	3,5	;RP0=1, select bank3
  6894  031A  1703               	bsf	3,6	;RP1=1, select bank3
  6895  031B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6896  031C  1283               	bcf	3,5	;RP0=0, select bank0
  6897  031D  1303               	bcf	3,6	;RP1=0, select bank0
  6898  031E  00DF               	movwf	??_Decodify_Command
  6899  031F  01E0               	clrf	??_Decodify_Command+1
  6900  0320  085F               	movf	??_Decodify_Command,w
  6901  0321  00D6               	movwf	PROCULUS_Show_Screen@screen
  6902  0322  0860               	movf	??_Decodify_Command+1,w
  6903  0323  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6904  0324  160A  158A  22DA  120A  118A  	fcall	_PROCULUS_Show_Screen
  6905  0329  292E               	goto	L7
  6906  032A                     l7092:	
  6907                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  6908                           
  6909                           
  6910                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6911  032A  1683               	bsf	3,5	;RP0=1, select bank3
  6912  032B  1703               	bsf	3,6	;RP1=1, select bank3
  6913  032C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6914  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6915  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6916  032F  00DF               	movwf	??_Decodify_Command
  6917  0330  01E0               	clrf	??_Decodify_Command+1
  6918  0331  085F               	movf	??_Decodify_Command,w
  6919  0332  00E0               	movwf	??_Decodify_Command+1
  6920  0333  01DF               	clrf	??_Decodify_Command
  6921  0334  1683               	bsf	3,5	;RP0=1, select bank3
  6922  0335  1703               	bsf	3,6	;RP1=1, select bank3
  6923  0336  0817               	movf	(_usart_protocol^(0+384)+7),w
  6924  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6925  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6926  0339  075F               	addwf	??_Decodify_Command,w
  6927  033A  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6928  033B  3000               	movlw	0
  6929  033C  1803               	skipnc
  6930  033D  3001               	movlw	1
  6931  033E  0760               	addwf	??_Decodify_Command+1,w
  6932  033F  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6933  0340  160A  158A  243E  120A  118A  	fcall	_PROCULUS_Buzzer
  6934  0345  292E               	goto	L7
  6935  0346                     l7098:	
  6936                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  6937                           
  6938                           
  6939                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6940  0346  1683               	bsf	3,5	;RP0=1, select bank3
  6941  0347  1703               	bsf	3,6	;RP1=1, select bank3
  6942  0348  0816               	movf	(_usart_protocol^(0+384)+6),w
  6943  0349  1283               	bcf	3,5	;RP0=0, select bank0
  6944  034A  1303               	bcf	3,6	;RP1=0, select bank0
  6945  034B  00DF               	movwf	??_Decodify_Command
  6946  034C  01E0               	clrf	??_Decodify_Command+1
  6947  034D  085F               	movf	??_Decodify_Command,w
  6948  034E  00E0               	movwf	??_Decodify_Command+1
  6949  034F  01DF               	clrf	??_Decodify_Command
  6950  0350  1683               	bsf	3,5	;RP0=1, select bank3
  6951  0351  1703               	bsf	3,6	;RP1=1, select bank3
  6952  0352  0817               	movf	(_usart_protocol^(0+384)+7),w
  6953  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6954  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6955  0355  075F               	addwf	??_Decodify_Command,w
  6956  0356  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6957  0357  3000               	movlw	0
  6958  0358  1803               	skipnc
  6959  0359  3001               	movlw	1
  6960  035A  0760               	addwf	??_Decodify_Command+1,w
  6961  035B  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6962  035C  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6963  035D  00E1               	movwf	??_Decodify_Command+2
  6964  035E  0861               	movf	??_Decodify_Command+2,w
  6965  035F  00DC               	movwf	PROCULUS_VP_Write_String@text
  6966  0360  160A  158A  2334  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6967  0365  292E               	goto	L7
  6968  0366                     l7104:	
  6969                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  6970                           
  6971                           
  6972                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  6973  0366  1683               	bsf	3,5	;RP0=1, select bank3
  6974  0367  1703               	bsf	3,6	;RP1=1, select bank3
  6975  0368  0816               	movf	(_usart_protocol^(0+384)+6),w
  6976  0369  1D03               	btfss	3,2
  6977  036A  2B76               	goto	l7110
  6978                           
  6979                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  6980  036B  0817               	movf	(_usart_protocol^(0+384)+7),w
  6981  036C  1D03               	btfss	3,2
  6982  036D  2B72               	goto	l410
  6983                           
  6984                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  6985  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6986  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6987  0370  1007               	bcf	7,0	;volatile
  6988  0371  292E               	goto	L7
  6989  0372                     l410:	
  6990                           ;SlaveLiofilizadorVer1.c: 577:                 else
  6991                           
  6992                           
  6993                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  6994  0372  1283               	bcf	3,5	;RP0=0, select bank0
  6995  0373  1303               	bcf	3,6	;RP1=0, select bank0
  6996  0374  1407               	bsf	7,0	;volatile
  6997  0375  292E               	goto	L7
  6998  0376                     l7110:	
  6999  0376  0316               	decf	(_usart_protocol^(0+384)+6),w
  7000  0377  1D03               	btfss	3,2
  7001  0378  292E               	goto	L7
  7002                           
  7003                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  7004  0379  0817               	movf	(_usart_protocol^(0+384)+7),w
  7005  037A  1D03               	btfss	3,2
  7006  037B  2B80               	goto	l414
  7007                           
  7008                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  7009  037C  1283               	bcf	3,5	;RP0=0, select bank0
  7010  037D  1303               	bcf	3,6	;RP1=0, select bank0
  7011  037E  1087               	bcf	7,1	;volatile
  7012  037F  292E               	goto	L7
  7013  0380                     l414:	
  7014                           ;SlaveLiofilizadorVer1.c: 584:                       else
  7015                           
  7016                           
  7017                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  7018  0380  1283               	bcf	3,5	;RP0=0, select bank0
  7019  0381  1303               	bcf	3,6	;RP1=0, select bank0
  7020  0382  1487               	bsf	7,1	;volatile
  7021  0383  292E               	goto	L7
  7022  0384                     l7122:	
  7023                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  7024                           
  7025  0384  1703               	bsf	3,6	;RP1=1, select bank3
  7026  0385  0814               	movf	(_usart_protocol^(0+384)+4),w
  7027  0386  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0387  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0388  00DF               	movwf	??_Decodify_Command
  7030  0389  01E0               	clrf	??_Decodify_Command+1
  7031                           
  7032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7033                           ; Switch size 1, requested type "simple"
  7034                           ; Number of cases is 1, Range of values is 0 to 0
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte            4     3 (average)
  7038                           ; direct_byte           11     8 (fixed)
  7039                           ; jumptable            260     6 (fixed)
  7040                           ;	Chosen strategy is simple_byte
  7041  038A  0860               	movf	??_Decodify_Command+1,w
  7042  038B  3A00               	xorlw	0	; case 0
  7043  038C  1903               	skipnz
  7044  038D  2B8F               	goto	l7280
  7045  038E  2BD6               	goto	l416
  7046  038F                     l7280:	
  7047                           
  7048                           ; Switch size 1, requested type "simple"
  7049                           ; Number of cases is 23, Range of values is 2 to 65
  7050                           ; switch strategies available:
  7051                           ; Name         Instructions Cycles
  7052                           ; simple_byte           70    36 (average)
  7053                           ; direct_byte          203    11 (fixed)
  7054                           ; jumptable            263     9 (fixed)
  7055                           ;	Chosen strategy is simple_byte
  7056  038F  085F               	movf	??_Decodify_Command,w
  7057  0390  3A02               	xorlw	2	; case 2
  7058  0391  1903               	skipnz
  7059  0392  28D6               	goto	l6982
  7060  0393  3A01               	xorlw	1	; case 3
  7061  0394  1903               	skipnz
  7062  0395  290F               	goto	l6990
  7063  0396  3A0B               	xorlw	11	; case 8
  7064  0397  1903               	skipnz
  7065  0398  291E               	goto	l6994
  7066  0399  3A01               	xorlw	1	; case 9
  7067  039A  1903               	skipnz
  7068  039B  2938               	goto	l6998
  7069  039C  3A03               	xorlw	3	; case 10
  7070  039D  1903               	skipnz
  7071  039E  2950               	goto	l7004
  7072  039F  3A01               	xorlw	1	; case 11
  7073  03A0  1903               	skipnz
  7074  03A1  2981               	goto	l7014
  7075  03A2  3A07               	xorlw	7	; case 12
  7076  03A3  1903               	skipnz
  7077  03A4  29A1               	goto	l7020
  7078  03A5  3A01               	xorlw	1	; case 13
  7079  03A6  1903               	skipnz
  7080  03A7  29AE               	goto	l7026
  7081  03A8  3A1C               	xorlw	28	; case 17
  7082  03A9  1903               	skipnz
  7083  03AA  29C9               	goto	l7032
  7084  03AB  3A03               	xorlw	3	; case 18
  7085  03AC  1903               	skipnz
  7086  03AD  29EA               	goto	l7038
  7087  03AE  3A01               	xorlw	1	; case 19
  7088  03AF  1903               	skipnz
  7089  03B0  2A11               	goto	l7044
  7090  03B1  3A07               	xorlw	7	; case 20
  7091  03B2  1903               	skipnz
  7092  03B3  2A41               	goto	l7050
  7093  03B4  3A01               	xorlw	1	; case 21
  7094  03B5  1903               	skipnz
  7095  03B6  2ABE               	goto	l7070
  7096  03B7  3A03               	xorlw	3	; case 22
  7097  03B8  1903               	skipnz
  7098  03B9  2ADB               	goto	l7076
  7099  03BA  3A01               	xorlw	1	; case 23
  7100  03BB  1903               	skipnz
  7101  03BC  2A99               	goto	l7064
  7102  03BD  3A0F               	xorlw	15	; case 24
  7103  03BE  1903               	skipnz
  7104  03BF  2A5F               	goto	l7056
  7105  03C0  3A01               	xorlw	1	; case 25
  7106  03C1  1903               	skipnz
  7107  03C2  2B05               	goto	l7080
  7108  03C3  3A03               	xorlw	3	; case 26
  7109  03C4  1903               	skipnz
  7110  03C5  286E               	goto	l6966
  7111  03C6  3A38               	xorlw	56	; case 34
  7112  03C7  1903               	skipnz
  7113  03C8  2B46               	goto	l7098
  7114  03C9  3A06               	xorlw	6	; case 36
  7115  03CA  1903               	skipnz
  7116  03CB  2B2A               	goto	l7092
  7117  03CC  3A01               	xorlw	1	; case 37
  7118  03CD  1903               	skipnz
  7119  03CE  2B19               	goto	l7086
  7120  03CF  3A15               	xorlw	21	; case 48
  7121  03D0  1903               	skipnz
  7122  03D1  2B66               	goto	l7104
  7123  03D2  3A71               	xorlw	113	; case 65
  7124  03D3  1903               	skipnz
  7125  03D4  285F               	goto	l6962
  7126  03D5  2BD6               	goto	l416
  7127  03D6                     l416:	
  7128  03D6  0008               	return
  7129  03D7                     __end_of_Decodify_Command:	
  7130                           
  7131                           	psect	text16
  7132  1FAB                     __ptext16:	
  7133 ;; *************** function _USART_to_Protocol *****************
  7134 ;; Defined at:
  7135 ;;		line 77 in file "usart.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  usart_protoc    1    wreg     PTR struct .
  7138 ;;		 -> usart_protocol(58), 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7141 ;;		 -> usart_protocol(58), 
  7142 ;;  i               2    2[BANK0 ] int 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 300/100
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7152 ;;      Params:         0       0       0       0       0
  7153 ;;      Locals:         0       3       0       0       0
  7154 ;;      Temps:          0       2       0       0       0
  7155 ;;      Totals:         0       5       0       0       0
  7156 ;;Total ram usage:        5 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_Decodify_Command
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           
  7167                           ;psect for function _USART_to_Protocol
  7168  1FAB                     _USART_to_Protocol:	
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7172                           ;USART_to_Protocol@usart_protocol stored from wreg
  7173  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  7174  1FAC  00A4               	movwf	USART_to_Protocol@usart_protocol
  7175                           
  7176                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7177  1FAD  0824               	movf	USART_to_Protocol@usart_protocol,w
  7178  1FAE  0084               	movwf	4
  7179  1FAF  1703               	bsf	3,6	;RP1=1, select bank2
  7180  1FB0  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7181  1FB1  1783               	bsf	3,7	;select IRP bank2
  7182  1FB2  0080               	movwf	0
  7183  1FB3  0A84               	incf	4,f
  7184  1FB4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7185  1FB5  0080               	movwf	0
  7186                           
  7187                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7188  1FB6  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7189  1FB7  1303               	bcf	3,6	;RP1=0, select bank0
  7190  1FB8  00A0               	movwf	??_USART_to_Protocol
  7191  1FB9  0824               	movf	USART_to_Protocol@usart_protocol,w
  7192  1FBA  3E02               	addlw	2
  7193  1FBB  0084               	movwf	4
  7194  1FBC  0820               	movf	??_USART_to_Protocol,w
  7195  1FBD  0080               	movwf	0
  7196                           
  7197                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7198  1FBE  1703               	bsf	3,6	;RP1=1, select bank2
  7199  1FBF  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7200  1FC0  1303               	bcf	3,6	;RP1=0, select bank0
  7201  1FC1  00A0               	movwf	??_USART_to_Protocol
  7202  1FC2  0824               	movf	USART_to_Protocol@usart_protocol,w
  7203  1FC3  3E03               	addlw	3
  7204  1FC4  0084               	movwf	4
  7205  1FC5  0820               	movf	??_USART_to_Protocol,w
  7206  1FC6  0080               	movwf	0
  7207                           
  7208                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7209  1FC7  1703               	bsf	3,6	;RP1=1, select bank2
  7210  1FC8  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7211  1FC9  1303               	bcf	3,6	;RP1=0, select bank0
  7212  1FCA  00A0               	movwf	??_USART_to_Protocol
  7213  1FCB  0824               	movf	USART_to_Protocol@usart_protocol,w
  7214  1FCC  3E04               	addlw	4
  7215  1FCD  0084               	movwf	4
  7216  1FCE  0820               	movf	??_USART_to_Protocol,w
  7217  1FCF  0080               	movwf	0
  7218                           
  7219                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7220  1FD0  1703               	bsf	3,6	;RP1=1, select bank2
  7221  1FD1  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7222  1FD2  1303               	bcf	3,6	;RP1=0, select bank0
  7223  1FD3  00A0               	movwf	??_USART_to_Protocol
  7224  1FD4  0824               	movf	USART_to_Protocol@usart_protocol,w
  7225  1FD5  3E05               	addlw	5
  7226  1FD6  0084               	movwf	4
  7227  1FD7  0820               	movf	??_USART_to_Protocol,w
  7228  1FD8  0080               	movwf	0
  7229                           
  7230                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7231  1FD9  01A2               	clrf	USART_to_Protocol@i
  7232  1FDA  01A3               	clrf	USART_to_Protocol@i+1
  7233  1FDB                     l6496:	
  7234  1FDB  0824               	movf	USART_to_Protocol@usart_protocol,w
  7235  1FDC  3E05               	addlw	5
  7236  1FDD  0084               	movwf	4
  7237  1FDE  0823               	movf	USART_to_Protocol@i+1,w
  7238  1FDF  3A80               	xorlw	128
  7239  1FE0  00A0               	movwf	??_USART_to_Protocol
  7240  1FE1  3080               	movlw	128
  7241  1FE2  0220               	subwf	??_USART_to_Protocol,w
  7242  1FE3  1D03               	skipz
  7243  1FE4  2FE7               	goto	u6915
  7244  1FE5  0800               	movf	0,w
  7245  1FE6  0222               	subwf	USART_to_Protocol@i,w
  7246  1FE7                     u6915:	
  7247  1FE7  1803               	btfsc	3,0
  7248  1FE8  0008               	return
  7249                           
  7250                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7251  1FE9  1283               	bcf	3,5	;RP0=0, select bank0
  7252  1FEA  1303               	bcf	3,6	;RP1=0, select bank0
  7253  1FEB  0822               	movf	USART_to_Protocol@i,w
  7254  1FEC  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7255  1FED  0084               	movwf	4
  7256  1FEE  1783               	bsf	3,7	;select IRP bank2
  7257  1FEF  0800               	movf	0,w
  7258  1FF0  00A0               	movwf	??_USART_to_Protocol
  7259  1FF1  0822               	movf	USART_to_Protocol@i,w
  7260  1FF2  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7261  1FF3  00A1               	movwf	??_USART_to_Protocol+1
  7262  1FF4  0821               	movf	??_USART_to_Protocol+1,w
  7263  1FF5  3E06               	addlw	6
  7264  1FF6  0084               	movwf	4
  7265  1FF7  0820               	movf	??_USART_to_Protocol,w
  7266  1FF8  0080               	movwf	0
  7267  1FF9  3001               	movlw	1
  7268  1FFA  07A2               	addwf	USART_to_Protocol@i,f
  7269  1FFB  1803               	skipnc
  7270  1FFC  0AA3               	incf	USART_to_Protocol@i+1,f
  7271  1FFD  3000               	movlw	0
  7272  1FFE  07A3               	addwf	USART_to_Protocol@i+1,f
  7273  1FFF  2FDB               	goto	l6496
  7274  2000                     __end_of_USART_to_Protocol:	
  7275                           
  7276                           	psect	text17
  7277  1BA1                     __ptext17:	
  7278 ;; *************** function _USART_put_buffer *****************
  7279 ;; Defined at:
  7280 ;;		line 99 in file "usart.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  vetor           1    wreg     PTR unsigned char 
  7283 ;;		 -> buffer(33), 
  7284 ;;  size            1    1[BANK0 ] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  vetor           1    3[BANK0 ] PTR unsigned char 
  7287 ;;		 -> buffer(33), 
  7288 ;;  ptr             1    5[BANK0 ] PTR unsigned char 
  7289 ;;		 -> buffer(33), 
  7290 ;;  loop            1    4[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 300/0
  7297 ;;		On exit  : 300/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7300 ;;      Params:         0       1       0       0       0
  7301 ;;      Locals:         0       3       0       0       0
  7302 ;;      Temps:          0       1       0       0       0
  7303 ;;      Totals:         0       5       0       0       0
  7304 ;;Total ram usage:        5 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    2
  7307 ;; This function calls:
  7308 ;;		_USART_putc
  7309 ;; This function is called by:
  7310 ;;		_Decodify_Command
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           
  7315                           ;psect for function _USART_put_buffer
  7316  1BA1                     _USART_put_buffer:	
  7317                           
  7318                           ;incstack = 0
  7319                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7320                           ;USART_put_buffer@vetor stored from wreg
  7321  1BA1  00A3               	movwf	USART_put_buffer@vetor
  7322                           
  7323                           ;usart.c: 100:     char loop=0;
  7324  1BA2  01A4               	clrf	USART_put_buffer@loop
  7325                           
  7326                           ;usart.c: 101:     char *ptr;;usart.c: 102:     ptr = vetor;
  7327  1BA3  0823               	movf	USART_put_buffer@vetor,w
  7328  1BA4  00A2               	movwf	??_USART_put_buffer
  7329  1BA5  0822               	movf	??_USART_put_buffer,w
  7330  1BA6  00A5               	movwf	USART_put_buffer@ptr
  7331  1BA7                     l6536:	
  7332                           ;usart.c: 104:     while(loop<size)
  7333                           
  7334                           
  7335                           ;usart.c: 104:     while(loop<size)
  7336  1BA7  0821               	movf	USART_put_buffer@size,w
  7337  1BA8  0224               	subwf	USART_put_buffer@loop,w
  7338  1BA9  1803               	btfsc	3,0
  7339  1BAA  0008               	return
  7340                           
  7341                           ;usart.c: 105:     {;usart.c: 106:         USART_putc(*ptr);
  7342  1BAB  0825               	movf	USART_put_buffer@ptr,w
  7343  1BAC  0084               	movwf	4
  7344  1BAD  1383               	bcf	3,7	;select IRP bank0
  7345  1BAE  0800               	movf	0,w
  7346  1BAF  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  7347                           
  7348                           ;usart.c: 107:         ptr++;
  7349  1BB4  3001               	movlw	1
  7350  1BB5  1283               	bcf	3,5	;RP0=0, select bank0
  7351  1BB6  00A2               	movwf	??_USART_put_buffer
  7352  1BB7  0822               	movf	??_USART_put_buffer,w
  7353  1BB8  07A5               	addwf	USART_put_buffer@ptr,f
  7354                           
  7355                           ;usart.c: 108:         loop++;
  7356  1BB9  3001               	movlw	1
  7357  1BBA  00A2               	movwf	??_USART_put_buffer
  7358  1BBB  0822               	movf	??_USART_put_buffer,w
  7359  1BBC  07A4               	addwf	USART_put_buffer@loop,f
  7360  1BBD  2BA7               	goto	l6536
  7361  1BBE                     __end_of_USART_put_buffer:	
  7362                           
  7363                           	psect	text18
  7364  0801                     __ptext18:	
  7365 ;; *************** function _Send_To_MB *****************
  7366 ;; Defined at:
  7367 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  size            1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  size            1    1[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, pclath, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 300/100
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         0       0       0       0       0
  7382 ;;      Locals:         0       1       0       0       0
  7383 ;;      Temps:          0       0       0       0       0
  7384 ;;      Totals:         0       1       0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    2
  7388 ;; This function calls:
  7389 ;;		_USART_putc
  7390 ;; This function is called by:
  7391 ;;		_Decodify_Command
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           
  7396                           ;psect for function _Send_To_MB
  7397  0801                     _Send_To_MB:	
  7398                           
  7399                           ;incstack = 0
  7400                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7401                           ;Send_To_MB@size stored from wreg
  7402  0801  1283               	bcf	3,5	;RP0=0, select bank0
  7403  0802  1303               	bcf	3,6	;RP1=0, select bank0
  7404  0803  00A1               	movwf	Send_To_MB@size
  7405                           
  7406                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7407  0804  30AA               	movlw	170
  7408  0805  160A  158A  22B9  120A  158A  	fcall	_USART_putc
  7409                           
  7410                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7411  080A  30BB               	movlw	187
  7412  080B  160A  158A  22B9  120A  158A  	fcall	_USART_putc
  7413                           
  7414                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7415  0810  0838               	movf	_Board_Number^(0+128),w
  7416  0811  160A  158A  22B9  120A  158A  	fcall	_USART_putc
  7417                           
  7418                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7419  0816  3000               	movlw	0
  7420  0817  160A  158A  22B9  120A  158A  	fcall	_USART_putc
  7421                           
  7422                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7423  081C  1703               	bsf	3,6	;RP1=1, select bank3
  7424  081D  0814               	movf	(_usart_protocol^(0+384)+4),w
  7425  081E  160A  158A  22B9  120A  158A  	fcall	_USART_putc
  7426                           
  7427                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7428  0823  1283               	bcf	3,5	;RP0=0, select bank0
  7429  0824  0821               	movf	Send_To_MB@size,w
  7430  0825  160A  158A  22B9   	fcall	_USART_putc
  7431  0828  0008               	return
  7432  0829                     __end_of_Send_To_MB:	
  7433                           
  7434                           	psect	text19
  7435  1A85                     __ptext19:	
  7436 ;; *************** function _Send_Reply_OK *****************
  7437 ;; Defined at:
  7438 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 300/100
  7449 ;;		On exit  : 300/100
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7452 ;;      Params:         0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0
  7455 ;;      Totals:         0       0       0       0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:    3
  7459 ;; This function calls:
  7460 ;;		_USART_put_string
  7461 ;; This function is called by:
  7462 ;;		_Decodify_Command
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _Send_Reply_OK
  7468  1A85                     _Send_Reply_OK:	
  7469                           
  7470                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7471                           
  7472                           ;incstack = 0
  7473                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7474  1A85  304A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7475  1A86  1283               	bcf	3,5	;RP0=0, select bank0
  7476  1A87  00A1               	movwf	USART_put_string@vetor
  7477  1A88  3080               	movlw	128
  7478  1A89  00A2               	movwf	USART_put_string@vetor+1
  7479  1A8A  160A  158A  2563   	fcall	_USART_put_string
  7480  1A8D  0008               	return
  7481  1A8E                     __end_of_Send_Reply_OK:	
  7482                           
  7483                           	psect	text20
  7484  1D63                     __ptext20:	
  7485 ;; *************** function _USART_put_string *****************
  7486 ;; Defined at:
  7487 ;;		line 167 in file "usart.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7490 ;;		 -> STR_2(3), buffer(33), STR_1(9), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7493 ;;		 -> STR_2(3), buffer(33), STR_1(9), 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 300/0
  7500 ;;		On exit  : 300/100
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         0       2       0       0       0
  7504 ;;      Locals:         0       2       0       0       0
  7505 ;;      Temps:          0       0       0       0       0
  7506 ;;      Totals:         0       4       0       0       0
  7507 ;;Total ram usage:        4 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    2
  7510 ;; This function calls:
  7511 ;;		_USART_putc
  7512 ;; This function is called by:
  7513 ;;		_Decodify_Command
  7514 ;;		_Send_Reply_OK
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _USART_put_string
  7520  1D63                     _USART_put_string:	
  7521                           
  7522                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7523                           
  7524                           ;incstack = 0
  7525                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7526  1D63  0821               	movf	USART_put_string@vetor,w
  7527  1D64  00A3               	movwf	USART_put_string@ptr
  7528  1D65  0822               	movf	USART_put_string@vetor+1,w
  7529  1D66  00A4               	movwf	USART_put_string@ptr+1
  7530  1D67                     l5702:	
  7531                           ;usart.c: 171:     while(*ptr){
  7532                           
  7533                           
  7534                           ;usart.c: 171:     while(*ptr){
  7535  1D67  0824               	movf	USART_put_string@ptr+1,w
  7536  1D68  00FF               	movwf	127
  7537  1D69  0823               	movf	USART_put_string@ptr,w
  7538  1D6A  0084               	movwf	4
  7539  1D6B  160A  118A  2000  160A  158A  	fcall	stringtab
  7540  1D70  3A00               	xorlw	0
  7541  1D71  1903               	btfsc	3,2
  7542  1D72  2D89               	goto	l5704
  7543                           
  7544                           ;usart.c: 172:         USART_putc(*ptr);
  7545  1D73  0824               	movf	USART_put_string@ptr+1,w
  7546  1D74  00FF               	movwf	127
  7547  1D75  0823               	movf	USART_put_string@ptr,w
  7548  1D76  0084               	movwf	4
  7549  1D77  160A  118A  2000  160A  158A  	fcall	stringtab
  7550  1D7C  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  7551                           
  7552                           ;usart.c: 173:         ptr++;
  7553  1D81  3001               	movlw	1
  7554  1D82  1283               	bcf	3,5	;RP0=0, select bank0
  7555  1D83  07A3               	addwf	USART_put_string@ptr,f
  7556  1D84  1803               	skipnc
  7557  1D85  0AA4               	incf	USART_put_string@ptr+1,f
  7558  1D86  3000               	movlw	0
  7559  1D87  07A4               	addwf	USART_put_string@ptr+1,f
  7560  1D88  2D67               	goto	l5702
  7561  1D89                     l5704:	
  7562                           
  7563                           ;usart.c: 175:     USART_putc(*ptr);
  7564  1D89  0824               	movf	USART_put_string@ptr+1,w
  7565  1D8A  00FF               	movwf	127
  7566  1D8B  0823               	movf	USART_put_string@ptr,w
  7567  1D8C  0084               	movwf	4
  7568  1D8D  160A  118A  2000  160A  158A  	fcall	stringtab
  7569  1D92  160A  158A  22B9   	fcall	_USART_putc
  7570  1D95  0008               	return
  7571  1D96                     __end_of_USART_put_string:	
  7572                           
  7573                           	psect	text21
  7574  119C                     __ptext21:	
  7575 ;; *************** function _Save_Log *****************
  7576 ;; Defined at:
  7577 ;;		line 968 in file "SlaveLiofilizadorVer1.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 300/0
  7588 ;;		On exit  : 300/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7591 ;;      Params:         0       4       0       0       0
  7592 ;;      Locals:         0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0
  7594 ;;      Totals:         0       4       0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    5
  7598 ;; This function calls:
  7599 ;;		_EEPROM_24C1025_Write_Int
  7600 ;;		___flmul
  7601 ;;		___fltol
  7602 ;; This function is called by:
  7603 ;;		_Decodify_Command
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _Save_Log
  7609  119C                     _Save_Log:	
  7610                           
  7611                           ;SlaveLiofilizadorVer1.c: 969:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (T
      +                          ensao1*10));
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7615  119C  085B               	movf	Save_Log@add_datalog+3,w
  7616  119D  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7617  119E  085A               	movf	Save_Log@add_datalog+2,w
  7618  119F  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7619  11A0  0859               	movf	Save_Log@add_datalog+1,w
  7620  11A1  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7621  11A2  0858               	movf	Save_Log@add_datalog,w
  7622  11A3  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7623  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  7624  11A5  0823               	movf	(_Tensao1+3)^(0+128),w
  7625  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  7626  11A7  00B0               	movwf	___flmul@a+3
  7627  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  7628  11A9  0822               	movf	(_Tensao1+2)^(0+128),w
  7629  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  7630  11AB  00AF               	movwf	___flmul@a+2
  7631  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  7632  11AD  0821               	movf	(_Tensao1+1)^(0+128),w
  7633  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  7634  11AF  00AE               	movwf	___flmul@a+1
  7635  11B0  1683               	bsf	3,5	;RP0=1, select bank1
  7636  11B1  0820               	movf	_Tensao1^(0+128),w
  7637  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  7638  11B3  00AD               	movwf	___flmul@a
  7639  11B4  3041               	movlw	65
  7640  11B5  00AC               	movwf	___flmul@b+3
  7641  11B6  3020               	movlw	32
  7642  11B7  00AB               	movwf	___flmul@b+2
  7643  11B8  3000               	movlw	0
  7644  11B9  00AA               	movwf	___flmul@b+1
  7645  11BA  3000               	movlw	0
  7646  11BB  00A9               	movwf	___flmul@b
  7647  11BC  120A  118A  23D7  160A  118A  	fcall	___flmul
  7648  11C1  082C               	movf	?___flmul+3,w
  7649  11C2  00C6               	movwf	___fltol@f1+3
  7650  11C3  082B               	movf	?___flmul+2,w
  7651  11C4  00C5               	movwf	___fltol@f1+2
  7652  11C5  082A               	movf	?___flmul+1,w
  7653  11C6  00C4               	movwf	___fltol@f1+1
  7654  11C7  0829               	movf	?___flmul,w
  7655  11C8  00C3               	movwf	___fltol@f1
  7656  11C9  160A  118A  2131  160A  118A  	fcall	___fltol
  7657  11CE  0844               	movf	?___fltol+1,w
  7658  11CF  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7659  11D0  0843               	movf	?___fltol,w
  7660  11D1  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7661  11D2  3000               	movlw	0
  7662  11D3  160A  158A  23DC  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7663                           
  7664                           ;SlaveLiofilizadorVer1.c: 970:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (V
      +                          accum0*10));
  7665  11D8  085B               	movf	Save_Log@add_datalog+3,w
  7666  11D9  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7667  11DA  085A               	movf	Save_Log@add_datalog+2,w
  7668  11DB  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7669  11DC  0859               	movf	Save_Log@add_datalog+1,w
  7670  11DD  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7671  11DE  0858               	movf	Save_Log@add_datalog,w
  7672  11DF  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7673  11E0  1683               	bsf	3,5	;RP0=1, select bank1
  7674  11E1  0827               	movf	(_Vaccum0+3)^(0+128),w
  7675  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  7676  11E3  00B0               	movwf	___flmul@a+3
  7677  11E4  1683               	bsf	3,5	;RP0=1, select bank1
  7678  11E5  0826               	movf	(_Vaccum0+2)^(0+128),w
  7679  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  7680  11E7  00AF               	movwf	___flmul@a+2
  7681  11E8  1683               	bsf	3,5	;RP0=1, select bank1
  7682  11E9  0825               	movf	(_Vaccum0+1)^(0+128),w
  7683  11EA  1283               	bcf	3,5	;RP0=0, select bank0
  7684  11EB  00AE               	movwf	___flmul@a+1
  7685  11EC  1683               	bsf	3,5	;RP0=1, select bank1
  7686  11ED  0824               	movf	_Vaccum0^(0+128),w
  7687  11EE  1283               	bcf	3,5	;RP0=0, select bank0
  7688  11EF  00AD               	movwf	___flmul@a
  7689  11F0  3041               	movlw	65
  7690  11F1  00AC               	movwf	___flmul@b+3
  7691  11F2  3020               	movlw	32
  7692  11F3  00AB               	movwf	___flmul@b+2
  7693  11F4  3000               	movlw	0
  7694  11F5  00AA               	movwf	___flmul@b+1
  7695  11F6  3000               	movlw	0
  7696  11F7  00A9               	movwf	___flmul@b
  7697  11F8  120A  118A  23D7  160A  118A  	fcall	___flmul
  7698  11FD  082C               	movf	?___flmul+3,w
  7699  11FE  00C6               	movwf	___fltol@f1+3
  7700  11FF  082B               	movf	?___flmul+2,w
  7701  1200  00C5               	movwf	___fltol@f1+2
  7702  1201  082A               	movf	?___flmul+1,w
  7703  1202  00C4               	movwf	___fltol@f1+1
  7704  1203  0829               	movf	?___flmul,w
  7705  1204  00C3               	movwf	___fltol@f1
  7706  1205  160A  118A  2131  160A  118A  	fcall	___fltol
  7707  120A  0844               	movf	?___fltol+1,w
  7708  120B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7709  120C  0843               	movf	?___fltol,w
  7710  120D  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7711  120E  3001               	movlw	1
  7712  120F  160A  158A  23DC   	fcall	_EEPROM_24C1025_Write_Int
  7713  1212  0008               	return
  7714  1213                     __end_of_Save_Log:	
  7715                           
  7716                           	psect	text22
  7717  1131                     __ptext22:	
  7718 ;; *************** function ___fltol *****************
  7719 ;; Defined at:
  7720 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  f1              4   35[BANK0 ] void 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  exp1            1   45[BANK0 ] unsigned char 
  7725 ;;  sign1           1   44[BANK0 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  4   35[BANK0 ] long 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0
  7730 ;; Tracked objects:
  7731 ;;		On entry : 300/0
  7732 ;;		On exit  : 300/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7735 ;;      Params:         0       4       0       0       0
  7736 ;;      Locals:         0       2       0       0       0
  7737 ;;      Temps:          0       5       0       0       0
  7738 ;;      Totals:         0      11       0       0       0
  7739 ;;Total ram usage:       11 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_Decodify_Command
  7746 ;;		_Save_Log
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function ___fltol
  7752  1131                     ___fltol:	
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7756  1131  1003               	clrc
  7757  1132  0D45               	rlf	___fltol@f1+2,w
  7758  1133  0D46               	rlf	___fltol@f1+3,w
  7759  1134  00C7               	movwf	??___fltol
  7760  1135  0847               	movf	??___fltol,w
  7761  1136  00CD               	movwf	___fltol@exp1
  7762  1137  084D               	movf	___fltol@exp1,w
  7763  1138  1D03               	btfss	3,2
  7764  1139  2943               	goto	l5804
  7765  113A                     l5800:	
  7766  113A  3000               	movlw	0
  7767  113B  00C6               	movwf	?___fltol+3
  7768  113C  3000               	movlw	0
  7769  113D  00C5               	movwf	?___fltol+2
  7770  113E  3000               	movlw	0
  7771  113F  00C4               	movwf	?___fltol+1
  7772  1140  3000               	movlw	0
  7773  1141  00C3               	movwf	?___fltol
  7774  1142  0008               	return
  7775  1143                     l5804:	
  7776  1143  0843               	movf	___fltol@f1,w
  7777  1144  00C7               	movwf	??___fltol
  7778  1145  0844               	movf	___fltol@f1+1,w
  7779  1146  00C8               	movwf	??___fltol+1
  7780  1147  0845               	movf	___fltol@f1+2,w
  7781  1148  00C9               	movwf	??___fltol+2
  7782  1149  0846               	movf	___fltol@f1+3,w
  7783  114A  00CA               	movwf	??___fltol+3
  7784  114B  301F               	movlw	31
  7785  114C                     u5635:	
  7786  114C  1003               	clrc
  7787  114D  0CCA               	rrf	??___fltol+3,f
  7788  114E  0CC9               	rrf	??___fltol+2,f
  7789  114F  0CC8               	rrf	??___fltol+1,f
  7790  1150  0CC7               	rrf	??___fltol,f
  7791  1151  3EFF               	addlw	-1
  7792  1152  1D03               	skipz
  7793  1153  294C               	goto	u5635
  7794  1154  0847               	movf	??___fltol,w
  7795  1155  00CB               	movwf	??___fltol+4
  7796  1156  084B               	movf	??___fltol+4,w
  7797  1157  00CC               	movwf	___fltol@sign1
  7798  1158  17C5               	bsf	___fltol@f1+2,7
  7799  1159  30FF               	movlw	255
  7800  115A  05C3               	andwf	___fltol@f1,f
  7801  115B  30FF               	movlw	255
  7802  115C  05C4               	andwf	___fltol@f1+1,f
  7803  115D  30FF               	movlw	255
  7804  115E  05C5               	andwf	___fltol@f1+2,f
  7805  115F  3000               	movlw	0
  7806  1160  05C6               	andwf	___fltol@f1+3,f
  7807  1161  3096               	movlw	150
  7808  1162  02CD               	subwf	___fltol@exp1,f
  7809  1163  1FCD               	btfss	___fltol@exp1,7
  7810  1164  297A               	goto	l5822
  7811  1165  084D               	movf	___fltol@exp1,w
  7812  1166  3A80               	xorlw	128
  7813  1167  3E97               	addlw	151
  7814  1168  1C03               	btfss	3,0
  7815  1169  293A               	goto	l5800
  7816  116A                     l5820:	
  7817  116A  3001               	movlw	1
  7818  116B                     u5665:	
  7819  116B  1003               	clrc
  7820  116C  0CC6               	rrf	___fltol@f1+3,f
  7821  116D  0CC5               	rrf	___fltol@f1+2,f
  7822  116E  0CC4               	rrf	___fltol@f1+1,f
  7823  116F  0CC3               	rrf	___fltol@f1,f
  7824  1170  3EFF               	addlw	-1
  7825  1171  1D03               	skipz
  7826  1172  296B               	goto	u5665
  7827  1173  3001               	movlw	1
  7828  1174  00C7               	movwf	??___fltol
  7829  1175  0847               	movf	??___fltol,w
  7830  1176  07CD               	addwf	___fltol@exp1,f
  7831  1177  1903               	btfsc	3,2
  7832  1178  298D               	goto	l5830
  7833  1179  296A               	goto	l5820
  7834  117A                     l5822:	
  7835  117A  3020               	movlw	32
  7836  117B  024D               	subwf	___fltol@exp1,w
  7837  117C  1803               	btfsc	3,0
  7838  117D  293A               	goto	l5800
  7839  117E                     l1173:	
  7840  117E  084D               	movf	___fltol@exp1,w
  7841  117F  1903               	btfsc	3,2
  7842  1180  298D               	goto	l5830
  7843  1181  3001               	movlw	1
  7844  1182  00C7               	movwf	??___fltol
  7845  1183                     u5695:	
  7846  1183  1003               	clrc
  7847  1184  0DC3               	rlf	___fltol@f1,f
  7848  1185  0DC4               	rlf	___fltol@f1+1,f
  7849  1186  0DC5               	rlf	___fltol@f1+2,f
  7850  1187  0DC6               	rlf	___fltol@f1+3,f
  7851  1188  0BC7               	decfsz	??___fltol,f
  7852  1189  2983               	goto	u5695
  7853  118A  3001               	movlw	1
  7854  118B  02CD               	subwf	___fltol@exp1,f
  7855  118C  297E               	goto	l1173
  7856  118D                     l5830:	
  7857  118D  084C               	movf	___fltol@sign1,w
  7858  118E  1903               	btfsc	3,2
  7859  118F  0008               	return
  7860  1190  09C3               	comf	___fltol@f1,f
  7861  1191  09C4               	comf	___fltol@f1+1,f
  7862  1192  09C5               	comf	___fltol@f1+2,f
  7863  1193  09C6               	comf	___fltol@f1+3,f
  7864  1194  0AC3               	incf	___fltol@f1,f
  7865  1195  1903               	skipnz
  7866  1196  0AC4               	incf	___fltol@f1+1,f
  7867  1197  1903               	skipnz
  7868  1198  0AC5               	incf	___fltol@f1+2,f
  7869  1199  1903               	skipnz
  7870  119A  0AC6               	incf	___fltol@f1+3,f
  7871  119B  0008               	return
  7872  119C                     __end_of___fltol:	
  7873                           
  7874                           	psect	text23
  7875  03D7                     __ptext23:	
  7876 ;; *************** function ___flmul *****************
  7877 ;; Defined at:
  7878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  b               4    9[BANK0 ] long 
  7881 ;;  a               4   13[BANK0 ] long 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  prod            4   29[BANK0 ] struct .
  7884 ;;  grs             4   25[BANK0 ] unsigned long 
  7885 ;;  temp            2   33[BANK0 ] struct .
  7886 ;;  bexp            1   24[BANK0 ] unsigned char 
  7887 ;;  aexp            1   23[BANK0 ] unsigned char 
  7888 ;;  sign            1   22[BANK0 ] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  4    9[BANK0 ] unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 300/0
  7895 ;;		On exit  : 300/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7898 ;;      Params:         0       8       0       0       0
  7899 ;;      Locals:         0      13       0       0       0
  7900 ;;      Temps:          0       5       0       0       0
  7901 ;;      Totals:         0      26       0       0       0
  7902 ;;Total ram usage:       26 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    2
  7905 ;; This function calls:
  7906 ;;		__Umul8_16
  7907 ;; This function is called by:
  7908 ;;		_Decodify_Command
  7909 ;;		_MediaPlacaVaccum
  7910 ;;		_Save_Log
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function ___flmul
  7916  03D7                     ___flmul:	
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7920  03D7  082C               	movf	___flmul@b+3,w
  7921  03D8  3980               	andlw	128
  7922  03D9  00B1               	movwf	??___flmul
  7923  03DA  0831               	movf	??___flmul,w
  7924  03DB  00B6               	movwf	___flmul@sign
  7925  03DC  082C               	movf	___flmul@b+3,w
  7926  03DD  00B1               	movwf	??___flmul
  7927  03DE  0731               	addwf	??___flmul,w
  7928  03DF  00B2               	movwf	??___flmul+1
  7929  03E0  0832               	movf	??___flmul+1,w
  7930  03E1  00B8               	movwf	___flmul@bexp
  7931  03E2  1BAB               	btfsc	___flmul@b+2,7
  7932  03E3  1438               	bsf	___flmul@bexp,0
  7933  03E4  0838               	movf	___flmul@bexp,w
  7934  03E5  1903               	btfsc	3,2
  7935  03E6  2BF4               	goto	l6070
  7936  03E7  0A38               	incf	___flmul@bexp,w
  7937  03E8  1D03               	btfss	3,2
  7938  03E9  2BF2               	goto	l6068
  7939  03EA  3000               	movlw	0
  7940  03EB  00AC               	movwf	___flmul@b+3
  7941  03EC  3000               	movlw	0
  7942  03ED  00AB               	movwf	___flmul@b+2
  7943  03EE  3000               	movlw	0
  7944  03EF  00AA               	movwf	___flmul@b+1
  7945  03F0  3000               	movlw	0
  7946  03F1  00A9               	movwf	___flmul@b
  7947  03F2                     l6068:	
  7948  03F2  17AB               	bsf	___flmul@b+2,7
  7949  03F3  2BFC               	goto	l6072
  7950  03F4                     l6070:	
  7951  03F4  3000               	movlw	0
  7952  03F5  00AC               	movwf	___flmul@b+3
  7953  03F6  3000               	movlw	0
  7954  03F7  00AB               	movwf	___flmul@b+2
  7955  03F8  3000               	movlw	0
  7956  03F9  00AA               	movwf	___flmul@b+1
  7957  03FA  3000               	movlw	0
  7958  03FB  00A9               	movwf	___flmul@b
  7959  03FC                     l6072:	
  7960  03FC  0830               	movf	___flmul@a+3,w
  7961  03FD  3980               	andlw	128
  7962  03FE  00B1               	movwf	??___flmul
  7963  03FF  0831               	movf	??___flmul,w
  7964  0400  06B6               	xorwf	___flmul@sign,f
  7965  0401  0830               	movf	___flmul@a+3,w
  7966  0402  00B1               	movwf	??___flmul
  7967  0403  0731               	addwf	??___flmul,w
  7968  0404  00B2               	movwf	??___flmul+1
  7969  0405  0832               	movf	??___flmul+1,w
  7970  0406  00B7               	movwf	___flmul@aexp
  7971  0407  1BAF               	btfsc	___flmul@a+2,7
  7972  0408  1437               	bsf	___flmul@aexp,0
  7973  0409  0837               	movf	___flmul@aexp,w
  7974  040A  1903               	btfsc	3,2
  7975  040B  2C19               	goto	l6088
  7976  040C  0A37               	incf	___flmul@aexp,w
  7977  040D  1D03               	btfss	3,2
  7978  040E  2C17               	goto	l6086
  7979  040F  3000               	movlw	0
  7980  0410  00B0               	movwf	___flmul@a+3
  7981  0411  3000               	movlw	0
  7982  0412  00AF               	movwf	___flmul@a+2
  7983  0413  3000               	movlw	0
  7984  0414  00AE               	movwf	___flmul@a+1
  7985  0415  3000               	movlw	0
  7986  0416  00AD               	movwf	___flmul@a
  7987  0417                     l6086:	
  7988  0417  17AF               	bsf	___flmul@a+2,7
  7989  0418  2C21               	goto	l6090
  7990  0419                     l6088:	
  7991  0419  3000               	movlw	0
  7992  041A  00B0               	movwf	___flmul@a+3
  7993  041B  3000               	movlw	0
  7994  041C  00AF               	movwf	___flmul@a+2
  7995  041D  3000               	movlw	0
  7996  041E  00AE               	movwf	___flmul@a+1
  7997  041F  3000               	movlw	0
  7998  0420  00AD               	movwf	___flmul@a
  7999  0421                     l6090:	
  8000  0421  0837               	movf	___flmul@aexp,w
  8001  0422  1D03               	btfss	3,2
  8002  0423  0838               	movf	___flmul@bexp,w
  8003  0424  1D03               	btfss	3,2
  8004  0425  2C2F               	goto	l6098
  8005  0426  3000               	movlw	0
  8006  0427  00AC               	movwf	?___flmul+3
  8007  0428  3000               	movlw	0
  8008  0429  00AB               	movwf	?___flmul+2
  8009  042A  3000               	movlw	0
  8010  042B  00AA               	movwf	?___flmul+1
  8011  042C  3000               	movlw	0
  8012  042D  00A9               	movwf	?___flmul
  8013  042E  0008               	return
  8014  042F                     l6098:	
  8015  042F  0829               	movf	___flmul@b,w
  8016  0430  00B1               	movwf	??___flmul
  8017  0431  0831               	movf	??___flmul,w
  8018  0432  00A0               	movwf	__Umul8_16@multiplicand
  8019  0433  082F               	movf	___flmul@a+2,w
  8020  0434  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8021  0439  0821               	movf	?__Umul8_16+1,w
  8022  043A  00C2               	movwf	___flmul@temp+1
  8023  043B  0820               	movf	?__Umul8_16,w
  8024  043C  00C1               	movwf	___flmul@temp
  8025  043D  0841               	movf	___flmul@temp,w
  8026  043E  00B1               	movwf	??___flmul
  8027  043F  01B2               	clrf	??___flmul+1
  8028  0440  01B3               	clrf	??___flmul+2
  8029  0441  01B4               	clrf	??___flmul+3
  8030  0442  0834               	movf	??___flmul+3,w
  8031  0443  00BC               	movwf	___flmul@grs+3
  8032  0444  0833               	movf	??___flmul+2,w
  8033  0445  00BB               	movwf	___flmul@grs+2
  8034  0446  0832               	movf	??___flmul+1,w
  8035  0447  00BA               	movwf	___flmul@grs+1
  8036  0448  0831               	movf	??___flmul,w
  8037  0449  00B9               	movwf	___flmul@grs
  8038  044A  0842               	movf	___flmul@temp+1,w
  8039  044B  00B1               	movwf	??___flmul
  8040  044C  01B2               	clrf	??___flmul+1
  8041  044D  01B3               	clrf	??___flmul+2
  8042  044E  01B4               	clrf	??___flmul+3
  8043  044F  0834               	movf	??___flmul+3,w
  8044  0450  00C0               	movwf	___flmul@prod+3
  8045  0451  0833               	movf	??___flmul+2,w
  8046  0452  00BF               	movwf	___flmul@prod+2
  8047  0453  0832               	movf	??___flmul+1,w
  8048  0454  00BE               	movwf	___flmul@prod+1
  8049  0455  0831               	movf	??___flmul,w
  8050  0456  00BD               	movwf	___flmul@prod
  8051  0457  082A               	movf	___flmul@b+1,w
  8052  0458  00B1               	movwf	??___flmul
  8053  0459  0831               	movf	??___flmul,w
  8054  045A  00A0               	movwf	__Umul8_16@multiplicand
  8055  045B  082E               	movf	___flmul@a+1,w
  8056  045C  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8057  0461  0821               	movf	?__Umul8_16+1,w
  8058  0462  00C2               	movwf	___flmul@temp+1
  8059  0463  0820               	movf	?__Umul8_16,w
  8060  0464  00C1               	movwf	___flmul@temp
  8061  0465  0841               	movf	___flmul@temp,w
  8062  0466  00B1               	movwf	??___flmul
  8063  0467  01B2               	clrf	??___flmul+1
  8064  0468  01B3               	clrf	??___flmul+2
  8065  0469  01B4               	clrf	??___flmul+3
  8066  046A  0831               	movf	??___flmul,w
  8067  046B  07B9               	addwf	___flmul@grs,f
  8068  046C  0832               	movf	??___flmul+1,w
  8069  046D  1103               	clrz
  8070  046E  1803               	skipnc
  8071  046F  3E01               	addlw	1
  8072  0470  1D03               	btfss	3,2
  8073  0471  07BA               	addwf	___flmul@grs+1,f
  8074  0472  0833               	movf	??___flmul+2,w
  8075  0473  1103               	clrz
  8076  0474  1803               	skipnc
  8077  0475  3E01               	addlw	1
  8078  0476  1D03               	btfss	3,2
  8079  0477  07BB               	addwf	___flmul@grs+2,f
  8080  0478  0834               	movf	??___flmul+3,w
  8081  0479  1103               	clrz
  8082  047A  1803               	skipnc
  8083  047B  3E01               	addlw	1
  8084  047C  1D03               	btfss	3,2
  8085  047D  07BC               	addwf	___flmul@grs+3,f
  8086  047E  0842               	movf	___flmul@temp+1,w
  8087  047F  00B1               	movwf	??___flmul
  8088  0480  01B2               	clrf	??___flmul+1
  8089  0481  01B3               	clrf	??___flmul+2
  8090  0482  01B4               	clrf	??___flmul+3
  8091  0483  0831               	movf	??___flmul,w
  8092  0484  07BD               	addwf	___flmul@prod,f
  8093  0485  0832               	movf	??___flmul+1,w
  8094  0486  1103               	clrz
  8095  0487  1803               	skipnc
  8096  0488  3E01               	addlw	1
  8097  0489  1D03               	btfss	3,2
  8098  048A  07BE               	addwf	___flmul@prod+1,f
  8099  048B  0833               	movf	??___flmul+2,w
  8100  048C  1103               	clrz
  8101  048D  1803               	skipnc
  8102  048E  3E01               	addlw	1
  8103  048F  1D03               	btfss	3,2
  8104  0490  07BF               	addwf	___flmul@prod+2,f
  8105  0491  0834               	movf	??___flmul+3,w
  8106  0492  1103               	clrz
  8107  0493  1803               	skipnc
  8108  0494  3E01               	addlw	1
  8109  0495  1D03               	btfss	3,2
  8110  0496  07C0               	addwf	___flmul@prod+3,f
  8111  0497  082B               	movf	___flmul@b+2,w
  8112  0498  00B1               	movwf	??___flmul
  8113  0499  0831               	movf	??___flmul,w
  8114  049A  00A0               	movwf	__Umul8_16@multiplicand
  8115  049B  082D               	movf	___flmul@a,w
  8116  049C  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8117  04A1  0821               	movf	?__Umul8_16+1,w
  8118  04A2  00C2               	movwf	___flmul@temp+1
  8119  04A3  0820               	movf	?__Umul8_16,w
  8120  04A4  00C1               	movwf	___flmul@temp
  8121  04A5  0841               	movf	___flmul@temp,w
  8122  04A6  00B1               	movwf	??___flmul
  8123  04A7  01B2               	clrf	??___flmul+1
  8124  04A8  01B3               	clrf	??___flmul+2
  8125  04A9  01B4               	clrf	??___flmul+3
  8126  04AA  0831               	movf	??___flmul,w
  8127  04AB  07B9               	addwf	___flmul@grs,f
  8128  04AC  0832               	movf	??___flmul+1,w
  8129  04AD  1103               	clrz
  8130  04AE  1803               	skipnc
  8131  04AF  3E01               	addlw	1
  8132  04B0  1D03               	btfss	3,2
  8133  04B1  07BA               	addwf	___flmul@grs+1,f
  8134  04B2  0833               	movf	??___flmul+2,w
  8135  04B3  1103               	clrz
  8136  04B4  1803               	skipnc
  8137  04B5  3E01               	addlw	1
  8138  04B6  1D03               	btfss	3,2
  8139  04B7  07BB               	addwf	___flmul@grs+2,f
  8140  04B8  0834               	movf	??___flmul+3,w
  8141  04B9  1103               	clrz
  8142  04BA  1803               	skipnc
  8143  04BB  3E01               	addlw	1
  8144  04BC  1D03               	btfss	3,2
  8145  04BD  07BC               	addwf	___flmul@grs+3,f
  8146  04BE  0842               	movf	___flmul@temp+1,w
  8147  04BF  00B1               	movwf	??___flmul
  8148  04C0  01B2               	clrf	??___flmul+1
  8149  04C1  01B3               	clrf	??___flmul+2
  8150  04C2  01B4               	clrf	??___flmul+3
  8151  04C3  0831               	movf	??___flmul,w
  8152  04C4  07BD               	addwf	___flmul@prod,f
  8153  04C5  0832               	movf	??___flmul+1,w
  8154  04C6  1103               	clrz
  8155  04C7  1803               	skipnc
  8156  04C8  3E01               	addlw	1
  8157  04C9  1D03               	btfss	3,2
  8158  04CA  07BE               	addwf	___flmul@prod+1,f
  8159  04CB  0833               	movf	??___flmul+2,w
  8160  04CC  1103               	clrz
  8161  04CD  1803               	skipnc
  8162  04CE  3E01               	addlw	1
  8163  04CF  1D03               	btfss	3,2
  8164  04D0  07BF               	addwf	___flmul@prod+2,f
  8165  04D1  0834               	movf	??___flmul+3,w
  8166  04D2  1103               	clrz
  8167  04D3  1803               	skipnc
  8168  04D4  3E01               	addlw	1
  8169  04D5  1D03               	btfss	3,2
  8170  04D6  07C0               	addwf	___flmul@prod+3,f
  8171  04D7  3008               	movlw	8
  8172  04D8  00B1               	movwf	??___flmul
  8173  04D9                     u6375:	
  8174  04D9  1003               	clrc
  8175  04DA  0DB9               	rlf	___flmul@grs,f
  8176  04DB  0DBA               	rlf	___flmul@grs+1,f
  8177  04DC  0DBB               	rlf	___flmul@grs+2,f
  8178  04DD  0DBC               	rlf	___flmul@grs+3,f
  8179  04DE  0BB1               	decfsz	??___flmul,f
  8180  04DF  2CD9               	goto	u6375
  8181  04E0  082A               	movf	___flmul@b+1,w
  8182  04E1  00B1               	movwf	??___flmul
  8183  04E2  0831               	movf	??___flmul,w
  8184  04E3  00A0               	movwf	__Umul8_16@multiplicand
  8185  04E4  082D               	movf	___flmul@a,w
  8186  04E5  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8187  04EA  0821               	movf	?__Umul8_16+1,w
  8188  04EB  00C2               	movwf	___flmul@temp+1
  8189  04EC  0820               	movf	?__Umul8_16,w
  8190  04ED  00C1               	movwf	___flmul@temp
  8191  04EE  0841               	movf	___flmul@temp,w
  8192  04EF  00B1               	movwf	??___flmul
  8193  04F0  0842               	movf	___flmul@temp+1,w
  8194  04F1  00B2               	movwf	??___flmul+1
  8195  04F2  01B3               	clrf	??___flmul+2
  8196  04F3  01B4               	clrf	??___flmul+3
  8197  04F4  0831               	movf	??___flmul,w
  8198  04F5  07B9               	addwf	___flmul@grs,f
  8199  04F6  0832               	movf	??___flmul+1,w
  8200  04F7  1103               	clrz
  8201  04F8  1803               	skipnc
  8202  04F9  3E01               	addlw	1
  8203  04FA  1D03               	btfss	3,2
  8204  04FB  07BA               	addwf	___flmul@grs+1,f
  8205  04FC  0833               	movf	??___flmul+2,w
  8206  04FD  1103               	clrz
  8207  04FE  1803               	skipnc
  8208  04FF  3E01               	addlw	1
  8209  0500  1D03               	btfss	3,2
  8210  0501  07BB               	addwf	___flmul@grs+2,f
  8211  0502  0834               	movf	??___flmul+3,w
  8212  0503  1103               	clrz
  8213  0504  1803               	skipnc
  8214  0505  3E01               	addlw	1
  8215  0506  1D03               	btfss	3,2
  8216  0507  07BC               	addwf	___flmul@grs+3,f
  8217  0508  0829               	movf	___flmul@b,w
  8218  0509  00B1               	movwf	??___flmul
  8219  050A  0831               	movf	??___flmul,w
  8220  050B  00A0               	movwf	__Umul8_16@multiplicand
  8221  050C  082E               	movf	___flmul@a+1,w
  8222  050D  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8223  0512  0821               	movf	?__Umul8_16+1,w
  8224  0513  00C2               	movwf	___flmul@temp+1
  8225  0514  0820               	movf	?__Umul8_16,w
  8226  0515  00C1               	movwf	___flmul@temp
  8227  0516  0841               	movf	___flmul@temp,w
  8228  0517  00B1               	movwf	??___flmul
  8229  0518  0842               	movf	___flmul@temp+1,w
  8230  0519  00B2               	movwf	??___flmul+1
  8231  051A  01B3               	clrf	??___flmul+2
  8232  051B  01B4               	clrf	??___flmul+3
  8233  051C  0831               	movf	??___flmul,w
  8234  051D  07B9               	addwf	___flmul@grs,f
  8235  051E  0832               	movf	??___flmul+1,w
  8236  051F  1103               	clrz
  8237  0520  1803               	skipnc
  8238  0521  3E01               	addlw	1
  8239  0522  1D03               	btfss	3,2
  8240  0523  07BA               	addwf	___flmul@grs+1,f
  8241  0524  0833               	movf	??___flmul+2,w
  8242  0525  1103               	clrz
  8243  0526  1803               	skipnc
  8244  0527  3E01               	addlw	1
  8245  0528  1D03               	btfss	3,2
  8246  0529  07BB               	addwf	___flmul@grs+2,f
  8247  052A  0834               	movf	??___flmul+3,w
  8248  052B  1103               	clrz
  8249  052C  1803               	skipnc
  8250  052D  3E01               	addlw	1
  8251  052E  1D03               	btfss	3,2
  8252  052F  07BC               	addwf	___flmul@grs+3,f
  8253  0530  3008               	movlw	8
  8254  0531  00B1               	movwf	??___flmul
  8255  0532                     u6405:	
  8256  0532  1003               	clrc
  8257  0533  0DB9               	rlf	___flmul@grs,f
  8258  0534  0DBA               	rlf	___flmul@grs+1,f
  8259  0535  0DBB               	rlf	___flmul@grs+2,f
  8260  0536  0DBC               	rlf	___flmul@grs+3,f
  8261  0537  0BB1               	decfsz	??___flmul,f
  8262  0538  2D32               	goto	u6405
  8263  0539  0829               	movf	___flmul@b,w
  8264  053A  00B1               	movwf	??___flmul
  8265  053B  0831               	movf	??___flmul,w
  8266  053C  00A0               	movwf	__Umul8_16@multiplicand
  8267  053D  082D               	movf	___flmul@a,w
  8268  053E  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8269  0543  0821               	movf	?__Umul8_16+1,w
  8270  0544  00C2               	movwf	___flmul@temp+1
  8271  0545  0820               	movf	?__Umul8_16,w
  8272  0546  00C1               	movwf	___flmul@temp
  8273  0547  0841               	movf	___flmul@temp,w
  8274  0548  00B1               	movwf	??___flmul
  8275  0549  0842               	movf	___flmul@temp+1,w
  8276  054A  00B2               	movwf	??___flmul+1
  8277  054B  01B3               	clrf	??___flmul+2
  8278  054C  01B4               	clrf	??___flmul+3
  8279  054D  0831               	movf	??___flmul,w
  8280  054E  07B9               	addwf	___flmul@grs,f
  8281  054F  0832               	movf	??___flmul+1,w
  8282  0550  1103               	clrz
  8283  0551  1803               	skipnc
  8284  0552  3E01               	addlw	1
  8285  0553  1D03               	btfss	3,2
  8286  0554  07BA               	addwf	___flmul@grs+1,f
  8287  0555  0833               	movf	??___flmul+2,w
  8288  0556  1103               	clrz
  8289  0557  1803               	skipnc
  8290  0558  3E01               	addlw	1
  8291  0559  1D03               	btfss	3,2
  8292  055A  07BB               	addwf	___flmul@grs+2,f
  8293  055B  0834               	movf	??___flmul+3,w
  8294  055C  1103               	clrz
  8295  055D  1803               	skipnc
  8296  055E  3E01               	addlw	1
  8297  055F  1D03               	btfss	3,2
  8298  0560  07BC               	addwf	___flmul@grs+3,f
  8299  0561  082A               	movf	___flmul@b+1,w
  8300  0562  00B1               	movwf	??___flmul
  8301  0563  0831               	movf	??___flmul,w
  8302  0564  00A0               	movwf	__Umul8_16@multiplicand
  8303  0565  082F               	movf	___flmul@a+2,w
  8304  0566  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8305  056B  0821               	movf	?__Umul8_16+1,w
  8306  056C  00C2               	movwf	___flmul@temp+1
  8307  056D  0820               	movf	?__Umul8_16,w
  8308  056E  00C1               	movwf	___flmul@temp
  8309  056F  0841               	movf	___flmul@temp,w
  8310  0570  00B1               	movwf	??___flmul
  8311  0571  0842               	movf	___flmul@temp+1,w
  8312  0572  00B2               	movwf	??___flmul+1
  8313  0573  01B3               	clrf	??___flmul+2
  8314  0574  01B4               	clrf	??___flmul+3
  8315  0575  0831               	movf	??___flmul,w
  8316  0576  07BD               	addwf	___flmul@prod,f
  8317  0577  0832               	movf	??___flmul+1,w
  8318  0578  1103               	clrz
  8319  0579  1803               	skipnc
  8320  057A  3E01               	addlw	1
  8321  057B  1D03               	btfss	3,2
  8322  057C  07BE               	addwf	___flmul@prod+1,f
  8323  057D  0833               	movf	??___flmul+2,w
  8324  057E  1103               	clrz
  8325  057F  1803               	skipnc
  8326  0580  3E01               	addlw	1
  8327  0581  1D03               	btfss	3,2
  8328  0582  07BF               	addwf	___flmul@prod+2,f
  8329  0583  0834               	movf	??___flmul+3,w
  8330  0584  1103               	clrz
  8331  0585  1803               	skipnc
  8332  0586  3E01               	addlw	1
  8333  0587  1D03               	btfss	3,2
  8334  0588  07C0               	addwf	___flmul@prod+3,f
  8335  0589  082B               	movf	___flmul@b+2,w
  8336  058A  00B1               	movwf	??___flmul
  8337  058B  0831               	movf	??___flmul,w
  8338  058C  00A0               	movwf	__Umul8_16@multiplicand
  8339  058D  082E               	movf	___flmul@a+1,w
  8340  058E  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8341  0593  0821               	movf	?__Umul8_16+1,w
  8342  0594  00C2               	movwf	___flmul@temp+1
  8343  0595  0820               	movf	?__Umul8_16,w
  8344  0596  00C1               	movwf	___flmul@temp
  8345  0597  0841               	movf	___flmul@temp,w
  8346  0598  00B1               	movwf	??___flmul
  8347  0599  0842               	movf	___flmul@temp+1,w
  8348  059A  00B2               	movwf	??___flmul+1
  8349  059B  01B3               	clrf	??___flmul+2
  8350  059C  01B4               	clrf	??___flmul+3
  8351  059D  0831               	movf	??___flmul,w
  8352  059E  07BD               	addwf	___flmul@prod,f
  8353  059F  0832               	movf	??___flmul+1,w
  8354  05A0  1103               	clrz
  8355  05A1  1803               	skipnc
  8356  05A2  3E01               	addlw	1
  8357  05A3  1D03               	btfss	3,2
  8358  05A4  07BE               	addwf	___flmul@prod+1,f
  8359  05A5  0833               	movf	??___flmul+2,w
  8360  05A6  1103               	clrz
  8361  05A7  1803               	skipnc
  8362  05A8  3E01               	addlw	1
  8363  05A9  1D03               	btfss	3,2
  8364  05AA  07BF               	addwf	___flmul@prod+2,f
  8365  05AB  0834               	movf	??___flmul+3,w
  8366  05AC  1103               	clrz
  8367  05AD  1803               	skipnc
  8368  05AE  3E01               	addlw	1
  8369  05AF  1D03               	btfss	3,2
  8370  05B0  07C0               	addwf	___flmul@prod+3,f
  8371  05B1  082B               	movf	___flmul@b+2,w
  8372  05B2  00B1               	movwf	??___flmul
  8373  05B3  0831               	movf	??___flmul,w
  8374  05B4  00A0               	movwf	__Umul8_16@multiplicand
  8375  05B5  082F               	movf	___flmul@a+2,w
  8376  05B6  160A  158A  2460  120A  118A  	fcall	__Umul8_16
  8377  05BB  0821               	movf	?__Umul8_16+1,w
  8378  05BC  00C2               	movwf	___flmul@temp+1
  8379  05BD  0820               	movf	?__Umul8_16,w
  8380  05BE  00C1               	movwf	___flmul@temp
  8381  05BF  0841               	movf	___flmul@temp,w
  8382  05C0  00B1               	movwf	??___flmul
  8383  05C1  0842               	movf	___flmul@temp+1,w
  8384  05C2  00B2               	movwf	??___flmul+1
  8385  05C3  01B3               	clrf	??___flmul+2
  8386  05C4  01B4               	clrf	??___flmul+3
  8387  05C5  3008               	movlw	8
  8388  05C6                     u6445:	
  8389  05C6  1003               	clrc
  8390  05C7  0DB1               	rlf	??___flmul,f
  8391  05C8  0DB2               	rlf	??___flmul+1,f
  8392  05C9  0DB3               	rlf	??___flmul+2,f
  8393  05CA  0DB4               	rlf	??___flmul+3,f
  8394  05CB  3EFF               	addlw	-1
  8395  05CC  1D03               	skipz
  8396  05CD  2DC6               	goto	u6445
  8397  05CE  0831               	movf	??___flmul,w
  8398  05CF  07BD               	addwf	___flmul@prod,f
  8399  05D0  0832               	movf	??___flmul+1,w
  8400  05D1  1103               	clrz
  8401  05D2  1803               	skipnc
  8402  05D3  3E01               	addlw	1
  8403  05D4  1D03               	btfss	3,2
  8404  05D5  07BE               	addwf	___flmul@prod+1,f
  8405  05D6  0833               	movf	??___flmul+2,w
  8406  05D7  1103               	clrz
  8407  05D8  1803               	skipnc
  8408  05D9  3E01               	addlw	1
  8409  05DA  1D03               	btfss	3,2
  8410  05DB  07BF               	addwf	___flmul@prod+2,f
  8411  05DC  0834               	movf	??___flmul+3,w
  8412  05DD  1103               	clrz
  8413  05DE  1803               	skipnc
  8414  05DF  3E01               	addlw	1
  8415  05E0  1D03               	btfss	3,2
  8416  05E1  07C0               	addwf	___flmul@prod+3,f
  8417  05E2  083C               	movf	___flmul@grs+3,w
  8418  05E3  00B1               	movwf	??___flmul
  8419  05E4  01B2               	clrf	??___flmul+1
  8420  05E5  01B3               	clrf	??___flmul+2
  8421  05E6  01B4               	clrf	??___flmul+3
  8422  05E7  0831               	movf	??___flmul,w
  8423  05E8  07BD               	addwf	___flmul@prod,f
  8424  05E9  0832               	movf	??___flmul+1,w
  8425  05EA  1103               	clrz
  8426  05EB  1803               	skipnc
  8427  05EC  3E01               	addlw	1
  8428  05ED  1D03               	btfss	3,2
  8429  05EE  07BE               	addwf	___flmul@prod+1,f
  8430  05EF  0833               	movf	??___flmul+2,w
  8431  05F0  1103               	clrz
  8432  05F1  1803               	skipnc
  8433  05F2  3E01               	addlw	1
  8434  05F3  1D03               	btfss	3,2
  8435  05F4  07BF               	addwf	___flmul@prod+2,f
  8436  05F5  0834               	movf	??___flmul+3,w
  8437  05F6  1103               	clrz
  8438  05F7  1803               	skipnc
  8439  05F8  3E01               	addlw	1
  8440  05F9  1D03               	btfss	3,2
  8441  05FA  07C0               	addwf	___flmul@prod+3,f
  8442  05FB  3008               	movlw	8
  8443  05FC  00B1               	movwf	??___flmul
  8444  05FD                     u6475:	
  8445  05FD  1003               	clrc
  8446  05FE  0DB9               	rlf	___flmul@grs,f
  8447  05FF  0DBA               	rlf	___flmul@grs+1,f
  8448  0600  0DBB               	rlf	___flmul@grs+2,f
  8449  0601  0DBC               	rlf	___flmul@grs+3,f
  8450  0602  0BB1               	decfsz	??___flmul,f
  8451  0603  2DFD               	goto	u6475
  8452  0604  0838               	movf	___flmul@bexp,w
  8453  0605  0737               	addwf	___flmul@aexp,w
  8454  0606  00B1               	movwf	??___flmul
  8455  0607  01B2               	clrf	??___flmul+1
  8456  0608  0DB2               	rlf	??___flmul+1,f
  8457  0609  0831               	movf	??___flmul,w
  8458  060A  3E82               	addlw	130
  8459  060B  00C1               	movwf	___flmul@temp
  8460  060C  0832               	movf	??___flmul+1,w
  8461  060D  1803               	skipnc
  8462  060E  3E01               	addlw	1
  8463  060F  3EFF               	addlw	255
  8464  0610  00C2               	movwf	___flmul@temp+1
  8465  0611                     l6150:	
  8466  0611  1BBF               	btfsc	___flmul@prod+2,7
  8467  0612  2E2E               	goto	l6152
  8468  0613  3001               	movlw	1
  8469  0614  00B1               	movwf	??___flmul
  8470  0615                     u6485:	
  8471  0615  1003               	clrc
  8472  0616  0DBD               	rlf	___flmul@prod,f
  8473  0617  0DBE               	rlf	___flmul@prod+1,f
  8474  0618  0DBF               	rlf	___flmul@prod+2,f
  8475  0619  0DC0               	rlf	___flmul@prod+3,f
  8476  061A  0BB1               	decfsz	??___flmul,f
  8477  061B  2E15               	goto	u6485
  8478  061C  1BBC               	btfsc	___flmul@grs+3,7
  8479  061D  143D               	bsf	___flmul@prod,0
  8480  061E  3001               	movlw	1
  8481  061F  00B1               	movwf	??___flmul
  8482  0620                     u6505:	
  8483  0620  1003               	clrc
  8484  0621  0DB9               	rlf	___flmul@grs,f
  8485  0622  0DBA               	rlf	___flmul@grs+1,f
  8486  0623  0DBB               	rlf	___flmul@grs+2,f
  8487  0624  0DBC               	rlf	___flmul@grs+3,f
  8488  0625  0BB1               	decfsz	??___flmul,f
  8489  0626  2E20               	goto	u6505
  8490  0627  30FF               	movlw	255
  8491  0628  07C1               	addwf	___flmul@temp,f
  8492  0629  1803               	skipnc
  8493  062A  0AC2               	incf	___flmul@temp+1,f
  8494  062B  30FF               	movlw	255
  8495  062C  07C2               	addwf	___flmul@temp+1,f
  8496  062D  2E11               	goto	l6150
  8497  062E                     l6152:	
  8498  062E  01B7               	clrf	___flmul@aexp
  8499  062F  1FBC               	btfss	___flmul@grs+3,7
  8500  0630  2E47               	goto	l6162
  8501  0631  30FF               	movlw	255
  8502  0632  0539               	andwf	___flmul@grs,w
  8503  0633  00B1               	movwf	??___flmul
  8504  0634  30FF               	movlw	255
  8505  0635  053A               	andwf	___flmul@grs+1,w
  8506  0636  00B2               	movwf	??___flmul+1
  8507  0637  30FF               	movlw	255
  8508  0638  053B               	andwf	___flmul@grs+2,w
  8509  0639  00B3               	movwf	??___flmul+2
  8510  063A  307F               	movlw	127
  8511  063B  053C               	andwf	___flmul@grs+3,w
  8512  063C  00B4               	movwf	??___flmul+3
  8513  063D  0834               	movf	??___flmul+3,w
  8514  063E  0433               	iorwf	??___flmul+2,w
  8515  063F  0432               	iorwf	??___flmul+1,w
  8516  0640  0431               	iorwf	??___flmul,w
  8517  0641  1903               	skipnz
  8518  0642  183D               	btfsc	___flmul@prod,0
  8519  0643  2E45               	goto	l6158
  8520  0644  2E47               	goto	l6162
  8521  0645                     l6158:	
  8522  0645  01B7               	clrf	___flmul@aexp
  8523  0646  0AB7               	incf	___flmul@aexp,f
  8524  0647                     l6162:	
  8525  0647  0837               	movf	___flmul@aexp,w
  8526  0648  1903               	btfsc	3,2
  8527  0649  2E79               	goto	l6172
  8528  064A  3001               	movlw	1
  8529  064B  07BD               	addwf	___flmul@prod,f
  8530  064C  3000               	movlw	0
  8531  064D  1803               	skipnc
  8532  064E  3001               	movlw	1
  8533  064F  07BE               	addwf	___flmul@prod+1,f
  8534  0650  3000               	movlw	0
  8535  0651  1803               	skipnc
  8536  0652  3001               	movlw	1
  8537  0653  07BF               	addwf	___flmul@prod+2,f
  8538  0654  3000               	movlw	0
  8539  0655  1803               	skipnc
  8540  0656  3001               	movlw	1
  8541  0657  07C0               	addwf	___flmul@prod+3,f
  8542  0658  1C40               	btfss	___flmul@prod+3,0
  8543  0659  2E79               	goto	l6172
  8544  065A  083D               	movf	___flmul@prod,w
  8545  065B  00B1               	movwf	??___flmul
  8546  065C  083E               	movf	___flmul@prod+1,w
  8547  065D  00B2               	movwf	??___flmul+1
  8548  065E  083F               	movf	___flmul@prod+2,w
  8549  065F  00B3               	movwf	??___flmul+2
  8550  0660  0840               	movf	___flmul@prod+3,w
  8551  0661  00B4               	movwf	??___flmul+3
  8552  0662  3001               	movlw	1
  8553  0663  00B5               	movwf	??___flmul+4
  8554  0664                     u6575:	
  8555  0664  0D34               	rlf	??___flmul+3,w
  8556  0665  0CB4               	rrf	??___flmul+3,f
  8557  0666  0CB3               	rrf	??___flmul+2,f
  8558  0667  0CB2               	rrf	??___flmul+1,f
  8559  0668  0CB1               	rrf	??___flmul,f
  8560  0669  0BB5               	decfsz	??___flmul+4,f
  8561  066A  2E64               	goto	u6575
  8562  066B  0834               	movf	??___flmul+3,w
  8563  066C  00C0               	movwf	___flmul@prod+3
  8564  066D  0833               	movf	??___flmul+2,w
  8565  066E  00BF               	movwf	___flmul@prod+2
  8566  066F  0832               	movf	??___flmul+1,w
  8567  0670  00BE               	movwf	___flmul@prod+1
  8568  0671  0831               	movf	??___flmul,w
  8569  0672  00BD               	movwf	___flmul@prod
  8570  0673  3001               	movlw	1
  8571  0674  07C1               	addwf	___flmul@temp,f
  8572  0675  1803               	skipnc
  8573  0676  0AC2               	incf	___flmul@temp+1,f
  8574  0677  3000               	movlw	0
  8575  0678  07C2               	addwf	___flmul@temp+1,f
  8576  0679                     l6172:	
  8577  0679  0842               	movf	___flmul@temp+1,w
  8578  067A  3A80               	xorlw	128
  8579  067B  00FF               	movwf	127
  8580  067C  3080               	movlw	128
  8581  067D  027F               	subwf	127,w
  8582  067E  1D03               	skipz
  8583  067F  2E82               	goto	u6585
  8584  0680  30FF               	movlw	255
  8585  0681  0241               	subwf	___flmul@temp,w
  8586  0682                     u6585:	
  8587  0682  1C03               	skipc
  8588  0683  2E8F               	goto	l6176
  8589  0684  307F               	movlw	127
  8590  0685  1283               	bcf	3,5	;RP0=0, select bank0
  8591  0686  1303               	bcf	3,6	;RP1=0, select bank0
  8592  0687  00C0               	movwf	___flmul@prod+3
  8593  0688  3080               	movlw	128
  8594  0689  00BF               	movwf	___flmul@prod+2
  8595  068A  3000               	movlw	0
  8596  068B  00BE               	movwf	___flmul@prod+1
  8597  068C  3000               	movlw	0
  8598  068D  00BD               	movwf	___flmul@prod
  8599  068E  2EBF               	goto	l1381
  8600  068F                     l6176:	
  8601  068F  1283               	bcf	3,5	;RP0=0, select bank0
  8602  0690  1303               	bcf	3,6	;RP1=0, select bank0
  8603  0691  0842               	movf	___flmul@temp+1,w
  8604  0692  3A80               	xorlw	128
  8605  0693  00FF               	movwf	127
  8606  0694  3080               	movlw	128
  8607  0695  027F               	subwf	127,w
  8608  0696  1D03               	skipz
  8609  0697  2E9A               	goto	u6595
  8610  0698  3001               	movlw	1
  8611  0699  0241               	subwf	___flmul@temp,w
  8612  069A                     u6595:	
  8613  069A  1803               	skipnc
  8614  069B  2EA8               	goto	l6182
  8615  069C  3000               	movlw	0
  8616  069D  1283               	bcf	3,5	;RP0=0, select bank0
  8617  069E  1303               	bcf	3,6	;RP1=0, select bank0
  8618  069F  00C0               	movwf	___flmul@prod+3
  8619  06A0  3000               	movlw	0
  8620  06A1  00BF               	movwf	___flmul@prod+2
  8621  06A2  3000               	movlw	0
  8622  06A3  00BE               	movwf	___flmul@prod+1
  8623  06A4  3000               	movlw	0
  8624  06A5  00BD               	movwf	___flmul@prod
  8625  06A6  01B6               	clrf	___flmul@sign
  8626  06A7  2EBF               	goto	l1381
  8627  06A8                     l6182:	
  8628  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  8629  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  8630  06AA  0841               	movf	___flmul@temp,w
  8631  06AB  00B1               	movwf	??___flmul
  8632  06AC  0831               	movf	??___flmul,w
  8633  06AD  00B8               	movwf	___flmul@bexp
  8634  06AE  30FF               	movlw	255
  8635  06AF  05BD               	andwf	___flmul@prod,f
  8636  06B0  30FF               	movlw	255
  8637  06B1  05BE               	andwf	___flmul@prod+1,f
  8638  06B2  307F               	movlw	127
  8639  06B3  05BF               	andwf	___flmul@prod+2,f
  8640  06B4  3000               	movlw	0
  8641  06B5  05C0               	andwf	___flmul@prod+3,f
  8642  06B6  1838               	btfsc	___flmul@bexp,0
  8643  06B7  17BF               	bsf	___flmul@prod+2,7
  8644  06B8  0838               	movf	___flmul@bexp,w
  8645  06B9  00B1               	movwf	??___flmul
  8646  06BA  1003               	clrc
  8647  06BB  0C31               	rrf	??___flmul,w
  8648  06BC  00B2               	movwf	??___flmul+1
  8649  06BD  0832               	movf	??___flmul+1,w
  8650  06BE  00C0               	movwf	___flmul@prod+3
  8651  06BF                     l1381:	
  8652  06BF  0836               	movf	___flmul@sign,w
  8653  06C0  00B1               	movwf	??___flmul
  8654  06C1  0831               	movf	??___flmul,w
  8655  06C2  04C0               	iorwf	___flmul@prod+3,f
  8656  06C3  0840               	movf	___flmul@prod+3,w
  8657  06C4  00AC               	movwf	?___flmul+3
  8658  06C5  083F               	movf	___flmul@prod+2,w
  8659  06C6  00AB               	movwf	?___flmul+2
  8660  06C7  083E               	movf	___flmul@prod+1,w
  8661  06C8  00AA               	movwf	?___flmul+1
  8662  06C9  083D               	movf	___flmul@prod,w
  8663  06CA  00A9               	movwf	?___flmul
  8664  06CB  0008               	return
  8665  06CC                     __end_of___flmul:	
  8666                           
  8667                           	psect	text24
  8668  1C60                     __ptext24:	
  8669 ;; *************** function __Umul8_16 *****************
  8670 ;; Defined at:
  8671 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  multiplier      1    wreg     unsigned char 
  8674 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8677 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8678 ;;  product         2    4[BANK0 ] unsigned int 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2    0[BANK0 ] unsigned int 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0
  8683 ;; Tracked objects:
  8684 ;;		On entry : 300/0
  8685 ;;		On exit  : 300/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8688 ;;      Params:         0       2       0       0       0
  8689 ;;      Locals:         0       5       0       0       0
  8690 ;;      Temps:          0       2       0       0       0
  8691 ;;      Totals:         0       9       0       0       0
  8692 ;;Total ram usage:        9 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		___flmul
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function __Umul8_16
  8704  1C60                     __Umul8_16:	
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8708                           ;__Umul8_16@multiplier stored from wreg
  8709  1C60  00A8               	movwf	__Umul8_16@multiplier
  8710  1C61  01A4               	clrf	__Umul8_16@product
  8711  1C62  01A5               	clrf	__Umul8_16@product+1
  8712  1C63  0820               	movf	__Umul8_16@multiplicand,w
  8713  1C64  00A2               	movwf	??__Umul8_16
  8714  1C65  01A3               	clrf	??__Umul8_16+1
  8715  1C66  0822               	movf	??__Umul8_16,w
  8716  1C67  00A6               	movwf	__Umul8_16@word_mpld
  8717  1C68  0823               	movf	??__Umul8_16+1,w
  8718  1C69  00A7               	movwf	__Umul8_16@word_mpld+1
  8719  1C6A                     l5588:	
  8720  1C6A  1C28               	btfss	__Umul8_16@multiplier,0
  8721  1C6B  2C72               	goto	l1448
  8722  1C6C  0826               	movf	__Umul8_16@word_mpld,w
  8723  1C6D  07A4               	addwf	__Umul8_16@product,f
  8724  1C6E  1803               	skipnc
  8725  1C6F  0AA5               	incf	__Umul8_16@product+1,f
  8726  1C70  0827               	movf	__Umul8_16@word_mpld+1,w
  8727  1C71  07A5               	addwf	__Umul8_16@product+1,f
  8728  1C72                     l1448:	
  8729  1C72  3001               	movlw	1
  8730  1C73                     u5445:	
  8731  1C73  1003               	clrc
  8732  1C74  0DA6               	rlf	__Umul8_16@word_mpld,f
  8733  1C75  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8734  1C76  3EFF               	addlw	-1
  8735  1C77  1D03               	skipz
  8736  1C78  2C73               	goto	u5445
  8737  1C79  1003               	clrc
  8738  1C7A  0CA8               	rrf	__Umul8_16@multiplier,f
  8739  1C7B  0828               	movf	__Umul8_16@multiplier,w
  8740  1C7C  1D03               	btfss	3,2
  8741  1C7D  2C6A               	goto	l5588
  8742  1C7E  0825               	movf	__Umul8_16@product+1,w
  8743  1C7F  00A1               	movwf	?__Umul8_16+1
  8744  1C80  0824               	movf	__Umul8_16@product,w
  8745  1C81  00A0               	movwf	?__Umul8_16
  8746  1C82  0008               	return
  8747  1C83                     __end_of__Umul8_16:	
  8748                           
  8749                           	psect	text25
  8750  1B34                     __ptext25:	
  8751 ;; *************** function _PROCULUS_VP_Write_String *****************
  8752 ;; Defined at:
  8753 ;;		line 205 in file "proculus.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  vp              2   58[BANK0 ] unsigned int 
  8756 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8757 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 300/0
  8766 ;;		On exit  : 300/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8769 ;;      Params:         0       3       0       0       0
  8770 ;;      Locals:         0       0       0       0       0
  8771 ;;      Temps:          0       1       0       0       0
  8772 ;;      Totals:         0       4       0       0       0
  8773 ;;Total ram usage:        4 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    4
  8776 ;; This function calls:
  8777 ;;		_PROCULUS_VP_Write
  8778 ;;		_strlen
  8779 ;; This function is called by:
  8780 ;;		_Decodify_Command
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _PROCULUS_VP_Write_String
  8786  1B34                     _PROCULUS_VP_Write_String:	
  8787                           
  8788                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8792  1B34  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8793  1B35  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8794  1B36  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8795  1B37  00D2               	movwf	PROCULUS_VP_Write@vp
  8796  1B38  085C               	movf	PROCULUS_VP_Write_String@text,w
  8797  1B39  00D4               	movwf	PROCULUS_VP_Write@vetor
  8798  1B3A  3001               	movlw	1
  8799  1B3B  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8800  1B3C  085C               	movf	PROCULUS_VP_Write_String@text,w
  8801  1B3D  00A0               	movwf	strlen@s
  8802  1B3E  3001               	movlw	1
  8803  1B3F  00A1               	movwf	strlen@s+1
  8804  1B40  160A  158A  2368  160A  158A  	fcall	_strlen
  8805  1B45  0820               	movf	?_strlen,w
  8806  1B46  3E01               	addlw	1
  8807  1B47  00DD               	movwf	??_PROCULUS_VP_Write_String
  8808  1B48  085D               	movf	??_PROCULUS_VP_Write_String,w
  8809  1B49  00D6               	movwf	PROCULUS_VP_Write@size
  8810  1B4A  160A  158A  2764   	fcall	_PROCULUS_VP_Write
  8811  1B4D  0008               	return
  8812  1B4E                     __end_of_PROCULUS_VP_Write_String:	
  8813                           
  8814                           	psect	text26
  8815  1B68                     __ptext26:	
  8816 ;; *************** function _strlen *****************
  8817 ;; Defined at:
  8818 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8821 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8824 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  2    0[BANK0 ] unsigned int 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 300/0
  8831 ;;		On exit  : 300/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8834 ;;      Params:         0       2       0       0       0
  8835 ;;      Locals:         0       2       0       0       0
  8836 ;;      Temps:          0       0       0       0       0
  8837 ;;      Totals:         0       4       0       0       0
  8838 ;;Total ram usage:        4 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_Decodify_Command
  8845 ;;		_PROCULUS_VP_Write_String
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _strlen
  8851  1B68                     _strlen:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8855  1B68  0820               	movf	strlen@s,w
  8856  1B69  00A2               	movwf	strlen@cp
  8857  1B6A  0821               	movf	strlen@s+1,w
  8858  1B6B  00A3               	movwf	strlen@cp+1
  8859  1B6C                     l5748:	
  8860  1B6C  0822               	movf	strlen@cp,w
  8861  1B6D  0084               	movwf	4
  8862  1B6E  1783               	bsf	3,7
  8863  1B6F  1C23               	btfss	strlen@cp+1,0
  8864  1B70  1383               	bcf	3,7
  8865  1B71  0800               	movf	0,w
  8866  1B72  1903               	btfsc	3,2
  8867  1B73  2B7B               	goto	l5750
  8868  1B74  3001               	movlw	1
  8869  1B75  07A2               	addwf	strlen@cp,f
  8870  1B76  1803               	skipnc
  8871  1B77  0AA3               	incf	strlen@cp+1,f
  8872  1B78  3000               	movlw	0
  8873  1B79  07A3               	addwf	strlen@cp+1,f
  8874  1B7A  2B6C               	goto	l5748
  8875  1B7B                     l5750:	
  8876  1B7B  0820               	movf	strlen@s,w
  8877  1B7C  0222               	subwf	strlen@cp,w
  8878  1B7D  00A0               	movwf	?_strlen
  8879  1B7E  0821               	movf	strlen@s+1,w
  8880  1B7F  1C03               	skipc
  8881  1B80  0A21               	incf	strlen@s+1,w
  8882  1B81  0223               	subwf	strlen@cp+1,w
  8883  1B82  00A1               	movwf	?_strlen+1
  8884  1B83  0008               	return
  8885  1B84                     __end_of_strlen:	
  8886                           
  8887                           	psect	text27
  8888  1F64                     __ptext27:	
  8889 ;; *************** function _PROCULUS_VP_Write *****************
  8890 ;; Defined at:
  8891 ;;		line 40 in file "proculus.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  vp              2   50[BANK0 ] unsigned int 
  8894 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8895 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8896 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8897 ;;  size            1   54[BANK0 ] unsigned char 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  i               1   57[BANK0 ] unsigned char 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 300/0
  8906 ;;		On exit  : 300/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8909 ;;      Params:         0       5       0       0       0
  8910 ;;      Locals:         0       1       0       0       0
  8911 ;;      Temps:          0       2       0       0       0
  8912 ;;      Totals:         0       8       0       0       0
  8913 ;;Total ram usage:        8 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; Hardware stack levels required when called:    3
  8916 ;; This function calls:
  8917 ;;		_PROCULUS_Delay
  8918 ;;		_USART_put_int
  8919 ;;		_USART_putc
  8920 ;; This function is called by:
  8921 ;;		_PROCULUS_VP_Write_String
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           
  8926                           ;psect for function _PROCULUS_VP_Write
  8927  1F64                     _PROCULUS_VP_Write:	
  8928                           
  8929                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8933  1F64  30A5               	movlw	165
  8934  1F65  00CE               	movwf	USART_put_int@value
  8935  1F66  305A               	movlw	90
  8936  1F67  00CF               	movwf	USART_put_int@value+1
  8937  1F68  160A  158A  2305  160A  158A  	fcall	_USART_put_int
  8938                           
  8939                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8940  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  8941  1F6E  0856               	movf	PROCULUS_VP_Write@size,w
  8942  1F6F  3E03               	addlw	3
  8943  1F70  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  8944                           
  8945                           ;proculus.c: 43:      USART_putc(0x82);
  8946  1F75  3082               	movlw	130
  8947  1F76  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  8948                           
  8949                           ;proculus.c: 44:      USART_put_int(vp);
  8950  1F7B  1283               	bcf	3,5	;RP0=0, select bank0
  8951  1F7C  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8952  1F7D  00CF               	movwf	USART_put_int@value+1
  8953  1F7E  0852               	movf	PROCULUS_VP_Write@vp,w
  8954  1F7F  00CE               	movwf	USART_put_int@value
  8955  1F80  160A  158A  2305  160A  158A  	fcall	_USART_put_int
  8956                           
  8957                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8958  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  8959  1F86  01D9               	clrf	PROCULUS_VP_Write@i
  8960  1F87                     l5794:	
  8961  1F87  0856               	movf	PROCULUS_VP_Write@size,w
  8962  1F88  0259               	subwf	PROCULUS_VP_Write@i,w
  8963  1F89  1803               	btfsc	3,0
  8964  1F8A  2FA3               	goto	l5796
  8965                           
  8966                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8967  1F8B  0859               	movf	PROCULUS_VP_Write@i,w
  8968  1F8C  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8969  1F8D  00D7               	movwf	??_PROCULUS_VP_Write
  8970  1F8E  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8971  1F8F  1803               	skipnc
  8972  1F90  3E01               	addlw	1
  8973  1F91  00D8               	movwf	??_PROCULUS_VP_Write+1
  8974  1F92  0857               	movf	??_PROCULUS_VP_Write,w
  8975  1F93  0084               	movwf	4
  8976  1F94  1783               	bsf	3,7
  8977  1F95  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8978  1F96  1383               	bcf	3,7
  8979  1F97  0800               	movf	0,w
  8980  1F98  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  8981  1F9D  3001               	movlw	1
  8982  1F9E  1283               	bcf	3,5	;RP0=0, select bank0
  8983  1F9F  00D7               	movwf	??_PROCULUS_VP_Write
  8984  1FA0  0857               	movf	??_PROCULUS_VP_Write,w
  8985  1FA1  07D9               	addwf	PROCULUS_VP_Write@i,f
  8986  1FA2  2F87               	goto	l5794
  8987  1FA3                     l5796:	
  8988                           
  8989                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8990  1FA3  3001               	movlw	1
  8991  1FA4  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8992  1FA5  3000               	movlw	0
  8993  1FA6  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8994  1FA7  160A  158A  2384   	fcall	_PROCULUS_Delay
  8995  1FAA  0008               	return
  8996  1FAB                     __end_of_PROCULUS_VP_Write:	
  8997                           
  8998                           	psect	text28
  8999  1ADA                     __ptext28:	
  9000 ;; *************** function _PROCULUS_Show_Screen *****************
  9001 ;; Defined at:
  9002 ;;		line 243 in file "proculus.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  screen          2   54[BANK0 ] unsigned int 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 300/0
  9013 ;;		On exit  : 300/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9016 ;;      Params:         0       2       0       0       0
  9017 ;;      Locals:         0       3       0       0       0
  9018 ;;      Temps:          0       1       0       0       0
  9019 ;;      Totals:         0       6       0       0       0
  9020 ;;Total ram usage:        6 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    4
  9023 ;; This function calls:
  9024 ;;		_PROCULUS_Control_Register_Write
  9025 ;; This function is called by:
  9026 ;;		_Decodify_Command
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function _PROCULUS_Show_Screen
  9032  1ADA                     _PROCULUS_Show_Screen:	
  9033                           
  9034                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9038  1ADA  3003               	movlw	3
  9039  1ADB  00D8               	movwf	??_PROCULUS_Show_Screen
  9040  1ADC  0858               	movf	??_PROCULUS_Show_Screen,w
  9041  1ADD  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9042                           
  9043                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9044  1ADE  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9045  1ADF  00D8               	movwf	??_PROCULUS_Show_Screen
  9046  1AE0  0858               	movf	??_PROCULUS_Show_Screen,w
  9047  1AE1  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9048                           
  9049                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9050  1AE2  0856               	movf	PROCULUS_Show_Screen@screen,w
  9051  1AE3  00D8               	movwf	??_PROCULUS_Show_Screen
  9052  1AE4  0858               	movf	??_PROCULUS_Show_Screen,w
  9053  1AE5  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9054                           
  9055                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9056  1AE6  3003               	movlw	3
  9057  1AE7  00D8               	movwf	??_PROCULUS_Show_Screen
  9058  1AE8  0858               	movf	??_PROCULUS_Show_Screen,w
  9059  1AE9  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9060  1AEA  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9061  1AEB  160A  158A  263A   	fcall	_PROCULUS_Control_Register_Write
  9062  1AEE  0008               	return
  9063  1AEF                     __end_of_PROCULUS_Show_Screen:	
  9064                           
  9065                           	psect	text29
  9066  1C3E                     __ptext29:	
  9067 ;; *************** function _PROCULUS_Buzzer *****************
  9068 ;; Defined at:
  9069 ;;		line 223 in file "proculus.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 300/0
  9080 ;;		On exit  : 300/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         0       2       0       0       0
  9084 ;;      Locals:         0       2       0       0       0
  9085 ;;      Temps:          0       1       0       0       0
  9086 ;;      Totals:         0       5       0       0       0
  9087 ;;Total ram usage:        5 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    4
  9090 ;; This function calls:
  9091 ;;		_PROCULUS_Control_Register_Write
  9092 ;;		___lwdiv
  9093 ;; This function is called by:
  9094 ;;		_Decodify_Command
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           
  9099                           ;psect for function _PROCULUS_Buzzer
  9100  1C3E                     _PROCULUS_Buzzer:	
  9101                           
  9102                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9103                           
  9104                           ;incstack = 0
  9105                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9106  1C3E  300A               	movlw	10
  9107  1C3F  00A0               	movwf	___lwdiv@divisor
  9108  1C40  3000               	movlw	0
  9109  1C41  00A1               	movwf	___lwdiv@divisor+1
  9110  1C42  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9111  1C43  00A3               	movwf	___lwdiv@dividend+1
  9112  1C44  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9113  1C45  00A2               	movwf	___lwdiv@dividend
  9114  1C46  160A  158A  26AE  160A  158A  	fcall	___lwdiv
  9115  1C4B  0821               	movf	?___lwdiv+1,w
  9116  1C4C  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9117  1C4D  0820               	movf	?___lwdiv,w
  9118  1C4E  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9119                           
  9120                           ;proculus.c: 226:      vetor[0]=0x02;
  9121  1C4F  3002               	movlw	2
  9122  1C50  00D8               	movwf	??_PROCULUS_Buzzer
  9123  1C51  0858               	movf	??_PROCULUS_Buzzer,w
  9124  1C52  00D9               	movwf	PROCULUS_Buzzer@vetor
  9125                           
  9126                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9127  1C53  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9128  1C54  00D8               	movwf	??_PROCULUS_Buzzer
  9129  1C55  0858               	movf	??_PROCULUS_Buzzer,w
  9130  1C56  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  9131                           
  9132                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9133  1C57  3002               	movlw	2
  9134  1C58  00D8               	movwf	??_PROCULUS_Buzzer
  9135  1C59  0858               	movf	??_PROCULUS_Buzzer,w
  9136  1C5A  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9137  1C5B  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9138  1C5C  160A  158A  263A   	fcall	_PROCULUS_Control_Register_Write
  9139  1C5F  0008               	return
  9140  1C60                     __end_of_PROCULUS_Buzzer:	
  9141                           
  9142                           	psect	text30
  9143  1EAE                     __ptext30:	
  9144 ;; *************** function ___lwdiv *****************
  9145 ;; Defined at:
  9146 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  divisor         2    0[BANK0 ] unsigned int 
  9149 ;;  dividend        2    2[BANK0 ] unsigned int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  quotient        2    6[BANK0 ] unsigned int 
  9152 ;;  counter         1    5[BANK0 ] unsigned char 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  2    0[BANK0 ] unsigned int 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 300/0
  9159 ;;		On exit  : 300/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9162 ;;      Params:         0       4       0       0       0
  9163 ;;      Locals:         0       3       0       0       0
  9164 ;;      Temps:          0       1       0       0       0
  9165 ;;      Totals:         0       8       0       0       0
  9166 ;;Total ram usage:        8 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    1
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		_ADC_Media_10bits
  9173 ;;		_PROCULUS_Buzzer
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___lwdiv
  9179  1EAE                     ___lwdiv:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9183  1EAE  01A6               	clrf	___lwdiv@quotient
  9184  1EAF  01A7               	clrf	___lwdiv@quotient+1
  9185  1EB0  0820               	movf	___lwdiv@divisor,w
  9186  1EB1  0421               	iorwf	___lwdiv@divisor+1,w
  9187  1EB2  1903               	btfsc	3,2
  9188  1EB3  2EE5               	goto	l5856
  9189  1EB4  01A5               	clrf	___lwdiv@counter
  9190  1EB5  0AA5               	incf	___lwdiv@counter,f
  9191  1EB6                     l5844:	
  9192  1EB6  1BA1               	btfsc	___lwdiv@divisor+1,7
  9193  1EB7  2EC4               	goto	l5846
  9194  1EB8  3001               	movlw	1
  9195  1EB9                     u5735:	
  9196  1EB9  1003               	clrc
  9197  1EBA  0DA0               	rlf	___lwdiv@divisor,f
  9198  1EBB  0DA1               	rlf	___lwdiv@divisor+1,f
  9199  1EBC  3EFF               	addlw	-1
  9200  1EBD  1D03               	skipz
  9201  1EBE  2EB9               	goto	u5735
  9202  1EBF  3001               	movlw	1
  9203  1EC0  00A4               	movwf	??___lwdiv
  9204  1EC1  0824               	movf	??___lwdiv,w
  9205  1EC2  07A5               	addwf	___lwdiv@counter,f
  9206  1EC3  2EB6               	goto	l5844
  9207  1EC4                     l5846:	
  9208  1EC4  3001               	movlw	1
  9209  1EC5                     u5755:	
  9210  1EC5  1003               	clrc
  9211  1EC6  0DA6               	rlf	___lwdiv@quotient,f
  9212  1EC7  0DA7               	rlf	___lwdiv@quotient+1,f
  9213  1EC8  3EFF               	addlw	-1
  9214  1EC9  1D03               	skipz
  9215  1ECA  2EC5               	goto	u5755
  9216  1ECB  0821               	movf	___lwdiv@divisor+1,w
  9217  1ECC  0223               	subwf	___lwdiv@dividend+1,w
  9218  1ECD  1D03               	skipz
  9219  1ECE  2ED1               	goto	u5765
  9220  1ECF  0820               	movf	___lwdiv@divisor,w
  9221  1ED0  0222               	subwf	___lwdiv@dividend,w
  9222  1ED1                     u5765:	
  9223  1ED1  1C03               	skipc
  9224  1ED2  2EDA               	goto	l5852
  9225  1ED3  0820               	movf	___lwdiv@divisor,w
  9226  1ED4  02A2               	subwf	___lwdiv@dividend,f
  9227  1ED5  0821               	movf	___lwdiv@divisor+1,w
  9228  1ED6  1C03               	skipc
  9229  1ED7  03A3               	decf	___lwdiv@dividend+1,f
  9230  1ED8  02A3               	subwf	___lwdiv@dividend+1,f
  9231  1ED9  1426               	bsf	___lwdiv@quotient,0
  9232  1EDA                     l5852:	
  9233  1EDA  3001               	movlw	1
  9234  1EDB                     u5775:	
  9235  1EDB  1003               	clrc
  9236  1EDC  0CA1               	rrf	___lwdiv@divisor+1,f
  9237  1EDD  0CA0               	rrf	___lwdiv@divisor,f
  9238  1EDE  3EFF               	addlw	-1
  9239  1EDF  1D03               	skipz
  9240  1EE0  2EDB               	goto	u5775
  9241  1EE1  3001               	movlw	1
  9242  1EE2  02A5               	subwf	___lwdiv@counter,f
  9243  1EE3  1D03               	btfss	3,2
  9244  1EE4  2EC4               	goto	l5846
  9245  1EE5                     l5856:	
  9246  1EE5  0827               	movf	___lwdiv@quotient+1,w
  9247  1EE6  00A1               	movwf	?___lwdiv+1
  9248  1EE7  0826               	movf	___lwdiv@quotient,w
  9249  1EE8  00A0               	movwf	?___lwdiv
  9250  1EE9  0008               	return
  9251  1EEA                     __end_of___lwdiv:	
  9252                           
  9253                           	psect	text31
  9254  1E3A                     __ptext31:	
  9255 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9256 ;; Defined at:
  9257 ;;		line 13 in file "proculus.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  vetor           1    wreg     PTR unsigned char 
  9260 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9261 ;;  size            1   50[BANK0 ] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9264 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9265 ;;  i               1   53[BANK0 ] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 300/0
  9272 ;;		On exit  : 300/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9275 ;;      Params:         0       1       0       0       0
  9276 ;;      Locals:         0       2       0       0       0
  9277 ;;      Temps:          0       1       0       0       0
  9278 ;;      Totals:         0       4       0       0       0
  9279 ;;Total ram usage:        4 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; Hardware stack levels required when called:    3
  9282 ;; This function calls:
  9283 ;;		_PROCULUS_Delay
  9284 ;;		_USART_put_int
  9285 ;;		_USART_putc
  9286 ;; This function is called by:
  9287 ;;		_PROCULUS_Buzzer
  9288 ;;		_PROCULUS_Show_Screen
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _PROCULUS_Control_Register_Write
  9294  1E3A                     _PROCULUS_Control_Register_Write:	
  9295                           
  9296                           ;incstack = 0
  9297                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9298                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9299  1E3A  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9300                           
  9301                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9302  1E3B  30A5               	movlw	165
  9303  1E3C  00CE               	movwf	USART_put_int@value
  9304  1E3D  305A               	movlw	90
  9305  1E3E  00CF               	movwf	USART_put_int@value+1
  9306  1E3F  160A  158A  2305  160A  158A  	fcall	_USART_put_int
  9307                           
  9308                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9309  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  9310  1E45  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9311  1E46  3E01               	addlw	1
  9312  1E47  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  9313                           
  9314                           ;proculus.c: 16:      USART_putc(0x80);
  9315  1E4C  3080               	movlw	128
  9316  1E4D  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  9317                           
  9318                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9319  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  9320  1E53  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9321  1E54                     l5778:	
  9322  1E54  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9323  1E55  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9324  1E56  1803               	btfsc	3,0
  9325  1E57  2E6A               	goto	l5780
  9326                           
  9327                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9328  1E58  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9329  1E59  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9330  1E5A  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9331  1E5B  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9332  1E5C  0084               	movwf	4
  9333  1E5D  1383               	bcf	3,7	;select IRP bank0
  9334  1E5E  0800               	movf	0,w
  9335  1E5F  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  9336  1E64  3001               	movlw	1
  9337  1E65  1283               	bcf	3,5	;RP0=0, select bank0
  9338  1E66  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9339  1E67  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9340  1E68  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9341  1E69  2E54               	goto	l5778
  9342  1E6A                     l5780:	
  9343                           
  9344                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9345  1E6A  3001               	movlw	1
  9346  1E6B  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9347  1E6C  3000               	movlw	0
  9348  1E6D  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9349  1E6E  160A  158A  2384   	fcall	_PROCULUS_Delay
  9350  1E71  0008               	return
  9351  1E72                     __end_of_PROCULUS_Control_Register_Write:	
  9352                           
  9353                           	psect	text32
  9354  1B05                     __ptext32:	
  9355 ;; *************** function _USART_put_int *****************
  9356 ;; Defined at:
  9357 ;;		line 137 in file "usart.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  value           2   46[BANK0 ] int 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9362 ;;		 -> USART_put_int@value(2), 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 300/0
  9369 ;;		On exit  : 300/100
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         0       2       0       0       0
  9373 ;;      Locals:         0       1       0       0       0
  9374 ;;      Temps:          0       1       0       0       0
  9375 ;;      Totals:         0       4       0       0       0
  9376 ;;Total ram usage:        4 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    2
  9379 ;; This function calls:
  9380 ;;		_USART_putc
  9381 ;; This function is called by:
  9382 ;;		_Decodify_Command
  9383 ;;		_PROCULUS_Control_Register_Write
  9384 ;;		_PROCULUS_VP_Write
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function _USART_put_int
  9390  1B05                     _USART_put_int:	
  9391                           
  9392                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9396  1B05  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9397  1B06  00D0               	movwf	??_USART_put_int
  9398  1B07  0850               	movf	??_USART_put_int,w
  9399  1B08  00D1               	movwf	USART_put_int@dado
  9400                           
  9401                           ;usart.c: 140:      USART_putc(*(dado+1));
  9402  1B09  0A51               	incf	USART_put_int@dado,w
  9403  1B0A  0084               	movwf	4
  9404  1B0B  1383               	bcf	3,7	;select IRP bank0
  9405  1B0C  0800               	movf	0,w
  9406  1B0D  160A  158A  22B9  160A  158A  	fcall	_USART_putc
  9407                           
  9408                           ;usart.c: 141:      USART_putc(*dado);
  9409  1B12  1283               	bcf	3,5	;RP0=0, select bank0
  9410  1B13  0851               	movf	USART_put_int@dado,w
  9411  1B14  0084               	movwf	4
  9412  1B15  1383               	bcf	3,7	;select IRP bank0
  9413  1B16  0800               	movf	0,w
  9414  1B17  160A  158A  22B9   	fcall	_USART_putc
  9415  1B1A  0008               	return
  9416  1B1B                     __end_of_USART_put_int:	
  9417                           
  9418                           	psect	text33
  9419  1AB9                     __ptext33:	
  9420 ;; *************** function _USART_putc *****************
  9421 ;; Defined at:
  9422 ;;		line 89 in file "usart.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  value           1    wreg     unsigned char 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  value           1    0[BANK0 ] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/100
  9433 ;;		On exit  : 300/100
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9436 ;;      Params:         0       0       0       0       0
  9437 ;;      Locals:         0       1       0       0       0
  9438 ;;      Temps:          0       0       0       0       0
  9439 ;;      Totals:         0       1       0       0       0
  9440 ;;Total ram usage:        1 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:    1
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_Decodify_Command
  9447 ;;		_Send_To_MB
  9448 ;;		_PROCULUS_Control_Register_Write
  9449 ;;		_PROCULUS_VP_Write
  9450 ;;		_USART_put_buffer
  9451 ;;		_USART_put_int
  9452 ;;		_USART_put_string
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           
  9457                           ;psect for function _USART_putc
  9458  1AB9                     _USART_putc:	
  9459                           
  9460                           ;incstack = 0
  9461                           ; Regs used in _USART_putc: [wreg]
  9462                           ;USART_putc@value stored from wreg
  9463  1AB9  1283               	bcf	3,5	;RP0=0, select bank0
  9464  1ABA  1303               	bcf	3,6	;RP1=0, select bank0
  9465  1ABB  00A0               	movwf	USART_putc@value
  9466                           
  9467                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  9468  1ABC  3014               	movlw	20
  9469  1ABD  1683               	bsf	3,5	;RP0=1, select bank1
  9470  1ABE  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  9471  1ABF  3000               	movlw	0
  9472  1AC0  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  9473  1AC1                     l863:	
  9474                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  9475                           
  9476  1AC1  1C98               	btfss	24,1	;volatile
  9477  1AC2  2AC1               	goto	l863
  9478                           
  9479                           ;usart.c: 93:     TXREG=value;
  9480  1AC3  1283               	bcf	3,5	;RP0=0, select bank0
  9481  1AC4  0820               	movf	USART_putc@value,w
  9482  1AC5  0099               	movwf	25	;volatile
  9483                           
  9484                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  9485  1AC6  1683               	bsf	3,5	;RP0=1, select bank1
  9486  1AC7  1698               	bsf	24,5	;volatile
  9487  1AC8  0008               	return
  9488  1AC9                     __end_of_USART_putc:	
  9489                           
  9490                           	psect	text34
  9491  1B84                     __ptext34:	
  9492 ;; *************** function _PROCULUS_Delay *****************
  9493 ;; Defined at:
  9494 ;;		line 267 in file "proculus.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  i               2    4[BANK0 ] unsigned int 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2
  9503 ;; Tracked objects:
  9504 ;;		On entry : 300/0
  9505 ;;		On exit  : 300/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9508 ;;      Params:         0       2       0       0       0
  9509 ;;      Locals:         0       2       0       0       0
  9510 ;;      Temps:          0       2       0       0       0
  9511 ;;      Totals:         0       6       0       0       0
  9512 ;;Total ram usage:        6 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_PROCULUS_Control_Register_Write
  9519 ;;		_PROCULUS_VP_Write
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           
  9524                           ;psect for function _PROCULUS_Delay
  9525  1B84                     _PROCULUS_Delay:	
  9526                           
  9527                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9528                           
  9529                           ;incstack = 0
  9530                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9531  1B84  01A4               	clrf	PROCULUS_Delay@i
  9532  1B85  01A5               	clrf	PROCULUS_Delay@i+1
  9533  1B86                     l783:	
  9534  1B86  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9535  1B87  0225               	subwf	PROCULUS_Delay@i+1,w
  9536  1B88  1D03               	skipz
  9537  1B89  2B8C               	goto	u5425
  9538  1B8A  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9539  1B8B  0224               	subwf	PROCULUS_Delay@i,w
  9540  1B8C                     u5425:	
  9541  1B8C  1803               	btfsc	3,0
  9542  1B8D  0008               	return
  9543                           
  9544                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9545  1B8E  3003               	movlw	3
  9546  1B8F  1283               	bcf	3,5	;RP0=0, select bank0
  9547  1B90  1303               	bcf	3,6	;RP1=0, select bank0
  9548  1B91  00A3               	movwf	??_PROCULUS_Delay+1
  9549  1B92  3097               	movlw	151
  9550  1B93  00A2               	movwf	??_PROCULUS_Delay
  9551  1B94                     u7727:	
  9552  1B94  0BA2               	decfsz	??_PROCULUS_Delay,f
  9553  1B95  2B94               	goto	u7727
  9554  1B96  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9555  1B97  2B94               	goto	u7727
  9556                           
  9557                           ;proculus.c: 270:     }
  9558  1B98  3001               	movlw	1
  9559  1B99  1283               	bcf	3,5	;RP0=0, select bank0
  9560  1B9A  1303               	bcf	3,6	;RP1=0, select bank0
  9561  1B9B  07A4               	addwf	PROCULUS_Delay@i,f
  9562  1B9C  1803               	skipnc
  9563  1B9D  0AA5               	incf	PROCULUS_Delay@i+1,f
  9564  1B9E  3000               	movlw	0
  9565  1B9F  07A5               	addwf	PROCULUS_Delay@i+1,f
  9566  1BA0  2B86               	goto	l783
  9567  1BA1                     __end_of_PROCULUS_Delay:	
  9568                           
  9569                           	psect	text35
  9570  1CD5                     __ptext35:	
  9571 ;; *************** function _EEPROM_Write_String *****************
  9572 ;; Defined at:
  9573 ;;		line 97 in file "eeprom.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  addr            1    wreg     unsigned char 
  9576 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9577 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  addr            1    7[BANK0 ] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 300/300
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9589 ;;      Params:         0       1       0       0       0
  9590 ;;      Locals:         0       1       0       0       0
  9591 ;;      Temps:          0       1       0       0       0
  9592 ;;      Totals:         0       3       0       0       0
  9593 ;;Total ram usage:        3 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    2
  9596 ;; This function calls:
  9597 ;;		_EEPROM_Write_Byte
  9598 ;; This function is called by:
  9599 ;;		_Decodify_Command
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           
  9604                           ;psect for function _EEPROM_Write_String
  9605  1CD5                     _EEPROM_Write_String:	
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9609                           ;EEPROM_Write_String@addr stored from wreg
  9610  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  9611  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  9612  1CD7  00A7               	movwf	EEPROM_Write_String@addr
  9613  1CD8                     l6512:	
  9614                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9615                           
  9616                           
  9617                           ;eeprom.c: 99:     while(*dado)
  9618  1CD8  0825               	movf	EEPROM_Write_String@dado,w
  9619  1CD9  0084               	movwf	4
  9620  1CDA  1783               	bsf	3,7	;select IRP bank2
  9621  1CDB  0800               	movf	0,w
  9622  1CDC  1903               	btfsc	3,2
  9623  1CDD  2CF5               	goto	l6514
  9624                           
  9625                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9626  1CDE  0825               	movf	EEPROM_Write_String@dado,w
  9627  1CDF  0084               	movwf	4
  9628  1CE0  0800               	movf	0,w
  9629  1CE1  00A6               	movwf	??_EEPROM_Write_String
  9630  1CE2  0826               	movf	??_EEPROM_Write_String,w
  9631  1CE3  00A0               	movwf	EEPROM_Write_Byte@dado
  9632  1CE4  0827               	movf	EEPROM_Write_String@addr,w
  9633  1CE5  160A  158A  2672  160A  158A  	fcall	_EEPROM_Write_Byte
  9634                           
  9635                           ;eeprom.c: 102:      addr++;
  9636  1CEA  3001               	movlw	1
  9637  1CEB  1283               	bcf	3,5	;RP0=0, select bank0
  9638  1CEC  1303               	bcf	3,6	;RP1=0, select bank0
  9639  1CED  00A6               	movwf	??_EEPROM_Write_String
  9640  1CEE  0826               	movf	??_EEPROM_Write_String,w
  9641  1CEF  07A7               	addwf	EEPROM_Write_String@addr,f
  9642                           
  9643                           ;eeprom.c: 103:      dado++;
  9644  1CF0  3001               	movlw	1
  9645  1CF1  00A6               	movwf	??_EEPROM_Write_String
  9646  1CF2  0826               	movf	??_EEPROM_Write_String,w
  9647  1CF3  07A5               	addwf	EEPROM_Write_String@dado,f
  9648  1CF4  2CD8               	goto	l6512
  9649  1CF5                     l6514:	
  9650                           
  9651                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9652  1CF5  0825               	movf	EEPROM_Write_String@dado,w
  9653  1CF6  0084               	movwf	4
  9654  1CF7  0800               	movf	0,w
  9655  1CF8  00A6               	movwf	??_EEPROM_Write_String
  9656  1CF9  0826               	movf	??_EEPROM_Write_String,w
  9657  1CFA  00A0               	movwf	EEPROM_Write_Byte@dado
  9658  1CFB  0827               	movf	EEPROM_Write_String@addr,w
  9659  1CFC  160A  158A  2672   	fcall	_EEPROM_Write_Byte
  9660  1CFF  0008               	return
  9661  1D00                     __end_of_EEPROM_Write_String:	
  9662                           
  9663                           	psect	text36
  9664  1D31                     __ptext36:	
  9665 ;; *************** function _EEPROM_Write_Integer *****************
  9666 ;; Defined at:
  9667 ;;		line 68 in file "eeprom.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  addr            1    wreg     unsigned char 
  9670 ;;  dado            2    5[BANK0 ] unsigned int 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  addr            1   11[BANK0 ] unsigned char 
  9673 ;;  i               1   12[BANK0 ] unsigned char 
  9674 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9675 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9676 ;;  addr_memo       1    0        unsigned char 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 200/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9686 ;;      Params:         0       2       0       0       0
  9687 ;;      Locals:         0       4       0       0       0
  9688 ;;      Temps:          0       2       0       0       0
  9689 ;;      Totals:         0       8       0       0       0
  9690 ;;Total ram usage:        8 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    2
  9693 ;; This function calls:
  9694 ;;		_EEPROM_Write_Byte
  9695 ;; This function is called by:
  9696 ;;		_main
  9697 ;;		_Decodify_Command
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           
  9702                           ;psect for function _EEPROM_Write_Integer
  9703  1D31                     _EEPROM_Write_Integer:	
  9704                           
  9705                           ;incstack = 0
  9706                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9707                           ;EEPROM_Write_Integer@addr stored from wreg
  9708  1D31  1283               	bcf	3,5	;RP0=0, select bank0
  9709  1D32  00AB               	movwf	EEPROM_Write_Integer@addr
  9710                           
  9711                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9712  1D33  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9713  1D34  00A7               	movwf	??_EEPROM_Write_Integer
  9714  1D35  0827               	movf	??_EEPROM_Write_Integer,w
  9715  1D36  00AA               	movwf	EEPROM_Write_Integer@ptr
  9716                           
  9717                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9718  1D37  01AC               	clrf	EEPROM_Write_Integer@i
  9719  1D38                     l6468:	
  9720                           
  9721                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9722  1D38  082A               	movf	EEPROM_Write_Integer@ptr,w
  9723  1D39  0084               	movwf	4
  9724  1D3A  1383               	bcf	3,7	;select IRP bank0
  9725  1D3B  0800               	movf	0,w
  9726  1D3C  00A7               	movwf	??_EEPROM_Write_Integer
  9727  1D3D  0827               	movf	??_EEPROM_Write_Integer,w
  9728  1D3E  00A0               	movwf	EEPROM_Write_Byte@dado
  9729  1D3F  082B               	movf	EEPROM_Write_Integer@addr,w
  9730  1D40  160A  158A  2672  160A  158A  	fcall	_EEPROM_Write_Byte
  9731  1D45  3001               	movlw	1
  9732  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  9733  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  9734  1D48  00A7               	movwf	??_EEPROM_Write_Integer
  9735  1D49  0827               	movf	??_EEPROM_Write_Integer,w
  9736  1D4A  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9737  1D4B  3001               	movlw	1
  9738  1D4C  00A7               	movwf	??_EEPROM_Write_Integer
  9739  1D4D  0827               	movf	??_EEPROM_Write_Integer,w
  9740  1D4E  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9741  1D4F  3001               	movlw	1
  9742  1D50  00A7               	movwf	??_EEPROM_Write_Integer
  9743  1D51  0827               	movf	??_EEPROM_Write_Integer,w
  9744  1D52  07AC               	addwf	EEPROM_Write_Integer@i,f
  9745  1D53  3002               	movlw	2
  9746  1D54  022C               	subwf	EEPROM_Write_Integer@i,w
  9747  1D55  1C03               	skipc
  9748  1D56  2D38               	goto	l6468
  9749                           
  9750                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9751  1D57  304E               	movlw	78
  9752  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  9753  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  9754  1D5A  00A8               	movwf	??_EEPROM_Write_Integer+1
  9755  1D5B  30EA               	movlw	234
  9756  1D5C  00A7               	movwf	??_EEPROM_Write_Integer
  9757  1D5D                     u7737:	
  9758  1D5D  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9759  1D5E  2D5D               	goto	u7737
  9760  1D5F  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9761  1D60  2D5D               	goto	u7737
  9762  1D61  0000               	nop
  9763  1D62  0008               	return
  9764  1D63                     __end_of_EEPROM_Write_Integer:	
  9765                           
  9766                           	psect	text37
  9767  1E72                     __ptext37:	
  9768 ;; *************** function _EEPROM_Write_Byte *****************
  9769 ;; Defined at:
  9770 ;;		line 21 in file "eeprom.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  addr            1    wreg     unsigned char 
  9773 ;;  dado            1    0[BANK0 ] unsigned char 
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;  addr            1    3[BANK0 ] unsigned char 
  9776 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/300
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9786 ;;      Params:         0       1       0       0       0
  9787 ;;      Locals:         0       2       0       0       0
  9788 ;;      Temps:          0       2       0       0       0
  9789 ;;      Totals:         0       5       0       0       0
  9790 ;;Total ram usage:        5 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    1
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_Decodify_Command
  9797 ;;		_EEPROM_Write_Integer
  9798 ;;		_EEPROM_Write_String
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           
  9803                           ;psect for function _EEPROM_Write_Byte
  9804  1E72                     _EEPROM_Write_Byte:	
  9805                           
  9806                           ;incstack = 0
  9807                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9808                           ;EEPROM_Write_Byte@addr stored from wreg
  9809  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  9810  1E73  1303               	bcf	3,6	;RP1=0, select bank0
  9811  1E74  00A3               	movwf	EEPROM_Write_Byte@addr
  9812                           
  9813                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9814  1E75  3014               	movlw	20
  9815  1E76  1683               	bsf	3,5	;RP0=1, select bank1
  9816  1E77  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9817  1E78  3000               	movlw	0
  9818  1E79  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9819  1E7A                     l502:	
  9820                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9821                           
  9822  1E7A  1703               	bsf	3,6	;RP1=1, select bank3
  9823  1E7B  188C               	btfsc	12,1	;volsfr
  9824  1E7C  2E7A               	goto	l502
  9825                           
  9826                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9827  1E7D  1F8B               	btfss	11,7	;volatile
  9828  1E7E  2E84               	goto	l5710
  9829                           
  9830                           ;eeprom.c: 28:           last_GIE=1;
  9831  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  9832  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  9833  1E81  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9834  1E82  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9835  1E83  2E87               	goto	l5712
  9836  1E84                     l5710:	
  9837                           
  9838                           ;eeprom.c: 30:           last_GIE=0;
  9839  1E84  1283               	bcf	3,5	;RP0=0, select bank0
  9840  1E85  1303               	bcf	3,6	;RP1=0, select bank0
  9841  1E86  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9842  1E87                     l5712:	
  9843                           
  9844                           ;eeprom.c: 32:        EEADR=addr;
  9845  1E87  0823               	movf	EEPROM_Write_Byte@addr,w
  9846  1E88  1703               	bsf	3,6	;RP1=1, select bank2
  9847  1E89  008D               	movwf	13	;volatile
  9848                           
  9849                           ;eeprom.c: 33:        EEDATA=dado;
  9850  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
  9851  1E8B  0820               	movf	EEPROM_Write_Byte@dado,w
  9852  1E8C  1703               	bsf	3,6	;RP1=1, select bank2
  9853  1E8D  008C               	movwf	12	;volatile
  9854                           
  9855                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9856  1E8E  1683               	bsf	3,5	;RP0=1, select bank3
  9857  1E8F  138C               	bcf	12,7	;volsfr
  9858                           
  9859                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9860  1E90  150C               	bsf	12,2	;volsfr
  9861                           
  9862                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9863  1E91  138B               	bcf	11,7	;volatile
  9864                           
  9865                           ;eeprom.c: 37:        EECON2=0x55;
  9866  1E92  3055               	movlw	85
  9867  1E93  008D               	movwf	13	;volsfr
  9868                           
  9869                           ;eeprom.c: 38:        EECON2=0xAA;
  9870  1E94  30AA               	movlw	170
  9871  1E95  008D               	movwf	13	;volsfr
  9872                           
  9873                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9874  1E96  148C               	bsf	12,1	;volsfr
  9875                           
  9876                           ;eeprom.c: 41:        if(last_GIE==1)
  9877  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  9878  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  9879  1E99  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9880  1E9A  1D03               	btfss	3,2
  9881  1E9B  2E9E               	goto	l507
  9882                           
  9883                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9884  1E9C  178B               	bsf	11,7	;volatile
  9885  1E9D  2E9F               	goto	l508
  9886  1E9E                     l507:	
  9887                           ;eeprom.c: 43:        else
  9888                           
  9889                           
  9890                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9891  1E9E  138B               	bcf	11,7	;volatile
  9892  1E9F                     l508:	
  9893                           
  9894                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9895  1E9F  1683               	bsf	3,5	;RP0=1, select bank3
  9896  1EA0  1703               	bsf	3,6	;RP1=1, select bank3
  9897  1EA1  110C               	bcf	12,2	;volsfr
  9898                           
  9899                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9900  1EA2  304E               	movlw	78
  9901  1EA3  1283               	bcf	3,5	;RP0=0, select bank0
  9902  1EA4  1303               	bcf	3,6	;RP1=0, select bank0
  9903  1EA5  00A2               	movwf	??_EEPROM_Write_Byte+1
  9904  1EA6  30EA               	movlw	234
  9905  1EA7  00A1               	movwf	??_EEPROM_Write_Byte
  9906  1EA8                     u7747:	
  9907  1EA8  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9908  1EA9  2EA8               	goto	u7747
  9909  1EAA  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9910  1EAB  2EA8               	goto	u7747
  9911  1EAC  0000               	nop
  9912  1EAD  0008               	return
  9913  1EAE                     __end_of_EEPROM_Write_Byte:	
  9914                           
  9915                           	psect	text38
  9916  1BFC                     __ptext38:	
  9917 ;; *************** function _EEPROM_Read_String *****************
  9918 ;; Defined at:
  9919 ;;		line 109 in file "eeprom.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  addr            1    wreg     unsigned char 
  9922 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9923 ;;		 -> buffer(33), 
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  addr            1    5[BANK0 ] unsigned char 
  9926 ;;  c               1    6[BANK0 ] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 300/300
  9933 ;;		On exit  : B00/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9936 ;;      Params:         0       1       0       0       0
  9937 ;;      Locals:         0       2       0       0       0
  9938 ;;      Temps:          0       1       0       0       0
  9939 ;;      Totals:         0       4       0       0       0
  9940 ;;Total ram usage:        4 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    2
  9943 ;; This function calls:
  9944 ;;		_EEPROM_Read_Byte
  9945 ;; This function is called by:
  9946 ;;		_Decodify_Command
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           
  9951                           ;psect for function _EEPROM_Read_String
  9952  1BFC                     _EEPROM_Read_String:	
  9953                           
  9954                           ;incstack = 0
  9955                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9956                           ;EEPROM_Read_String@addr stored from wreg
  9957  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  9958  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  9959  1BFE  00A5               	movwf	EEPROM_Read_String@addr
  9960  1BFF                     l534:	
  9961                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9962                           
  9963                           
  9964                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9965  1BFF  0825               	movf	EEPROM_Read_String@addr,w
  9966  1C00  160A  158A  241C  160A  158A  	fcall	_EEPROM_Read_Byte
  9967  1C05  1303               	bcf	3,6	;RP1=0, select bank0
  9968  1C06  00A4               	movwf	??_EEPROM_Read_String
  9969  1C07  0824               	movf	??_EEPROM_Read_String,w
  9970  1C08  00A6               	movwf	EEPROM_Read_String@c
  9971  1C09  3001               	movlw	1
  9972  1C0A  00A4               	movwf	??_EEPROM_Read_String
  9973  1C0B  0824               	movf	??_EEPROM_Read_String,w
  9974  1C0C  07A5               	addwf	EEPROM_Read_String@addr,f
  9975                           
  9976                           ;eeprom.c: 114:         *(dado++)=c;
  9977  1C0D  0826               	movf	EEPROM_Read_String@c,w
  9978  1C0E  00A4               	movwf	??_EEPROM_Read_String
  9979  1C0F  0823               	movf	EEPROM_Read_String@dado,w
  9980  1C10  0084               	movwf	4
  9981  1C11  0824               	movf	??_EEPROM_Read_String,w
  9982  1C12  1383               	bcf	3,7	;select IRP bank0
  9983  1C13  0080               	movwf	0
  9984  1C14  3001               	movlw	1
  9985  1C15  00A4               	movwf	??_EEPROM_Read_String
  9986  1C16  0824               	movf	??_EEPROM_Read_String,w
  9987  1C17  07A3               	addwf	EEPROM_Read_String@dado,f
  9988                           
  9989                           ;eeprom.c: 116:       }while(c);
  9990  1C18  0826               	movf	EEPROM_Read_String@c,w
  9991  1C19  1903               	btfsc	3,2
  9992  1C1A  0008               	return
  9993  1C1B  2BFF               	goto	l534
  9994  1C1C                     __end_of_EEPROM_Read_String:	
  9995                           
  9996                           	psect	text39
  9997  1CAB                     __ptext39:	
  9998 ;; *************** function _EEPROM_Read_Integer *****************
  9999 ;; Defined at:
 10000 ;;		line 81 in file "eeprom.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  addr            1    wreg     unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  addr            1    6[BANK0 ] unsigned char 
 10005 ;;  result          2    8[BANK0 ] unsigned int 
 10006 ;;  i               1   10[BANK0 ] unsigned char 
 10007 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10008 ;;		 -> EEPROM_Read_Integer@result(2), 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  2    3[BANK0 ] unsigned int 
 10011 ;; Registers used:
 10012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : B00/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10018 ;;      Params:         0       2       0       0       0
 10019 ;;      Locals:         0       5       0       0       0
 10020 ;;      Temps:          0       1       0       0       0
 10021 ;;      Totals:         0       8       0       0       0
 10022 ;;Total ram usage:        8 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:    2
 10025 ;; This function calls:
 10026 ;;		_EEPROM_Read_Byte
 10027 ;; This function is called by:
 10028 ;;		_main
 10029 ;;		_Decodify_Command
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _EEPROM_Read_Integer
 10035  1CAB                     _EEPROM_Read_Integer:	
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10039                           ;EEPROM_Read_Integer@addr stored from wreg
 10040  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
 10041  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
 10042  1CAD  00A6               	movwf	EEPROM_Read_Integer@addr
 10043                           
 10044                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10045  1CAE  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10046  1CAF  00A5               	movwf	??_EEPROM_Read_Integer
 10047  1CB0  0825               	movf	??_EEPROM_Read_Integer,w
 10048  1CB1  00A7               	movwf	EEPROM_Read_Integer@ptr
 10049                           
 10050                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10051  1CB2  01AA               	clrf	EEPROM_Read_Integer@i
 10052  1CB3                     l6444:	
 10053                           
 10054                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10055  1CB3  0826               	movf	EEPROM_Read_Integer@addr,w
 10056  1CB4  160A  158A  241C  160A  158A  	fcall	_EEPROM_Read_Byte
 10057  1CB9  1303               	bcf	3,6	;RP1=0, select bank0
 10058  1CBA  00A5               	movwf	??_EEPROM_Read_Integer
 10059  1CBB  0827               	movf	EEPROM_Read_Integer@ptr,w
 10060  1CBC  0084               	movwf	4
 10061  1CBD  0825               	movf	??_EEPROM_Read_Integer,w
 10062  1CBE  1383               	bcf	3,7	;select IRP bank0
 10063  1CBF  0080               	movwf	0
 10064  1CC0  3001               	movlw	1
 10065  1CC1  00A5               	movwf	??_EEPROM_Read_Integer
 10066  1CC2  0825               	movf	??_EEPROM_Read_Integer,w
 10067  1CC3  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10068  1CC4  3001               	movlw	1
 10069  1CC5  00A5               	movwf	??_EEPROM_Read_Integer
 10070  1CC6  0825               	movf	??_EEPROM_Read_Integer,w
 10071  1CC7  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10072  1CC8  3001               	movlw	1
 10073  1CC9  00A5               	movwf	??_EEPROM_Read_Integer
 10074  1CCA  0825               	movf	??_EEPROM_Read_Integer,w
 10075  1CCB  07AA               	addwf	EEPROM_Read_Integer@i,f
 10076  1CCC  3002               	movlw	2
 10077  1CCD  022A               	subwf	EEPROM_Read_Integer@i,w
 10078  1CCE  1C03               	skipc
 10079  1CCF  2CB3               	goto	l6444
 10080                           
 10081                           ;eeprom.c: 89:       return result;
 10082  1CD0  0829               	movf	EEPROM_Read_Integer@result+1,w
 10083  1CD1  00A4               	movwf	?_EEPROM_Read_Integer+1
 10084  1CD2  0828               	movf	EEPROM_Read_Integer@result,w
 10085  1CD3  00A3               	movwf	?_EEPROM_Read_Integer
 10086  1CD4  0008               	return
 10087  1CD5                     __end_of_EEPROM_Read_Integer:	
 10088                           
 10089                           	psect	text40
 10090  1C1C                     __ptext40:	
 10091 ;; *************** function _EEPROM_Read_Byte *****************
 10092 ;; Defined at:
 10093 ;;		line 52 in file "eeprom.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  addr            1    wreg     unsigned char 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  addr            1    2[BANK0 ] unsigned char 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      unsigned char 
 10100 ;; Registers used:
 10101 ;;		wreg
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/300
 10104 ;;		On exit  : 300/200
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10107 ;;      Params:         0       0       0       0       0
 10108 ;;      Locals:         0       1       0       0       0
 10109 ;;      Temps:          0       2       0       0       0
 10110 ;;      Totals:         0       3       0       0       0
 10111 ;;Total ram usage:        3 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    1
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		_Decodify_Command
 10118 ;;		_EEPROM_Read_Integer
 10119 ;;		_EEPROM_Read_String
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           
 10124                           ;psect for function _EEPROM_Read_Byte
 10125  1C1C                     _EEPROM_Read_Byte:	
 10126                           
 10127                           ;incstack = 0
 10128                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10129                           ;EEPROM_Read_Byte@addr stored from wreg
 10130  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
 10131  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
 10132  1C1E  00A2               	movwf	EEPROM_Read_Byte@addr
 10133                           
 10134                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10135  1C1F  3014               	movlw	20
 10136  1C20  1683               	bsf	3,5	;RP0=1, select bank1
 10137  1C21  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10138  1C22  3000               	movlw	0
 10139  1C23  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10140  1C24                     l512:	
 10141                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10142                           
 10143  1C24  1703               	bsf	3,6	;RP1=1, select bank3
 10144  1C25  188C               	btfsc	12,1	;volsfr
 10145  1C26  2C24               	goto	l512
 10146                           
 10147                           ;eeprom.c: 57:    EEADR=addr;
 10148  1C27  1283               	bcf	3,5	;RP0=0, select bank0
 10149  1C28  1303               	bcf	3,6	;RP1=0, select bank0
 10150  1C29  0822               	movf	EEPROM_Read_Byte@addr,w
 10151  1C2A  1703               	bsf	3,6	;RP1=1, select bank2
 10152  1C2B  008D               	movwf	13	;volatile
 10153                           
 10154                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10155  1C2C  1683               	bsf	3,5	;RP0=1, select bank3
 10156  1C2D  138C               	bcf	12,7	;volsfr
 10157                           
 10158                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10159  1C2E  140C               	bsf	12,0	;volsfr
 10160                           
 10161                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10162  1C2F  304E               	movlw	78
 10163  1C30  1283               	bcf	3,5	;RP0=0, select bank0
 10164  1C31  1303               	bcf	3,6	;RP1=0, select bank0
 10165  1C32  00A1               	movwf	??_EEPROM_Read_Byte+1
 10166  1C33  30EA               	movlw	234
 10167  1C34  00A0               	movwf	??_EEPROM_Read_Byte
 10168  1C35                     u7757:	
 10169  1C35  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10170  1C36  2C35               	goto	u7757
 10171  1C37  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10172  1C38  2C35               	goto	u7757
 10173  1C39  0000               	nop
 10174                           
 10175                           ;eeprom.c: 61:    return EEDATA;
 10176  1C3A  1283               	bcf	3,5	;RP0=0, select bank2
 10177  1C3B  1703               	bsf	3,6	;RP1=1, select bank2
 10178  1C3C  080C               	movf	12,w	;volatile
 10179  1C3D  0008               	return
 10180  1C3E                     __end_of_EEPROM_Read_Byte:	
 10181                           
 10182                           	psect	text41
 10183  1437                     __ptext41:	
 10184 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10185 ;; Defined at:
 10186 ;;		line 147 in file "EEPROM_24C1025.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  chip_add        1    wreg     unsigned char 
 10189 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10190 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10191 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10194 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10195 ;;  range           1   18[BANK0 ] unsigned char 
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  1    wreg      void 
 10198 ;; Registers used:
 10199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10200 ;; Tracked objects:
 10201 ;;		On entry : 300/300
 10202 ;;		On exit  : 300/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10205 ;;      Params:         0       5       0       0       0
 10206 ;;      Locals:         0       3       0       0       0
 10207 ;;      Temps:          0       2       0       0       0
 10208 ;;      Totals:         0      10       0       0       0
 10209 ;;Total ram usage:       10 bytes
 10210 ;; Hardware stack levels used:    1
 10211 ;; Hardware stack levels required when called:    3
 10212 ;; This function calls:
 10213 ;;		_I2C_Master_Start
 10214 ;;		_I2C_Master_Stop
 10215 ;;		_I2C_Master_Write
 10216 ;;		_my_delay_ms_WDT
 10217 ;; This function is called by:
 10218 ;;		_Decodify_Command
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function _EEPROM_24C1025_Write_Str
 10224  1437                     _EEPROM_24C1025_Write_Str:	
 10225                           
 10226                           ;incstack = 0
 10227                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10228                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10229  1437  1283               	bcf	3,5	;RP0=0, select bank0
 10230  1438  1303               	bcf	3,6	;RP1=0, select bank0
 10231  1439  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10232                           
 10233                           ;EEPROM_24C1025.c: 149:      unsigned char ctrl;;EEPROM_24C1025.c: 151:      if(mem_add>
      +                          0x1FFFF) return;
 10234  143A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10235  143B  1D03               	btfss	3,2
 10236  143C  0008               	return
 10237  143D  3002               	movlw	2
 10238  143E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10239  143F  1D03               	skipz
 10240  1440  2C49               	goto	u6753
 10241  1441  3000               	movlw	0
 10242  1442  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10243  1443  1D03               	skipz
 10244  1444  2C49               	goto	u6753
 10245  1445  3000               	movlw	0
 10246  1446  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10247  1447  1D03               	skipz
 10248  1448  2C49               	goto	u6753
 10249  1449                     u6753:	
 10250  1449  1803               	btfsc	3,0
 10251  144A  0008               	return
 10252  144B                     L10:	
 10253                           
 10254                           ;EEPROM_24C1025.c: 153:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10255  144B  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10256  144C  1D03               	btfss	3,2
 10257  144D  2C5C               	goto	l6246
 10258  144E  3001               	movlw	1
 10259  144F  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10260  1450  1D03               	skipz
 10261  1451  2C5A               	goto	u6763
 10262  1452  3000               	movlw	0
 10263  1453  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10264  1454  1D03               	skipz
 10265  1455  2C5A               	goto	u6763
 10266  1456  3000               	movlw	0
 10267  1457  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10268  1458  1D03               	skipz
 10269  1459  2C5A               	goto	u6763
 10270  145A                     u6763:	
 10271  145A  1C03               	btfss	3,0
 10272  145B  2C61               	goto	l6248
 10273  145C                     l6246:	
 10274  145C  3008               	movlw	8
 10275  145D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10276  145E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10277  145F  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10278  1460  2C62               	goto	l6250
 10279  1461                     l6248:	
 10280  1461  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10281  1462                     l6250:	
 10282                           
 10283                           ;EEPROM_24C1025.c: 154:      ctrl=chip_add;
 10284  1462  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10285  1463  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10286  1464  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10287  1465  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10288                           
 10289                           ;EEPROM_24C1025.c: 155:      ctrl<<=1;
 10290  1466  1003               	clrc
 10291  1467  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10292                           
 10293                           ;EEPROM_24C1025.c: 156:      ctrl |= 0xA0;
 10294  1468  30A0               	movlw	160
 10295  1469  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10296  146A  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10297  146B  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10298                           
 10299                           ;EEPROM_24C1025.c: 157:      ctrl |= range;
 10300  146C  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10301  146D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10302  146E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10303  146F  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10304                           
 10305                           ;EEPROM_24C1025.c: 159:      I2C_Master_Start();
 10306  1470  160A  158A  22C9  160A  118A  	fcall	_I2C_Master_Start
 10307                           
 10308                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(ctrl);
 10309  1475  1283               	bcf	3,5	;RP0=0, select bank0
 10310  1476  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10311  1477  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10312  1478  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10313  1479  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10314  147A  00A3               	movwf	I2C_Master_Write@d
 10315  147B  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10316  147C  00A4               	movwf	I2C_Master_Write@d+1
 10317  147D  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10318                           
 10319                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[1]);
 10320  1482  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10321  1483  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10322  1484  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10323  1485  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10324  1486  00A3               	movwf	I2C_Master_Write@d
 10325  1487  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10326  1488  00A4               	movwf	I2C_Master_Write@d+1
 10327  1489  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10328                           
 10329                           ;EEPROM_24C1025.c: 162:      I2C_Master_Write(((char *)&mem_add)[0]);
 10330  148E  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10331  148F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10332  1490  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10333  1491  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10334  1492  00A3               	movwf	I2C_Master_Write@d
 10335  1493  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10336  1494  00A4               	movwf	I2C_Master_Write@d+1
 10337  1495  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10338  149A                     l6310:	
 10339                           ;EEPROM_24C1025.c: 163:      while(*data)
 10340                           
 10341                           
 10342                           ;EEPROM_24C1025.c: 163:      while(*data)
 10343  149A  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10344  149B  0084               	movwf	4
 10345  149C  1783               	bsf	3,7	;select IRP bank2
 10346  149D  0800               	movf	0,w
 10347  149E  1903               	btfsc	3,2
 10348  149F  2D10               	goto	l6312
 10349  14A0  0064               	clrwdt	;# 
 10350                           
 10351                           ;EEPROM_24C1025.c: 166:           if(mem_add>0x1FFFF) return;
 10352  14A1  1283               	bcf	3,5	;RP0=0, select bank0
 10353  14A2  1303               	bcf	3,6	;RP1=0, select bank0
 10354  14A3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10355  14A4  1D03               	btfss	3,2
 10356  14A5  0008               	return
 10357  14A6  3002               	movlw	2
 10358  14A7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10359  14A8  1D03               	skipz
 10360  14A9  2CB2               	goto	u6773
 10361  14AA  3000               	movlw	0
 10362  14AB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10363  14AC  1D03               	skipz
 10364  14AD  2CB2               	goto	u6773
 10365  14AE  3000               	movlw	0
 10366  14AF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10367  14B0  1D03               	skipz
 10368  14B1  2CB2               	goto	u6773
 10369  14B2                     u6773:	
 10370  14B2  1803               	btfsc	3,0
 10371  14B3  0008               	return
 10372                           
 10373                           ;EEPROM_24C1025.c: 167:           if((mem_add+1)%128==0)
 10374  14B4  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10375  14B5  3E01               	addlw	1
 10376  14B6  397F               	andlw	127
 10377  14B7  1D03               	btfss	3,2
 10378  14B8  2CEE               	goto	l6304
 10379                           
 10380                           ;EEPROM_24C1025.c: 168:             {;EEPROM_24C1025.c: 169:             I2C_Master_Writ
      +                          e(*data);
 10381  14B9  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10382  14BA  0084               	movwf	4
 10383  14BB  1783               	bsf	3,7	;select IRP bank2
 10384  14BC  0800               	movf	0,w
 10385  14BD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10386  14BE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10387  14BF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10388  14C0  00A3               	movwf	I2C_Master_Write@d
 10389  14C1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10390  14C2  00A4               	movwf	I2C_Master_Write@d+1
 10391  14C3  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10392                           
 10393                           ;EEPROM_24C1025.c: 170:             I2C_Master_Stop();
 10394  14C8  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 10395                           
 10396                           ;EEPROM_24C1025.c: 172:             my_delay_ms_WDT(5);
 10397  14CD  3000               	movlw	0
 10398  14CE  1283               	bcf	3,5	;RP0=0, select bank0
 10399  14CF  00A3               	movwf	my_delay_ms_WDT@time+3
 10400  14D0  3000               	movlw	0
 10401  14D1  00A2               	movwf	my_delay_ms_WDT@time+2
 10402  14D2  3000               	movlw	0
 10403  14D3  00A1               	movwf	my_delay_ms_WDT@time+1
 10404  14D4  3005               	movlw	5
 10405  14D5  00A0               	movwf	my_delay_ms_WDT@time
 10406  14D6  160A  158A  2602  160A  118A  	fcall	_my_delay_ms_WDT
 10407                           
 10408                           ;EEPROM_24C1025.c: 173:             mem_add++;
 10409  14DB  3001               	movlw	1
 10410  14DC  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10411  14DD  3000               	movlw	0
 10412  14DE  1803               	skipnc
 10413  14DF  3001               	movlw	1
 10414  14E0  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10415  14E1  3000               	movlw	0
 10416  14E2  1803               	skipnc
 10417  14E3  3001               	movlw	1
 10418  14E4  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10419  14E5  3000               	movlw	0
 10420  14E6  1803               	skipnc
 10421  14E7  3001               	movlw	1
 10422  14E8  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10423                           
 10424                           ;EEPROM_24C1025.c: 174:             data++;
 10425  14E9  3001               	movlw	1
 10426  14EA  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10427  14EB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10428  14EC  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10429  14ED  2C4B               	goto	L10
 10430  14EE                     l6304:	
 10431                           ;EEPROM_24C1025.c: 175:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10432                           
 10433                           
 10434                           ;EEPROM_24C1025.c: 187:             {;EEPROM_24C1025.c: 188:             I2C_Master_Writ
      +                          e(*data);
 10435  14EE  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10436  14EF  0084               	movwf	4
 10437  14F0  1783               	bsf	3,7	;select IRP bank2
 10438  14F1  0800               	movf	0,w
 10439  14F2  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10440  14F3  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10441  14F4  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10442  14F5  00A3               	movwf	I2C_Master_Write@d
 10443  14F6  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10444  14F7  00A4               	movwf	I2C_Master_Write@d+1
 10445  14F8  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10446                           
 10447                           ;EEPROM_24C1025.c: 189:             data++;
 10448  14FD  3001               	movlw	1
 10449  14FE  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10450  14FF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10451  1500  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10452                           
 10453                           ;EEPROM_24C1025.c: 190:             mem_add++;
 10454  1501  3001               	movlw	1
 10455  1502  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10456  1503  3000               	movlw	0
 10457  1504  1803               	skipnc
 10458  1505  3001               	movlw	1
 10459  1506  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10460  1507  3000               	movlw	0
 10461  1508  1803               	skipnc
 10462  1509  3001               	movlw	1
 10463  150A  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10464  150B  3000               	movlw	0
 10465  150C  1803               	skipnc
 10466  150D  3001               	movlw	1
 10467  150E  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10468  150F  2C9A               	goto	l6310
 10469  1510                     l6312:	
 10470                           
 10471                           ;EEPROM_24C1025.c: 193:      I2C_Master_Write(0);
 10472  1510  3000               	movlw	0
 10473  1511  00A3               	movwf	I2C_Master_Write@d
 10474  1512  00A4               	movwf	I2C_Master_Write@d+1
 10475  1513  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10476                           
 10477                           ;EEPROM_24C1025.c: 194:      I2C_Master_Stop();
 10478  1518  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 10479                           
 10480                           ;EEPROM_24C1025.c: 195:      my_delay_ms_WDT(5);
 10481  151D  3000               	movlw	0
 10482  151E  1283               	bcf	3,5	;RP0=0, select bank0
 10483  151F  00A3               	movwf	my_delay_ms_WDT@time+3
 10484  1520  3000               	movlw	0
 10485  1521  00A2               	movwf	my_delay_ms_WDT@time+2
 10486  1522  3000               	movlw	0
 10487  1523  00A1               	movwf	my_delay_ms_WDT@time+1
 10488  1524  3005               	movlw	5
 10489  1525  00A0               	movwf	my_delay_ms_WDT@time
 10490  1526  160A  158A  2602   	fcall	_my_delay_ms_WDT
 10491  1529  0008               	return
 10492  152A                     __end_of_EEPROM_24C1025_Write_Str:	
 10493                           
 10494                           	psect	text42
 10495  1AEF                     __ptext42:	
 10496 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10497 ;; Defined at:
 10498 ;;		line 268 in file "EEPROM_24C1025.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  chip_add        1    wreg     unsigned char 
 10501 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10502 ;;  data            1   27[BANK0 ] unsigned char 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      void 
 10507 ;; Registers used:
 10508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 300/300
 10511 ;;		On exit  : 300/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10514 ;;      Params:         0       5       0       0       0
 10515 ;;      Locals:         0       1       0       0       0
 10516 ;;      Temps:          0       0       0       0       0
 10517 ;;      Totals:         0       6       0       0       0
 10518 ;;Total ram usage:        6 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    4
 10521 ;; This function calls:
 10522 ;;		_EEPROM_24C1025_Write_Buffer
 10523 ;; This function is called by:
 10524 ;;		_Decodify_Command
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           
 10529                           ;psect for function _EEPROM_24C1025_Write_Byte
 10530  1AEF                     _EEPROM_24C1025_Write_Byte:	
 10531                           
 10532                           ;incstack = 0
 10533                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10534                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10535  1AEF  1283               	bcf	3,5	;RP0=0, select bank0
 10536  1AF0  1303               	bcf	3,6	;RP1=0, select bank0
 10537  1AF1  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10538                           
 10539                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10540  1AF2  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10541  1AF3  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10542  1AF4  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10543  1AF5  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10544  1AF6  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10545  1AF7  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10546  1AF8  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10547  1AF9  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10548  1AFA  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10549  1AFB  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10550  1AFC  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10551  1AFD  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10552  1AFE  3000               	movlw	0
 10553  1AFF  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10554  1B00  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10555  1B01  160A  118A  252A   	fcall	_EEPROM_24C1025_Write_Buffer
 10556  1B04  0008               	return
 10557  1B05                     __end_of_EEPROM_24C1025_Write_Byte:	
 10558                           
 10559                           	psect	text43
 10560  1694                     __ptext43:	
 10561 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10562 ;; Defined at:
 10563 ;;		line 202 in file "EEPROM_24C1025.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  chip_add        1    wreg     unsigned char 
 10566 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10567 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10568 ;;		 -> buffer(33), 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10571 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10572 ;;  range           1   18[BANK0 ] unsigned char 
 10573 ;;  cnt             1   16[BANK0 ] unsigned char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 300/300
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10583 ;;      Params:         0       5       0       0       0
 10584 ;;      Locals:         0       4       0       0       0
 10585 ;;      Temps:          0       2       0       0       0
 10586 ;;      Totals:         0      11       0       0       0
 10587 ;;Total ram usage:       11 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    3
 10590 ;; This function calls:
 10591 ;;		_I2C_Master_Read
 10592 ;;		_I2C_Master_RepeatedStart
 10593 ;;		_I2C_Master_Start
 10594 ;;		_I2C_Master_Stop
 10595 ;;		_I2C_Master_Write
 10596 ;; This function is called by:
 10597 ;;		_Decodify_Command
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           
 10602                           ;psect for function _EEPROM_24C1025_Read_Str
 10603  1694                     _EEPROM_24C1025_Read_Str:	
 10604                           
 10605                           ;incstack = 0
 10606                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10607                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10608  1694  1283               	bcf	3,5	;RP0=0, select bank0
 10609  1695  1303               	bcf	3,6	;RP1=0, select bank0
 10610  1696  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10611                           
 10612                           ;EEPROM_24C1025.c: 204:      unsigned char range=0;
 10613  1697  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10614                           
 10615                           ;EEPROM_24C1025.c: 205:      unsigned char ctrl;;EEPROM_24C1025.c: 207:      if(mem_add>
      +                          0x1FFFF) return;
 10616  1698  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10617  1699  1D03               	btfss	3,2
 10618  169A  0008               	return
 10619  169B  3002               	movlw	2
 10620  169C  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10621  169D  1D03               	skipz
 10622  169E  2EA7               	goto	u6813
 10623  169F  3000               	movlw	0
 10624  16A0  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10625  16A1  1D03               	skipz
 10626  16A2  2EA7               	goto	u6813
 10627  16A3  3000               	movlw	0
 10628  16A4  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10629  16A5  1D03               	skipz
 10630  16A6  2EA7               	goto	u6813
 10631  16A7                     u6813:	
 10632  16A7  1803               	btfsc	3,0
 10633  16A8  0008               	return
 10634                           
 10635                           ;EEPROM_24C1025.c: 209:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10636  16A9  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10637  16AA  1D03               	btfss	3,2
 10638  16AB  2EBA               	goto	l6324
 10639  16AC  3001               	movlw	1
 10640  16AD  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10641  16AE  1D03               	skipz
 10642  16AF  2EB8               	goto	u6823
 10643  16B0  3000               	movlw	0
 10644  16B1  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10645  16B2  1D03               	skipz
 10646  16B3  2EB8               	goto	u6823
 10647  16B4  3000               	movlw	0
 10648  16B5  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10649  16B6  1D03               	skipz
 10650  16B7  2EB8               	goto	u6823
 10651  16B8                     u6823:	
 10652  16B8  1C03               	btfss	3,0
 10653  16B9  2EBF               	goto	l6326
 10654  16BA                     l6324:	
 10655  16BA  3008               	movlw	8
 10656  16BB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10657  16BC  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10658  16BD  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10659  16BE  2EC0               	goto	l6328
 10660  16BF                     l6326:	
 10661  16BF  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10662  16C0                     l6328:	
 10663                           
 10664                           ;EEPROM_24C1025.c: 210:      ctrl=chip_add;
 10665  16C0  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10666  16C1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10667  16C2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10668  16C3  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10669                           
 10670                           ;EEPROM_24C1025.c: 211:      ctrl<<=1;
 10671  16C4  1003               	clrc
 10672  16C5  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10673                           
 10674                           ;EEPROM_24C1025.c: 212:      ctrl |= 0xA0;
 10675  16C6  30A0               	movlw	160
 10676  16C7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10677  16C8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10678  16C9  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10679                           
 10680                           ;EEPROM_24C1025.c: 213:      ctrl |= 0b00000001;
 10681  16CA  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10682                           
 10683                           ;EEPROM_24C1025.c: 214:      ctrl |= range;
 10684  16CB  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10685  16CC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10686  16CD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10687  16CE  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10688                           
 10689                           ;EEPROM_24C1025.c: 216:      I2C_Master_Start();
 10690  16CF  160A  158A  22C9  160A  118A  	fcall	_I2C_Master_Start
 10691                           
 10692                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(ctrl & 0xFE);
 10693  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 10694  16D5  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10695  16D6  39FE               	andlw	254
 10696  16D7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10697  16D8  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10698  16D9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10699  16DA  00A3               	movwf	I2C_Master_Write@d
 10700  16DB  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10701  16DC  00A4               	movwf	I2C_Master_Write@d+1
 10702  16DD  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10703                           
 10704                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[1]);
 10705  16E2  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10706  16E3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10707  16E4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10708  16E5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10709  16E6  00A3               	movwf	I2C_Master_Write@d
 10710  16E7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10711  16E8  00A4               	movwf	I2C_Master_Write@d+1
 10712  16E9  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10713                           
 10714                           ;EEPROM_24C1025.c: 219:      I2C_Master_Write(((char *)&mem_add)[0]);
 10715  16EE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10716  16EF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10717  16F0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10718  16F1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10719  16F2  00A3               	movwf	I2C_Master_Write@d
 10720  16F3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10721  16F4  00A4               	movwf	I2C_Master_Write@d+1
 10722  16F5  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10723                           
 10724                           ;EEPROM_24C1025.c: 220:      I2C_Master_RepeatedStart();
 10725  16FA  160A  158A  22AE  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10726                           
 10727                           ;EEPROM_24C1025.c: 221:      I2C_Master_Write(ctrl);
 10728  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 10729  1700  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10730  1701  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10731  1702  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10732  1703  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10733  1704  00A3               	movwf	I2C_Master_Write@d
 10734  1705  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10735  1706  00A4               	movwf	I2C_Master_Write@d+1
 10736  1707  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10737                           
 10738                           ;EEPROM_24C1025.c: 223:      cnt=0;
 10739  170C  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10740  170D                     l6350:	
 10741                           
 10742                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10743  170D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10744  170E  1D03               	btfss	3,2
 10745  170F  2FE9               	goto	l6406
 10746  1710  3002               	movlw	2
 10747  1711  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10748  1712  1D03               	skipz
 10749  1713  2F1C               	goto	u6833
 10750  1714  3000               	movlw	0
 10751  1715  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10752  1716  1D03               	skipz
 10753  1717  2F1C               	goto	u6833
 10754  1718  3000               	movlw	0
 10755  1719  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10756  171A  1D03               	skipz
 10757  171B  2F1C               	goto	u6833
 10758  171C                     u6833:	
 10759  171C  1803               	btfsc	3,0
 10760  171D  2FE9               	goto	l6406
 10761                           
 10762                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10763  171E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10764  171F  3E01               	addlw	1
 10765  1720  397F               	andlw	127
 10766  1721  1D03               	btfss	3,2
 10767  1722  2FB9               	goto	l6394
 10768                           
 10769                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*buffer)=I2C
      +                          _Master_Read(0);
 10770  1723  3000               	movlw	0
 10771  1724  00A3               	movwf	I2C_Master_Read@a
 10772  1725  00A4               	movwf	I2C_Master_Read@a+1
 10773  1726  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 10774  172B  0823               	movf	?_I2C_Master_Read,w
 10775  172C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10776  172D  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10777  172E  0084               	movwf	4
 10778  172F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10779  1730  1383               	bcf	3,7	;select IRP bank0
 10780  1731  0080               	movwf	0
 10781                           
 10782                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10783  1732  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 10784                           
 10785                           ;EEPROM_24C1025.c: 231:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10786  1737  300D               	movlw	13
 10787  1738  1283               	bcf	3,5	;RP0=0, select bank0
 10788  1739  1303               	bcf	3,6	;RP1=0, select bank0
 10789  173A  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10790  173B  30FB               	movlw	251
 10791  173C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10792  173D                     u7767:	
 10793  173D  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10794  173E  2F3D               	goto	u7767
 10795  173F  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10796  1740  2F3D               	goto	u7767
 10797                           
 10798                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10799  1741  3001               	movlw	1
 10800  1742  1283               	bcf	3,5	;RP0=0, select bank0
 10801  1743  1303               	bcf	3,6	;RP1=0, select bank0
 10802  1744  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10803  1745  3000               	movlw	0
 10804  1746  1803               	skipnc
 10805  1747  3001               	movlw	1
 10806  1748  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10807  1749  3000               	movlw	0
 10808  174A  1803               	skipnc
 10809  174B  3001               	movlw	1
 10810  174C  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10811  174D  3000               	movlw	0
 10812  174E  1803               	skipnc
 10813  174F  3001               	movlw	1
 10814  1750  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10815                           
 10816                           ;EEPROM_24C1025.c: 233:              buffer++;
 10817  1751  3001               	movlw	1
 10818  1752  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10819  1753  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10820  1754  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10821                           
 10822                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10823  1755  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10824  1756  1D03               	btfss	3,2
 10825  1757  2F66               	goto	l6368
 10826  1758  3001               	movlw	1
 10827  1759  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10828  175A  1D03               	skipz
 10829  175B  2F64               	goto	u6853
 10830  175C  3000               	movlw	0
 10831  175D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10832  175E  1D03               	skipz
 10833  175F  2F64               	goto	u6853
 10834  1760  3000               	movlw	0
 10835  1761  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10836  1762  1D03               	skipz
 10837  1763  2F64               	goto	u6853
 10838  1764                     u6853:	
 10839  1764  1C03               	btfss	3,0
 10840  1765  2F6B               	goto	l6370
 10841  1766                     l6368:	
 10842  1766  3008               	movlw	8
 10843  1767  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10844  1768  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10845  1769  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10846  176A  2F6C               	goto	l6372
 10847  176B                     l6370:	
 10848  176B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10849  176C                     l6372:	
 10850                           
 10851                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10852  176C  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10853  176D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10854  176E  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10855  176F  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10856                           
 10857                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10858  1770  1003               	clrc
 10859  1771  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10860                           
 10861                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10862  1772  30A0               	movlw	160
 10863  1773  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10864  1774  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10865  1775  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10866                           
 10867                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10868  1776  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10869                           
 10870                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10871  1777  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10872  1778  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10873  1779  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10874  177A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10875                           
 10876                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10877  177B  160A  158A  22C9  160A  118A  	fcall	_I2C_Master_Start
 10878                           
 10879                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10880  1780  1283               	bcf	3,5	;RP0=0, select bank0
 10881  1781  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10882  1782  39FE               	andlw	254
 10883  1783  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10884  1784  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10885  1785  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10886  1786  00A3               	movwf	I2C_Master_Write@d
 10887  1787  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10888  1788  00A4               	movwf	I2C_Master_Write@d+1
 10889  1789  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10890                           
 10891                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10892  178E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10893  178F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10894  1790  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10895  1791  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10896  1792  00A3               	movwf	I2C_Master_Write@d
 10897  1793  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10898  1794  00A4               	movwf	I2C_Master_Write@d+1
 10899  1795  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10900                           
 10901                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10902  179A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10903  179B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10904  179C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10905  179D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10906  179E  00A3               	movwf	I2C_Master_Write@d
 10907  179F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10908  17A0  00A4               	movwf	I2C_Master_Write@d+1
 10909  17A1  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10910                           
 10911                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10912  17A6  160A  158A  22AE  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10913                           
 10914                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 10915  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 10916  17AC  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10917  17AD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10918  17AE  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10919  17AF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10920  17B0  00A3               	movwf	I2C_Master_Write@d
 10921  17B1  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10922  17B2  00A4               	movwf	I2C_Master_Write@d+1
 10923  17B3  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 10924                           
 10925                           ;EEPROM_24C1025.c: 247:              }
 10926  17B8  2FE0               	goto	l6404
 10927  17B9                     l6394:	
 10928                           
 10929                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*buffer)=I2C
      +                          _Master_Read(1);
 10930  17B9  3001               	movlw	1
 10931  17BA  00A3               	movwf	I2C_Master_Read@a
 10932  17BB  3000               	movlw	0
 10933  17BC  00A4               	movwf	I2C_Master_Read@a+1
 10934  17BD  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 10935  17C2  0823               	movf	?_I2C_Master_Read,w
 10936  17C3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10937  17C4  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10938  17C5  0084               	movwf	4
 10939  17C6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10940  17C7  1383               	bcf	3,7	;select IRP bank0
 10941  17C8  0080               	movwf	0
 10942                           
 10943                           ;EEPROM_24C1025.c: 251:              if((*buffer)==0)break;
 10944  17C9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10945  17CA  0084               	movwf	4
 10946  17CB  0800               	movf	0,w
 10947  17CC  1903               	btfsc	3,2
 10948  17CD  2FE9               	goto	l6406
 10949                           
 10950                           ;EEPROM_24C1025.c: 252:              buffer++;
 10951  17CE  3001               	movlw	1
 10952  17CF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10953  17D0  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10954  17D1  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10955                           
 10956                           ;EEPROM_24C1025.c: 253:              mem_add++;
 10957  17D2  3001               	movlw	1
 10958  17D3  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10959  17D4  3000               	movlw	0
 10960  17D5  1803               	skipnc
 10961  17D6  3001               	movlw	1
 10962  17D7  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10963  17D8  3000               	movlw	0
 10964  17D9  1803               	skipnc
 10965  17DA  3001               	movlw	1
 10966  17DB  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10967  17DC  3000               	movlw	0
 10968  17DD  1803               	skipnc
 10969  17DE  3001               	movlw	1
 10970  17DF  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10971  17E0                     l6404:	
 10972                           
 10973                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 10974  17E0  3001               	movlw	1
 10975  17E1  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10976  17E2  30FF               	movlw	-1
 10977  17E3  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10978  17E4  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10979  17E5  3040               	movlw	64
 10980  17E6  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10981  17E7  1C03               	skipc
 10982  17E8  2F0D               	goto	l6350
 10983  17E9                     l6406:	
 10984                           
 10985                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 10986  17E9  3000               	movlw	0
 10987  17EA  00A3               	movwf	I2C_Master_Read@a
 10988  17EB  00A4               	movwf	I2C_Master_Read@a+1
 10989  17EC  160A  158A  2596  160A  118A  	fcall	_I2C_Master_Read
 10990                           
 10991                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 10992  17F1  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 10993                           
 10994                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10995  17F6  30B9               	movlw	185
 10996  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 10997  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 10998  17F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10999  17FA                     u7777:	
 11000  17FA  2FFB               	nop2
 11001  17FB  2FFC               	nop2
 11002  17FC  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11003  17FD  2FFA               	goto	u7777
 11004  17FE  2FFF               	nop2
 11005  17FF  0008               	return
 11006  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11007                           
 11008                           	psect	text44
 11009  1C83                     __ptext44:	
 11010 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11011 ;; Defined at:
 11012 ;;		line 287 in file "EEPROM_24C1025.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  chip_add        1    wreg     unsigned char 
 11015 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  chip_add        1   29[BANK0 ] unsigned char 
 11018 ;;  data            2   30[BANK0 ] unsigned char [2]
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  2   23[BANK0 ] unsigned int 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 300/300
 11025 ;;		On exit  : 300/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11028 ;;      Params:         0       4       0       0       0
 11029 ;;      Locals:         0       3       0       0       0
 11030 ;;      Temps:          0       2       0       0       0
 11031 ;;      Totals:         0       9       0       0       0
 11032 ;;Total ram usage:        9 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    4
 11035 ;; This function calls:
 11036 ;;		_EEPROM_24C1025_Read_Buffer
 11037 ;; This function is called by:
 11038 ;;		_Decodify_Command
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           
 11043                           ;psect for function _EEPROM_24C1025_Read_Int
 11044  1C83                     _EEPROM_24C1025_Read_Int:	
 11045                           
 11046                           ;incstack = 0
 11047                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11048                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11049  1C83  1283               	bcf	3,5	;RP0=0, select bank0
 11050  1C84  1303               	bcf	3,6	;RP1=0, select bank0
 11051  1C85  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11052                           
 11053                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11054  1C86  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11055  1C87  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11056  1C88  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11057  1C89  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11058  1C8A  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11059  1C8B  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11060  1C8C  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11061  1C8D  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11062  1C8E  3002               	movlw	2
 11063  1C8F  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11064  1C90  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11065  1C91  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11066  1C92  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11067  1C93  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11068  1C94  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 11069  1C95  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11070  1C96  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11071  1C97  120A  158A  2029   	fcall	_EEPROM_24C1025_Read_Buffer
 11072                           
 11073                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 11074  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
 11075  1C9B  1303               	bcf	3,6	;RP1=0, select bank0
 11076  1C9C  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 11077  1C9D  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11078  1C9E  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 11079  1C9F  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11080  1CA0  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11081  1CA1  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 11082  1CA2  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11083  1CA3  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 11084  1CA4  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 11085  1CA5  3000               	movlw	0
 11086  1CA6  1803               	skipnc
 11087  1CA7  3001               	movlw	1
 11088  1CA8  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11089  1CA9  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 11090  1CAA  0008               	return
 11091  1CAB                     __end_of_EEPROM_24C1025_Read_Int:	
 11092                           
 11093                           	psect	text45
 11094  1B1B                     __ptext45:	
 11095 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11096 ;; Defined at:
 11097 ;;		line 273 in file "EEPROM_24C1025.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  chip_add        1    wreg     unsigned char 
 11100 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11103 ;;  data            1   29[BANK0 ] unsigned char 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      unsigned char 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 300/300
 11110 ;;		On exit  : 300/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11113 ;;      Params:         0       4       0       0       0
 11114 ;;      Locals:         0       2       0       0       0
 11115 ;;      Temps:          0       1       0       0       0
 11116 ;;      Totals:         0       7       0       0       0
 11117 ;;Total ram usage:        7 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    4
 11120 ;; This function calls:
 11121 ;;		_EEPROM_24C1025_Read_Buffer
 11122 ;; This function is called by:
 11123 ;;		_Decodify_Command
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           
 11128                           ;psect for function _EEPROM_24C1025_Read_Byte
 11129  1B1B                     _EEPROM_24C1025_Read_Byte:	
 11130                           
 11131                           ;incstack = 0
 11132                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11133                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11134  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
 11135  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
 11136  1B1D  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11137                           
 11138                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11139  1B1E  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11140  1B1F  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11141  1B20  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11142  1B21  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11143  1B22  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11144  1B23  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11145  1B24  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11146  1B25  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11147  1B26  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11148  1B27  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11149  1B28  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11150  1B29  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 11151  1B2A  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 11152  1B2B  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11153  1B2C  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11154  1B2D  120A  158A  2029   	fcall	_EEPROM_24C1025_Read_Buffer
 11155                           
 11156                           ;EEPROM_24C1025.c: 276:     return data;
 11157  1B30  1283               	bcf	3,5	;RP0=0, select bank0
 11158  1B31  1303               	bcf	3,6	;RP1=0, select bank0
 11159  1B32  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11160  1B33  0008               	return
 11161  1B34                     __end_of_EEPROM_24C1025_Read_Byte:	
 11162                           
 11163                           	psect	text46
 11164  0829                     __ptext46:	
 11165 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11166 ;; Defined at:
 11167 ;;		line 77 in file "EEPROM_24C1025.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;  chip_add        1    wreg     unsigned char 
 11170 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11171 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11172 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11173 ;;		 -> buffer(33), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11176 ;;  cnt             1   19[BANK0 ] unsigned char 
 11177 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11178 ;;  range           1   21[BANK0 ] unsigned char 
 11179 ;;  cnt             1    0        unsigned char 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  1    wreg      void 
 11182 ;; Registers used:
 11183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/300
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11189 ;;      Params:         0       6       0       0       0
 11190 ;;      Locals:         0       5       0       0       0
 11191 ;;      Temps:          0       2       0       0       0
 11192 ;;      Totals:         0      13       0       0       0
 11193 ;;Total ram usage:       13 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; Hardware stack levels required when called:    3
 11196 ;; This function calls:
 11197 ;;		_I2C_Master_Read
 11198 ;;		_I2C_Master_RepeatedStart
 11199 ;;		_I2C_Master_Start
 11200 ;;		_I2C_Master_Stop
 11201 ;;		_I2C_Master_Write
 11202 ;;		_my_delay_ms_WDT
 11203 ;; This function is called by:
 11204 ;;		_EEPROM_24C1025_Read_Byte
 11205 ;;		_EEPROM_24C1025_Read_Int
 11206 ;;		_Decodify_Command
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           
 11211                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11212  0829                     _EEPROM_24C1025_Read_Buffer:	
 11213                           
 11214                           ;incstack = 0
 11215                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11216                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11217  0829  1283               	bcf	3,5	;RP0=0, select bank0
 11218  082A  1303               	bcf	3,6	;RP1=0, select bank0
 11219  082B  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11220                           
 11221                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11222  082C  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11223                           
 11224                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11225  082D  3014               	movlw	20
 11226  082E  1683               	bsf	3,5	;RP0=1, select bank1
 11227  082F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11228  0830  3000               	movlw	0
 11229  0831  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11230                           
 11231                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11232  0832  1283               	bcf	3,5	;RP0=0, select bank0
 11233  0833  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11234  0834  1D03               	btfss	3,2
 11235  0835  0008               	return
 11236  0836  3002               	movlw	2
 11237  0837  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11238  0838  1D03               	skipz
 11239  0839  2842               	goto	u5463
 11240  083A  3000               	movlw	0
 11241  083B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11242  083C  1D03               	skipz
 11243  083D  2842               	goto	u5463
 11244  083E  3000               	movlw	0
 11245  083F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11246  0840  1D03               	skipz
 11247  0841  2842               	goto	u5463
 11248  0842                     u5463:	
 11249  0842  1803               	btfsc	3,0
 11250  0843  0008               	return
 11251                           
 11252                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11253  0844  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11254  0845  1D03               	btfss	3,2
 11255  0846  2855               	goto	l5608
 11256  0847  3001               	movlw	1
 11257  0848  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11258  0849  1D03               	skipz
 11259  084A  2853               	goto	u5473
 11260  084B  3000               	movlw	0
 11261  084C  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11262  084D  1D03               	skipz
 11263  084E  2853               	goto	u5473
 11264  084F  3000               	movlw	0
 11265  0850  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11266  0851  1D03               	skipz
 11267  0852  2853               	goto	u5473
 11268  0853                     u5473:	
 11269  0853  1C03               	btfss	3,0
 11270  0854  285A               	goto	l5610
 11271  0855                     l5608:	
 11272  0855  3008               	movlw	8
 11273  0856  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11274  0857  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11275  0858  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11276  0859  285B               	goto	l5612
 11277  085A                     l5610:	
 11278  085A  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11279  085B                     l5612:	
 11280                           
 11281                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11282  085B  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11283  085C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11284  085D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11285  085E  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11286                           
 11287                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11288  085F  1003               	clrc
 11289  0860  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11290                           
 11291                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11292  0861  30A0               	movlw	160
 11293  0862  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11294  0863  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11295  0864  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11296                           
 11297                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11298  0865  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11299                           
 11300                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11301  0866  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11302  0867  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11303  0868  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11304  0869  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11305                           
 11306                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11307  086A  160A  158A  22C9  120A  158A  	fcall	_I2C_Master_Start
 11308                           
 11309                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11310  086F  1283               	bcf	3,5	;RP0=0, select bank0
 11311  0870  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11312  0871  39FE               	andlw	254
 11313  0872  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11314  0873  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11315  0874  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11316  0875  00A3               	movwf	I2C_Master_Write@d
 11317  0876  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11318  0877  00A4               	movwf	I2C_Master_Write@d+1
 11319  0878  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11320                           
 11321                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11322  087D  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11323  087E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11324  087F  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11325  0880  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11326  0881  00A3               	movwf	I2C_Master_Write@d
 11327  0882  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11328  0883  00A4               	movwf	I2C_Master_Write@d+1
 11329  0884  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11330                           
 11331                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11332  0889  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11333  088A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11334  088B  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11335  088C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11336  088D  00A3               	movwf	I2C_Master_Write@d
 11337  088E  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11338  088F  00A4               	movwf	I2C_Master_Write@d+1
 11339  0890  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11340                           
 11341                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11342  0895  160A  158A  22AE  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11343                           
 11344                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11345  089A  1283               	bcf	3,5	;RP0=0, select bank0
 11346  089B  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11347  089C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11348  089D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11349  089E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11350  089F  00A3               	movwf	I2C_Master_Write@d
 11351  08A0  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11352  08A1  00A4               	movwf	I2C_Master_Write@d+1
 11353  08A2  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11354                           
 11355                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11356  08A7  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 11357  08A8                     l5686:	
 11358  08A8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11359  08A9  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 11360  08AA  1803               	btfsc	3,0
 11361  08AB  2984               	goto	l5688
 11362  08AC  0064               	clrwdt	;# 
 11363                           
 11364                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11365  08AD  1283               	bcf	3,5	;RP0=0, select bank0
 11366  08AE  1303               	bcf	3,6	;RP1=0, select bank0
 11367  08AF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11368  08B0  1D03               	btfss	3,2
 11369  08B1  2984               	goto	l5688
 11370  08B2  3002               	movlw	2
 11371  08B3  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11372  08B4  1D03               	skipz
 11373  08B5  28BE               	goto	u5483
 11374  08B6  3000               	movlw	0
 11375  08B7  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11376  08B8  1D03               	skipz
 11377  08B9  28BE               	goto	u5483
 11378  08BA  3000               	movlw	0
 11379  08BB  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11380  08BC  1D03               	skipz
 11381  08BD  28BE               	goto	u5483
 11382  08BE                     u5483:	
 11383  08BE  1803               	btfsc	3,0
 11384  08BF  2984               	goto	l5688
 11385                           
 11386                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11387  08C0  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11388  08C1  3E01               	addlw	1
 11389  08C2  397F               	andlw	127
 11390  08C3  1D03               	btfss	3,2
 11391  08C4  295D               	goto	l5678
 11392                           
 11393                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11394  08C5  3000               	movlw	0
 11395  08C6  00A3               	movwf	I2C_Master_Read@a
 11396  08C7  00A4               	movwf	I2C_Master_Read@a+1
 11397  08C8  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11398  08CD  0823               	movf	?_I2C_Master_Read,w
 11399  08CE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11400  08CF  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11401  08D0  0084               	movwf	4
 11402  08D1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11403  08D2  1383               	bcf	3,7	;select IRP bank0
 11404  08D3  0080               	movwf	0
 11405                           
 11406                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11407  08D4  160A  158A  227C  120A  158A  	fcall	_I2C_Master_Stop
 11408                           
 11409                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11410  08D9  3000               	movlw	0
 11411  08DA  1283               	bcf	3,5	;RP0=0, select bank0
 11412  08DB  00A3               	movwf	my_delay_ms_WDT@time+3
 11413  08DC  3000               	movlw	0
 11414  08DD  00A2               	movwf	my_delay_ms_WDT@time+2
 11415  08DE  3000               	movlw	0
 11416  08DF  00A1               	movwf	my_delay_ms_WDT@time+1
 11417  08E0  3005               	movlw	5
 11418  08E1  00A0               	movwf	my_delay_ms_WDT@time
 11419  08E2  160A  158A  2602  120A  158A  	fcall	_my_delay_ms_WDT
 11420                           
 11421                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11422  08E7  3001               	movlw	1
 11423  08E8  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11424  08E9  3000               	movlw	0
 11425  08EA  1803               	skipnc
 11426  08EB  3001               	movlw	1
 11427  08EC  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11428  08ED  3000               	movlw	0
 11429  08EE  1803               	skipnc
 11430  08EF  3001               	movlw	1
 11431  08F0  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11432  08F1  3000               	movlw	0
 11433  08F2  1803               	skipnc
 11434  08F3  3001               	movlw	1
 11435  08F4  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11436                           
 11437                           ;EEPROM_24C1025.c: 115:              data++;
 11438  08F5  3001               	movlw	1
 11439  08F6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11440  08F7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11441  08F8  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11442                           
 11443                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11444  08F9  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11445  08FA  1D03               	btfss	3,2
 11446  08FB  290A               	goto	l5652
 11447  08FC  3001               	movlw	1
 11448  08FD  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11449  08FE  1D03               	skipz
 11450  08FF  2908               	goto	u5503
 11451  0900  3000               	movlw	0
 11452  0901  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11453  0902  1D03               	skipz
 11454  0903  2908               	goto	u5503
 11455  0904  3000               	movlw	0
 11456  0905  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11457  0906  1D03               	skipz
 11458  0907  2908               	goto	u5503
 11459  0908                     u5503:	
 11460  0908  1C03               	btfss	3,0
 11461  0909  290F               	goto	l5654
 11462  090A                     l5652:	
 11463  090A  3008               	movlw	8
 11464  090B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11465  090C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11466  090D  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11467  090E  2910               	goto	l5656
 11468  090F                     l5654:	
 11469  090F  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11470  0910                     l5656:	
 11471                           
 11472                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11473  0910  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11474  0911  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11475  0912  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11476  0913  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11477                           
 11478                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11479  0914  1003               	clrc
 11480  0915  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11481                           
 11482                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11483  0916  30A0               	movlw	160
 11484  0917  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11485  0918  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11486  0919  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11487                           
 11488                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11489  091A  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11490                           
 11491                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11492  091B  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11493  091C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11494  091D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11495  091E  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11496                           
 11497                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11498  091F  160A  158A  22C9  120A  158A  	fcall	_I2C_Master_Start
 11499                           
 11500                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11501  0924  1283               	bcf	3,5	;RP0=0, select bank0
 11502  0925  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11503  0926  39FE               	andlw	254
 11504  0927  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11505  0928  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11506  0929  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11507  092A  00A3               	movwf	I2C_Master_Write@d
 11508  092B  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11509  092C  00A4               	movwf	I2C_Master_Write@d+1
 11510  092D  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11511                           
 11512                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11513  0932  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11514  0933  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11515  0934  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11516  0935  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11517  0936  00A3               	movwf	I2C_Master_Write@d
 11518  0937  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11519  0938  00A4               	movwf	I2C_Master_Write@d+1
 11520  0939  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11521                           
 11522                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11523  093E  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11524  093F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11525  0940  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11526  0941  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11527  0942  00A3               	movwf	I2C_Master_Write@d
 11528  0943  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11529  0944  00A4               	movwf	I2C_Master_Write@d+1
 11530  0945  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11531                           
 11532                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11533  094A  160A  158A  22AE  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11534                           
 11535                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11536  094F  1283               	bcf	3,5	;RP0=0, select bank0
 11537  0950  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11538  0951  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11539  0952  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11540  0953  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11541  0954  00A3               	movwf	I2C_Master_Write@d
 11542  0955  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11543  0956  00A4               	movwf	I2C_Master_Write@d+1
 11544  0957  160A  158A  22A3  120A  158A  	fcall	_I2C_Master_Write
 11545                           
 11546                           ;EEPROM_24C1025.c: 129:              }
 11547  095C  297F               	goto	l5684
 11548  095D                     l5678:	
 11549                           
 11550                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11551  095D  3001               	movlw	1
 11552  095E  00A3               	movwf	I2C_Master_Read@a
 11553  095F  3000               	movlw	0
 11554  0960  00A4               	movwf	I2C_Master_Read@a+1
 11555  0961  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11556  0966  0823               	movf	?_I2C_Master_Read,w
 11557  0967  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11558  0968  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11559  0969  0084               	movwf	4
 11560  096A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11561  096B  1383               	bcf	3,7	;select IRP bank0
 11562  096C  0080               	movwf	0
 11563                           
 11564                           ;EEPROM_24C1025.c: 133:              data++;
 11565  096D  3001               	movlw	1
 11566  096E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11567  096F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11568  0970  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11569                           
 11570                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11571  0971  3001               	movlw	1
 11572  0972  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11573  0973  3000               	movlw	0
 11574  0974  1803               	skipnc
 11575  0975  3001               	movlw	1
 11576  0976  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11577  0977  3000               	movlw	0
 11578  0978  1803               	skipnc
 11579  0979  3001               	movlw	1
 11580  097A  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11581  097B  3000               	movlw	0
 11582  097C  1803               	skipnc
 11583  097D  3001               	movlw	1
 11584  097E  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11585  097F                     l5684:	
 11586                           
 11587                           ;EEPROM_24C1025.c: 136:         }
 11588  097F  3001               	movlw	1
 11589  0980  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11590  0981  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11591  0982  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 11592  0983  28A8               	goto	l5686
 11593  0984                     l5688:	
 11594                           
 11595                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11596  0984  3000               	movlw	0
 11597  0985  00A3               	movwf	I2C_Master_Read@a
 11598  0986  00A4               	movwf	I2C_Master_Read@a+1
 11599  0987  160A  158A  2596  120A  158A  	fcall	_I2C_Master_Read
 11600                           
 11601                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11602  098C  160A  158A  227C  120A  158A  	fcall	_I2C_Master_Stop
 11603                           
 11604                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11605  0991  30B9               	movlw	185
 11606  0992  1283               	bcf	3,5	;RP0=0, select bank0
 11607  0993  1303               	bcf	3,6	;RP1=0, select bank0
 11608  0994  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11609  0995                     u7787:	
 11610  0995  2996               	nop2
 11611  0996  2997               	nop2
 11612  0997  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11613  0998  2995               	goto	u7787
 11614  0999  299A               	nop2
 11615  099A  0008               	return
 11616  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11617                           
 11618                           	psect	text47
 11619  1AAE                     __ptext47:	
 11620 ;; *************** function _I2C_Master_RepeatedStart *****************
 11621 ;; Defined at:
 11622 ;;		line 62 in file "I2C.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0, pclath, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 300/0
 11633 ;;		On exit  : 200/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11636 ;;      Params:         0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0
 11639 ;;      Totals:         0       0       0       0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    2
 11643 ;; This function calls:
 11644 ;;		_I2C_Master_Wait
 11645 ;; This function is called by:
 11646 ;;		_EEPROM_24C1025_Read_Buffer
 11647 ;;		_EEPROM_24C1025_Read_Str
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           
 11652                           ;psect for function _I2C_Master_RepeatedStart
 11653  1AAE                     _I2C_Master_RepeatedStart:	
 11654                           
 11655                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11656                           
 11657                           ;incstack = 0
 11658                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11659  1AAE  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 11660  1AB3  3A00               	xorlw	0
 11661  1AB4  1903               	skipnz
 11662  1AB5  0008               	return
 11663                           
 11664                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11665  1AB6  1683               	bsf	3,5	;RP0=1, select bank1
 11666  1AB7  1491               	bsf	17,1	;volatile
 11667  1AB8  0008               	return
 11668  1AB9                     __end_of_I2C_Master_RepeatedStart:	
 11669                           
 11670                           	psect	text48
 11671  1D96                     __ptext48:	
 11672 ;; *************** function _I2C_Master_Read *****************
 11673 ;; Defined at:
 11674 ;;		line 87 in file "I2C.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  a               2    3[BANK0 ] unsigned short 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  temp            2    7[BANK0 ] unsigned short 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  2    3[BANK0 ] unsigned short 
 11681 ;; Registers used:
 11682 ;;		wreg, status,2, status,0, pclath, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 300/0
 11685 ;;		On exit  : 300/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11688 ;;      Params:         0       2       0       0       0
 11689 ;;      Locals:         0       2       0       0       0
 11690 ;;      Temps:          0       2       0       0       0
 11691 ;;      Totals:         0       6       0       0       0
 11692 ;;Total ram usage:        6 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:    2
 11695 ;; This function calls:
 11696 ;;		_I2C_Master_Wait
 11697 ;; This function is called by:
 11698 ;;		_EEPROM_24C1025_Read_Buffer
 11699 ;;		_EEPROM_24C1025_Read_Str
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function _I2C_Master_Read
 11705  1D96                     _I2C_Master_Read:	
 11706                           
 11707                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11708                           
 11709                           ;incstack = 0
 11710                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11711  1D96  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 11712  1D9B  3A00               	xorlw	0
 11713  1D9C  1683               	bsf	3,5	;RP0=1, select bank1
 11714  1D9D  1D03               	btfss	3,2
 11715  1D9E  1591               	bsf	17,3	;volatile
 11716                           
 11717                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11718  1D9F  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 11719  1DA4  3A00               	xorlw	0
 11720  1DA5  1903               	skipnz
 11721  1DA6  2DAE               	goto	l5558
 11722  1DA7  0813               	movf	19,w	;volatile
 11723  1DA8  00A5               	movwf	??_I2C_Master_Read
 11724  1DA9  01A6               	clrf	??_I2C_Master_Read+1
 11725  1DAA  0825               	movf	??_I2C_Master_Read,w
 11726  1DAB  00A7               	movwf	I2C_Master_Read@temp
 11727  1DAC  0826               	movf	??_I2C_Master_Read+1,w
 11728  1DAD  00A8               	movwf	I2C_Master_Read@temp+1
 11729  1DAE                     l5558:	
 11730                           
 11731                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11732  1DAE  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 11733  1DB3  3A00               	xorlw	0
 11734  1DB4  1903               	skipnz
 11735  1DB5  2DC8               	goto	l5570
 11736                           
 11737                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11738  1DB6  0823               	movf	I2C_Master_Read@a,w
 11739  1DB7  0424               	iorwf	I2C_Master_Read@a+1,w
 11740  1DB8  1D03               	btfss	3,2
 11741  1DB9  2DBE               	goto	u5400
 11742  1DBA  1683               	bsf	3,5	;RP0=1, select bank1
 11743  1DBB  1303               	bcf	3,6	;RP1=0, select bank1
 11744  1DBC  1691               	bsf	17,5	;volatile
 11745  1DBD  2DC1               	goto	l5562
 11746  1DBE                     u5400:	
 11747  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
 11748  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
 11749  1DC0  1291               	bcf	17,5	;volatile
 11750  1DC1                     l5562:	
 11751                           
 11752                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11753  1DC1  1611               	bsf	17,4	;volatile
 11754                           
 11755                           ;I2C.c: 96:     return temp;
 11756  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
 11757  1DC3  0828               	movf	I2C_Master_Read@temp+1,w
 11758  1DC4  00A4               	movwf	?_I2C_Master_Read+1
 11759  1DC5  0827               	movf	I2C_Master_Read@temp,w
 11760  1DC6  00A3               	movwf	?_I2C_Master_Read
 11761  1DC7  0008               	return
 11762  1DC8                     l5570:	
 11763                           
 11764                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11765  1DC8  01A3               	clrf	?_I2C_Master_Read
 11766  1DC9  01A4               	clrf	?_I2C_Master_Read+1
 11767  1DCA  0008               	return
 11768  1DCB                     __end_of_I2C_Master_Read:	
 11769                           
 11770                           	psect	text49
 11771  07BF                     __ptext49:	
 11772 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11773 ;; Defined at:
 11774 ;;		line 294 in file "EEPROM_24C1025.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  chip_add        1    wreg     unsigned char 
 11777 ;;  value           2   56[BANK0 ] unsigned int 
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;  chip_add        1   58[BANK0 ] unsigned char 
 11780 ;;  mem_add         4   59[BANK0 ] unsigned long 
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  1    wreg      void 
 11783 ;; Registers used:
 11784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11785 ;; Tracked objects:
 11786 ;;		On entry : 300/300
 11787 ;;		On exit  : 300/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11790 ;;      Params:         0       2       0       0       0
 11791 ;;      Locals:         0       5       0       0       0
 11792 ;;      Temps:          0       0       0       0       0
 11793 ;;      Totals:         0       7       0       0       0
 11794 ;;Total ram usage:        7 bytes
 11795 ;; Hardware stack levels used:    1
 11796 ;; Hardware stack levels required when called:    5
 11797 ;; This function calls:
 11798 ;;		_EEPROM_24C1025_Write_Int
 11799 ;; This function is called by:
 11800 ;;		_Decodify_Command
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           
 11805                           ;psect for function _EEPROM_24C1025_Fill_All
 11806  07BF                     _EEPROM_24C1025_Fill_All:	
 11807                           
 11808                           ;incstack = 0
 11809                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11810                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11811  07BF  1283               	bcf	3,5	;RP0=0, select bank0
 11812  07C0  1303               	bcf	3,6	;RP1=0, select bank0
 11813  07C1  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11814                           
 11815                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11816  07C2  3000               	movlw	0
 11817  07C3  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11818  07C4  3000               	movlw	0
 11819  07C5  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11820  07C6  3000               	movlw	0
 11821  07C7  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11822  07C8  3000               	movlw	0
 11823  07C9  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11824  07CA                     l6430:	
 11825                           
 11826                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11827  07CA  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11828  07CB  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11829  07CC  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11830  07CD  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11831  07CE  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11832  07CF  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11833  07D0  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11834  07D1  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11835  07D2  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11836  07D3  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11837  07D4  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 11838  07D5  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11839  07D6  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11840  07D7  160A  158A  23DC  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
 11841  07DC  0064               	clrwdt	;# 
 11842                           
 11843                           ;EEPROM_24C1025.c: 300:         }
 11844  07DD  3002               	movlw	2
 11845  07DE  1283               	bcf	3,5	;RP0=0, select bank0
 11846  07DF  1303               	bcf	3,6	;RP1=0, select bank0
 11847  07E0  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11848  07E1  3000               	movlw	0
 11849  07E2  1803               	skipnc
 11850  07E3  3001               	movlw	1
 11851  07E4  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11852  07E5  3000               	movlw	0
 11853  07E6  1803               	skipnc
 11854  07E7  3001               	movlw	1
 11855  07E8  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11856  07E9  3000               	movlw	0
 11857  07EA  1803               	skipnc
 11858  07EB  3001               	movlw	1
 11859  07EC  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11860  07ED  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11861  07EE  1D03               	btfss	3,2
 11862  07EF  0008               	return
 11863  07F0  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11864  07F1  1D03               	btfss	3,2
 11865  07F2  0008               	return
 11866  07F3  3004               	movlw	4
 11867  07F4  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11868  07F5  1D03               	skipz
 11869  07F6  2FFB               	goto	u6883
 11870  07F7  3000               	movlw	0
 11871  07F8  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11872  07F9  1D03               	skipz
 11873  07FA  2FFB               	goto	u6883
 11874  07FB                     u6883:	
 11875  07FB  1803               	btfsc	3,0
 11876  07FC  0008               	return
 11877  07FD  2FCA               	goto	l6430
 11878  07FE                     __end_of_EEPROM_24C1025_Fill_All:	
 11879                           
 11880                           	psect	text50
 11881  1BDC                     __ptext50:	
 11882 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11883 ;; Defined at:
 11884 ;;		line 279 in file "EEPROM_24C1025.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;  chip_add        1    wreg     unsigned char 
 11887 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11888 ;;  data            2   50[BANK0 ] int 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  chip_add        1   53[BANK0 ] unsigned char 
 11891 ;;  local           2   54[BANK0 ] unsigned char [2]
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  1    wreg      void 
 11894 ;; Registers used:
 11895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/300
 11898 ;;		On exit  : 300/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11901 ;;      Params:         0       6       0       0       0
 11902 ;;      Locals:         0       3       0       0       0
 11903 ;;      Temps:          0       1       0       0       0
 11904 ;;      Totals:         0      10       0       0       0
 11905 ;;Total ram usage:       10 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    4
 11908 ;; This function calls:
 11909 ;;		_EEPROM_24C1025_Write_Buffer
 11910 ;; This function is called by:
 11911 ;;		_EEPROM_24C1025_Fill_All
 11912 ;;		_Decodify_Command
 11913 ;;		_Save_Log
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           
 11918                           ;psect for function _EEPROM_24C1025_Write_Int
 11919  1BDC                     _EEPROM_24C1025_Write_Int:	
 11920                           
 11921                           ;incstack = 0
 11922                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11923                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11924  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
 11925  1BDD  1303               	bcf	3,6	;RP1=0, select bank0
 11926  1BDE  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 11927                           
 11928                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 11929  1BDF  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 11930  1BE0  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11931  1BE1  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11932  1BE2  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 11933                           
 11934                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 11935  1BE3  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 11936  1BE4  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11937  1BE5  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11938  1BE6  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 11939                           
 11940                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11941  1BE7  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 11942  1BE8  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11943  1BE9  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 11944  1BEA  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11945  1BEB  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 11946  1BEC  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11947  1BED  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 11948  1BEE  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11949  1BEF  3002               	movlw	2
 11950  1BF0  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11951  1BF1  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11952  1BF2  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11953  1BF3  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11954  1BF4  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11955  1BF5  3000               	movlw	0
 11956  1BF6  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11957  1BF7  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 11958  1BF8  160A  118A  252A   	fcall	_EEPROM_24C1025_Write_Buffer
 11959  1BFB  0008               	return
 11960  1BFC                     __end_of_EEPROM_24C1025_Write_Int:	
 11961                           
 11962                           	psect	text51
 11963  152A                     __ptext51:	
 11964 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11965 ;; Defined at:
 11966 ;;		line 15 in file "EEPROM_24C1025.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  chip_add        1    wreg     unsigned char 
 11969 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11970 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11971 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11972 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11973 ;; Auto vars:     Size  Location     Type
 11974 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11975 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11976 ;;  range           1   21[BANK0 ] unsigned char 
 11977 ;;  count           1   19[BANK0 ] unsigned char 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      void 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/300
 11984 ;;		On exit  : 300/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11987 ;;      Params:         0       7       0       0       0
 11988 ;;      Locals:         0       4       0       0       0
 11989 ;;      Temps:          0       2       0       0       0
 11990 ;;      Totals:         0      13       0       0       0
 11991 ;;Total ram usage:       13 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    3
 11994 ;; This function calls:
 11995 ;;		_I2C_Master_Start
 11996 ;;		_I2C_Master_Stop
 11997 ;;		_I2C_Master_Write
 11998 ;;		_my_delay_ms_WDT
 11999 ;; This function is called by:
 12000 ;;		_EEPROM_24C1025_Write_Byte
 12001 ;;		_EEPROM_24C1025_Write_Int
 12002 ;;		_Decodify_Command
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12008  152A                     _EEPROM_24C1025_Write_Buffer:	
 12009                           
 12010                           ;incstack = 0
 12011                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12012                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12013  152A  1283               	bcf	3,5	;RP0=0, select bank0
 12014  152B  1303               	bcf	3,6	;RP1=0, select bank0
 12015  152C  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12016                           
 12017                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12018  152D  3014               	movlw	20
 12019  152E  1683               	bsf	3,5	;RP0=1, select bank1
 12020  152F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12021  1530  3000               	movlw	0
 12022  1531  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12023                           
 12024                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12025  1532  1283               	bcf	3,5	;RP0=0, select bank0
 12026  1533  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12027  1534  1D03               	btfss	3,2
 12028  1535  0008               	return
 12029  1536  3002               	movlw	2
 12030  1537  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12031  1538  1D03               	skipz
 12032  1539  2D42               	goto	u5303
 12033  153A  3000               	movlw	0
 12034  153B  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12035  153C  1D03               	skipz
 12036  153D  2D42               	goto	u5303
 12037  153E  3000               	movlw	0
 12038  153F  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12039  1540  1D03               	skipz
 12040  1541  2D42               	goto	u5303
 12041  1542                     u5303:	
 12042  1542  1803               	btfsc	3,0
 12043  1543  0008               	return
 12044                           
 12045                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12046  1544  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12047  1545  1D03               	btfss	3,2
 12048  1546  2D55               	goto	l5472
 12049  1547  3001               	movlw	1
 12050  1548  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12051  1549  1D03               	skipz
 12052  154A  2D53               	goto	u5313
 12053  154B  3000               	movlw	0
 12054  154C  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12055  154D  1D03               	skipz
 12056  154E  2D53               	goto	u5313
 12057  154F  3000               	movlw	0
 12058  1550  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12059  1551  1D03               	skipz
 12060  1552  2D53               	goto	u5313
 12061  1553                     u5313:	
 12062  1553  1C03               	btfss	3,0
 12063  1554  2D5A               	goto	l5474
 12064  1555                     l5472:	
 12065  1555  3008               	movlw	8
 12066  1556  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12067  1557  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12068  1558  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12069  1559  2D5B               	goto	l5476
 12070  155A                     l5474:	
 12071  155A  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12072  155B                     l5476:	
 12073                           
 12074                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12075  155B  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12076  155C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12077  155D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12078  155E  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12079                           
 12080                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12081  155F  1003               	clrc
 12082  1560  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12083                           
 12084                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12085  1561  30A0               	movlw	160
 12086  1562  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12087  1563  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12088  1564  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12089                           
 12090                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12091  1565  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12092  1566  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12093  1567  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12094  1568  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12095                           
 12096                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12097  1569  160A  158A  22C9  160A  118A  	fcall	_I2C_Master_Start
 12098                           
 12099                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12100  156E  1283               	bcf	3,5	;RP0=0, select bank0
 12101  156F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12102  1570  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12103  1571  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12104  1572  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12105  1573  00A3               	movwf	I2C_Master_Write@d
 12106  1574  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12107  1575  00A4               	movwf	I2C_Master_Write@d+1
 12108  1576  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12109                           
 12110                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12111  157B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12112  157C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12113  157D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12114  157E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12115  157F  00A3               	movwf	I2C_Master_Write@d
 12116  1580  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12117  1581  00A4               	movwf	I2C_Master_Write@d+1
 12118  1582  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12119                           
 12120                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12121  1587  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12122  1588  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12123  1589  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12124  158A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12125  158B  00A3               	movwf	I2C_Master_Write@d
 12126  158C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12127  158D  00A4               	movwf	I2C_Master_Write@d+1
 12128  158E  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12129                           
 12130                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12131  1593  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12132  1594                     l5538:	
 12133  1594  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12134  1595  3EFF               	addlw	255
 12135  1596  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12136  1597  30FF               	movlw	255
 12137  1598  1803               	skipnc
 12138  1599  3000               	movlw	0
 12139  159A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12140  159B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12141  159C  3A80               	xorlw	128
 12142  159D  3C80               	sublw	128
 12143  159E  1D03               	skipz
 12144  159F  2DA2               	goto	u5355
 12145  15A0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12146  15A1  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12147  15A2                     u5355:	
 12148  15A2  1803               	btfsc	3,0
 12149  15A3  2E6F               	goto	l5540
 12150  15A4  0064               	clrwdt	;# 
 12151                           
 12152                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12153  15A5  1283               	bcf	3,5	;RP0=0, select bank0
 12154  15A6  1303               	bcf	3,6	;RP1=0, select bank0
 12155  15A7  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12156  15A8  1D03               	btfss	3,2
 12157  15A9  0008               	return
 12158  15AA  3002               	movlw	2
 12159  15AB  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12160  15AC  1D03               	skipz
 12161  15AD  2DB6               	goto	u5323
 12162  15AE  3000               	movlw	0
 12163  15AF  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12164  15B0  1D03               	skipz
 12165  15B1  2DB6               	goto	u5323
 12166  15B2  3000               	movlw	0
 12167  15B3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12168  15B4  1D03               	skipz
 12169  15B5  2DB6               	goto	u5323
 12170  15B6                     u5323:	
 12171  15B6  1803               	btfsc	3,0
 12172  15B7  0008               	return
 12173                           
 12174                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12175  15B8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12176  15B9  3E01               	addlw	1
 12177  15BA  397F               	andlw	127
 12178  15BB  1D03               	btfss	3,2
 12179  15BC  2E45               	goto	l5530
 12180                           
 12181                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12182  15BD  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12183  15BE  0084               	movwf	4
 12184  15BF  1783               	bsf	3,7
 12185  15C0  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12186  15C1  1383               	bcf	3,7
 12187  15C2  0800               	movf	0,w
 12188  15C3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12189  15C4  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12190  15C5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12191  15C6  00A3               	movwf	I2C_Master_Write@d
 12192  15C7  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12193  15C8  00A4               	movwf	I2C_Master_Write@d+1
 12194  15C9  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12195                           
 12196                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12197  15CE  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 12198                           
 12199                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12200  15D3  3000               	movlw	0
 12201  15D4  1283               	bcf	3,5	;RP0=0, select bank0
 12202  15D5  00A3               	movwf	my_delay_ms_WDT@time+3
 12203  15D6  3000               	movlw	0
 12204  15D7  00A2               	movwf	my_delay_ms_WDT@time+2
 12205  15D8  3000               	movlw	0
 12206  15D9  00A1               	movwf	my_delay_ms_WDT@time+1
 12207  15DA  3005               	movlw	5
 12208  15DB  00A0               	movwf	my_delay_ms_WDT@time
 12209  15DC  160A  158A  2602  160A  118A  	fcall	_my_delay_ms_WDT
 12210                           
 12211                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12212  15E1  3001               	movlw	1
 12213  15E2  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12214  15E3  3000               	movlw	0
 12215  15E4  1803               	skipnc
 12216  15E5  3001               	movlw	1
 12217  15E6  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12218  15E7  3000               	movlw	0
 12219  15E8  1803               	skipnc
 12220  15E9  3001               	movlw	1
 12221  15EA  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12222  15EB  3000               	movlw	0
 12223  15EC  1803               	skipnc
 12224  15ED  3001               	movlw	1
 12225  15EE  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12226                           
 12227                           ;EEPROM_24C1025.c: 49:             data++;
 12228  15EF  3001               	movlw	1
 12229  15F0  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12230  15F1  1803               	skipnc
 12231  15F2  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12232  15F3  3000               	movlw	0
 12233  15F4  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12234                           
 12235                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12236  15F5  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12237  15F6  1D03               	btfss	3,2
 12238  15F7  2E06               	goto	l5510
 12239  15F8  3001               	movlw	1
 12240  15F9  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12241  15FA  1D03               	skipz
 12242  15FB  2E04               	goto	u5343
 12243  15FC  3000               	movlw	0
 12244  15FD  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12245  15FE  1D03               	skipz
 12246  15FF  2E04               	goto	u5343
 12247  1600  3000               	movlw	0
 12248  1601  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12249  1602  1D03               	skipz
 12250  1603  2E04               	goto	u5343
 12251  1604                     u5343:	
 12252  1604  1C03               	btfss	3,0
 12253  1605  2E0B               	goto	l5512
 12254  1606                     l5510:	
 12255  1606  3008               	movlw	8
 12256  1607  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12257  1608  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12258  1609  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12259  160A  2E0C               	goto	l5514
 12260  160B                     l5512:	
 12261  160B  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12262  160C                     l5514:	
 12263                           
 12264                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12265  160C  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12266  160D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12267  160E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12268  160F  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12269                           
 12270                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12271  1610  1003               	clrc
 12272  1611  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12273                           
 12274                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12275  1612  30A0               	movlw	160
 12276  1613  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12277  1614  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12278  1615  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12279                           
 12280                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12281  1616  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12282  1617  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12283  1618  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12284  1619  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12285                           
 12286                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12287  161A  160A  158A  22C9  160A  118A  	fcall	_I2C_Master_Start
 12288                           
 12289                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12290  161F  1283               	bcf	3,5	;RP0=0, select bank0
 12291  1620  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12292  1621  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12293  1622  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12294  1623  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12295  1624  00A3               	movwf	I2C_Master_Write@d
 12296  1625  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12297  1626  00A4               	movwf	I2C_Master_Write@d+1
 12298  1627  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12299                           
 12300                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12301  162C  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12302  162D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12303  162E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12304  162F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12305  1630  00A3               	movwf	I2C_Master_Write@d
 12306  1631  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12307  1632  00A4               	movwf	I2C_Master_Write@d+1
 12308  1633  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12309                           
 12310                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12311  1638  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12312  1639  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12313  163A  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12314  163B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12315  163C  00A3               	movwf	I2C_Master_Write@d
 12316  163D  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12317  163E  00A4               	movwf	I2C_Master_Write@d+1
 12318  163F  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12319                           
 12320                           ;EEPROM_24C1025.c: 60:             }
 12321  1644  2E6A               	goto	l5536
 12322  1645                     l5530:	
 12323                           
 12324                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12325  1645  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12326  1646  0084               	movwf	4
 12327  1647  1783               	bsf	3,7
 12328  1648  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12329  1649  1383               	bcf	3,7
 12330  164A  0800               	movf	0,w
 12331  164B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12332  164C  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12333  164D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12334  164E  00A3               	movwf	I2C_Master_Write@d
 12335  164F  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12336  1650  00A4               	movwf	I2C_Master_Write@d+1
 12337  1651  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12338                           
 12339                           ;EEPROM_24C1025.c: 64:             data++;
 12340  1656  3001               	movlw	1
 12341  1657  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12342  1658  1803               	skipnc
 12343  1659  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12344  165A  3000               	movlw	0
 12345  165B  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12346                           
 12347                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12348  165C  3001               	movlw	1
 12349  165D  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12350  165E  3000               	movlw	0
 12351  165F  1803               	skipnc
 12352  1660  3001               	movlw	1
 12353  1661  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12354  1662  3000               	movlw	0
 12355  1663  1803               	skipnc
 12356  1664  3001               	movlw	1
 12357  1665  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12358  1666  3000               	movlw	0
 12359  1667  1803               	skipnc
 12360  1668  3001               	movlw	1
 12361  1669  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12362  166A                     l5536:	
 12363                           
 12364                           ;EEPROM_24C1025.c: 67:      }
 12365  166A  3001               	movlw	1
 12366  166B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12367  166C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12368  166D  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12369  166E  2D94               	goto	l5538
 12370  166F                     l5540:	
 12371                           
 12372                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12373  166F  1283               	bcf	3,5	;RP0=0, select bank0
 12374  1670  1303               	bcf	3,6	;RP1=0, select bank0
 12375  1671  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12376  1672  0084               	movwf	4
 12377  1673  1783               	bsf	3,7
 12378  1674  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12379  1675  1383               	bcf	3,7
 12380  1676  0800               	movf	0,w
 12381  1677  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12382  1678  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12383  1679  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12384  167A  00A3               	movwf	I2C_Master_Write@d
 12385  167B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12386  167C  00A4               	movwf	I2C_Master_Write@d+1
 12387  167D  160A  158A  22A3  160A  118A  	fcall	_I2C_Master_Write
 12388                           
 12389                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12390  1682  160A  158A  227C  160A  118A  	fcall	_I2C_Master_Stop
 12391                           
 12392                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12393  1687  3000               	movlw	0
 12394  1688  1283               	bcf	3,5	;RP0=0, select bank0
 12395  1689  00A3               	movwf	my_delay_ms_WDT@time+3
 12396  168A  3000               	movlw	0
 12397  168B  00A2               	movwf	my_delay_ms_WDT@time+2
 12398  168C  3000               	movlw	0
 12399  168D  00A1               	movwf	my_delay_ms_WDT@time+1
 12400  168E  3005               	movlw	5
 12401  168F  00A0               	movwf	my_delay_ms_WDT@time
 12402  1690  160A  158A  2602   	fcall	_my_delay_ms_WDT
 12403  1693  0008               	return
 12404  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12405                           
 12406                           	psect	text52
 12407  1E02                     __ptext52:	
 12408 ;; *************** function _my_delay_ms_WDT *****************
 12409 ;; Defined at:
 12410 ;;		line 13 in file "my_delay.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  time            4    0[BANK0 ] long 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;  i               4    6[BANK0 ] long 
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  1    wreg      void 
 12417 ;; Registers used:
 12418 ;;		wreg, btemp+1
 12419 ;; Tracked objects:
 12420 ;;		On entry : 300/0
 12421 ;;		On exit  : 300/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12424 ;;      Params:         0       4       0       0       0
 12425 ;;      Locals:         0       4       0       0       0
 12426 ;;      Temps:          0       2       0       0       0
 12427 ;;      Totals:         0      10       0       0       0
 12428 ;;Total ram usage:       10 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; Hardware stack levels required when called:    1
 12431 ;; This function calls:
 12432 ;;		Nothing
 12433 ;; This function is called by:
 12434 ;;		_EEPROM_24C1025_Write_Buffer
 12435 ;;		_EEPROM_24C1025_Read_Buffer
 12436 ;;		_EEPROM_24C1025_Write_Str
 12437 ;;		_main
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           
 12442                           ;psect for function _my_delay_ms_WDT
 12443  1E02                     _my_delay_ms_WDT:	
 12444                           
 12445                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12446                           
 12447                           ;incstack = 0
 12448                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12449  1E02  3000               	movlw	0
 12450  1E03  00A9               	movwf	my_delay_ms_WDT@i+3
 12451  1E04  3000               	movlw	0
 12452  1E05  00A8               	movwf	my_delay_ms_WDT@i+2
 12453  1E06  3000               	movlw	0
 12454  1E07  00A7               	movwf	my_delay_ms_WDT@i+1
 12455  1E08  3000               	movlw	0
 12456  1E09  00A6               	movwf	my_delay_ms_WDT@i
 12457  1E0A                     l5454:	
 12458  1E0A  0829               	movf	my_delay_ms_WDT@i+3,w
 12459  1E0B  3A80               	xorlw	128
 12460  1E0C  00FF               	movwf	127
 12461  1E0D  0823               	movf	my_delay_ms_WDT@time+3,w
 12462  1E0E  3A80               	xorlw	128
 12463  1E0F  027F               	subwf	127,w
 12464  1E10  1D03               	skipz
 12465  1E11  2E1C               	goto	u5283
 12466  1E12  0822               	movf	my_delay_ms_WDT@time+2,w
 12467  1E13  0228               	subwf	my_delay_ms_WDT@i+2,w
 12468  1E14  1D03               	skipz
 12469  1E15  2E1C               	goto	u5283
 12470  1E16  0821               	movf	my_delay_ms_WDT@time+1,w
 12471  1E17  0227               	subwf	my_delay_ms_WDT@i+1,w
 12472  1E18  1D03               	skipz
 12473  1E19  2E1C               	goto	u5283
 12474  1E1A  0820               	movf	my_delay_ms_WDT@time,w
 12475  1E1B  0226               	subwf	my_delay_ms_WDT@i,w
 12476  1E1C                     u5283:	
 12477  1E1C  1803               	btfsc	3,0
 12478  1E1D  0008               	return
 12479  1E1E  0064               	clrwdt	;# 
 12480                           
 12481                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12482  1E1F  3003               	movlw	3
 12483  1E20  1283               	bcf	3,5	;RP0=0, select bank0
 12484  1E21  1303               	bcf	3,6	;RP1=0, select bank0
 12485  1E22  00A5               	movwf	??_my_delay_ms_WDT+1
 12486  1E23  3097               	movlw	151
 12487  1E24  00A4               	movwf	??_my_delay_ms_WDT
 12488  1E25                     u7797:	
 12489  1E25  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12490  1E26  2E25               	goto	u7797
 12491  1E27  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12492  1E28  2E25               	goto	u7797
 12493                           
 12494                           ;my_delay.c: 19:             }
 12495  1E29  3001               	movlw	1
 12496  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
 12497  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
 12498  1E2C  07A6               	addwf	my_delay_ms_WDT@i,f
 12499  1E2D  3000               	movlw	0
 12500  1E2E  1803               	skipnc
 12501  1E2F  3001               	movlw	1
 12502  1E30  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12503  1E31  3000               	movlw	0
 12504  1E32  1803               	skipnc
 12505  1E33  3001               	movlw	1
 12506  1E34  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12507  1E35  3000               	movlw	0
 12508  1E36  1803               	skipnc
 12509  1E37  3001               	movlw	1
 12510  1E38  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12511  1E39  2E0A               	goto	l5454
 12512  1E3A                     __end_of_my_delay_ms_WDT:	
 12513                           
 12514                           	psect	text53
 12515  1AA3                     __ptext53:	
 12516 ;; *************** function _I2C_Master_Write *****************
 12517 ;; Defined at:
 12518 ;;		line 79 in file "I2C.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  d               2    3[BANK0 ] unsigned int 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;		None
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  1    wreg      void 
 12525 ;; Registers used:
 12526 ;;		wreg, status,2, status,0, pclath, cstack
 12527 ;; Tracked objects:
 12528 ;;		On entry : 300/0
 12529 ;;		On exit  : 300/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12532 ;;      Params:         0       2       0       0       0
 12533 ;;      Locals:         0       0       0       0       0
 12534 ;;      Temps:          0       0       0       0       0
 12535 ;;      Totals:         0       2       0       0       0
 12536 ;;Total ram usage:        2 bytes
 12537 ;; Hardware stack levels used:    1
 12538 ;; Hardware stack levels required when called:    2
 12539 ;; This function calls:
 12540 ;;		_I2C_Master_Wait
 12541 ;; This function is called by:
 12542 ;;		_EEPROM_24C1025_Write_Buffer
 12543 ;;		_EEPROM_24C1025_Read_Buffer
 12544 ;;		_EEPROM_24C1025_Write_Str
 12545 ;;		_EEPROM_24C1025_Read_Str
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           
 12550                           ;psect for function _I2C_Master_Write
 12551  1AA3                     _I2C_Master_Write:	
 12552                           
 12553                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12554                           
 12555                           ;incstack = 0
 12556                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12557  1AA3  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 12558  1AA8  3A00               	xorlw	0
 12559  1AA9  1903               	skipnz
 12560  1AAA  0008               	return
 12561                           
 12562                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12563  1AAB  0823               	movf	I2C_Master_Write@d,w
 12564  1AAC  0093               	movwf	19	;volatile
 12565  1AAD  0008               	return
 12566  1AAE                     __end_of_I2C_Master_Write:	
 12567                           
 12568                           	psect	text54
 12569  1A7C                     __ptext54:	
 12570 ;; *************** function _I2C_Master_Stop *****************
 12571 ;; Defined at:
 12572 ;;		line 70 in file "I2C.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;		None
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  1    wreg      void 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0, pclath, cstack
 12581 ;; Tracked objects:
 12582 ;;		On entry : 300/800
 12583 ;;		On exit  : 200/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12586 ;;      Params:         0       0       0       0       0
 12587 ;;      Locals:         0       0       0       0       0
 12588 ;;      Temps:          0       0       0       0       0
 12589 ;;      Totals:         0       0       0       0       0
 12590 ;;Total ram usage:        0 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:    2
 12593 ;; This function calls:
 12594 ;;		_I2C_Master_Wait
 12595 ;; This function is called by:
 12596 ;;		_EEPROM_24C1025_Write_Buffer
 12597 ;;		_EEPROM_24C1025_Read_Buffer
 12598 ;;		_EEPROM_24C1025_Write_Str
 12599 ;;		_EEPROM_24C1025_Read_Str
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           
 12604                           ;psect for function _I2C_Master_Stop
 12605  1A7C                     _I2C_Master_Stop:	
 12606                           
 12607                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12608                           
 12609                           ;incstack = 0
 12610                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12611  1A7C  160A  118A  205C   	fcall	_I2C_Master_Wait
 12612  1A7F  3A00               	xorlw	0
 12613                           
 12614                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12615  1A80  1683               	bsf	3,5	;RP0=1, select bank1
 12616  1A81  1D03               	btfss	3,2
 12617  1A82  1511               	bsf	17,2	;volatile
 12618                           
 12619                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12620                           
 12621                           ;I2C.c: 75:     }
 12622  1A83  178B               	bsf	11,7	;volatile
 12623  1A84  0008               	return
 12624  1A85                     __end_of_I2C_Master_Stop:	
 12625                           
 12626                           	psect	text55
 12627  1AC9                     __ptext55:	
 12628 ;; *************** function _I2C_Master_Start *****************
 12629 ;; Defined at:
 12630 ;;		line 52 in file "I2C.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;		None
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1    wreg      void 
 12637 ;; Registers used:
 12638 ;;		wreg, status,2, status,0, pclath, cstack
 12639 ;; Tracked objects:
 12640 ;;		On entry : 300/0
 12641 ;;		On exit  : 200/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12644 ;;      Params:         0       0       0       0       0
 12645 ;;      Locals:         0       0       0       0       0
 12646 ;;      Temps:          0       0       0       0       0
 12647 ;;      Totals:         0       0       0       0       0
 12648 ;;Total ram usage:        0 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    2
 12651 ;; This function calls:
 12652 ;;		_I2C_Master_Wait
 12653 ;; This function is called by:
 12654 ;;		_EEPROM_24C1025_Write_Buffer
 12655 ;;		_EEPROM_24C1025_Read_Buffer
 12656 ;;		_EEPROM_24C1025_Write_Str
 12657 ;;		_EEPROM_24C1025_Read_Str
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           
 12662                           ;psect for function _I2C_Master_Start
 12663  1AC9                     _I2C_Master_Start:	
 12664                           
 12665                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12666                           
 12667                           ;incstack = 0
 12668                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12669  1AC9  138B               	bcf	11,7	;volatile
 12670                           
 12671                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12672  1ACA  3014               	movlw	20
 12673  1ACB  1683               	bsf	3,5	;RP0=1, select bank1
 12674  1ACC  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12675  1ACD  3000               	movlw	0
 12676  1ACE  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12677                           
 12678                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12679  1ACF  160A  118A  205C  160A  158A  	fcall	_I2C_Master_Wait
 12680  1AD4  3A00               	xorlw	0
 12681  1AD5  1903               	skipnz
 12682  1AD6  0008               	return
 12683                           
 12684                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12685  1AD7  1683               	bsf	3,5	;RP0=1, select bank1
 12686  1AD8  1411               	bsf	17,0	;volatile
 12687  1AD9  0008               	return
 12688  1ADA                     __end_of_I2C_Master_Start:	
 12689                           
 12690                           	psect	text56
 12691  105C                     __ptext56:	
 12692 ;; *************** function _I2C_Master_Wait *****************
 12693 ;; Defined at:
 12694 ;;		line 37 in file "I2C.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;		None
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;  tempo           1    2[BANK0 ] unsigned char 
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      unsigned char 
 12701 ;; Registers used:
 12702 ;;		wreg, status,2, status,0
 12703 ;; Tracked objects:
 12704 ;;		On entry : 200/0
 12705 ;;		On exit  : 300/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12708 ;;      Params:         0       0       0       0       0
 12709 ;;      Locals:         0       1       0       0       0
 12710 ;;      Temps:          0       2       0       0       0
 12711 ;;      Totals:         0       3       0       0       0
 12712 ;;Total ram usage:        3 bytes
 12713 ;; Hardware stack levels used:    1
 12714 ;; Hardware stack levels required when called:    1
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_I2C_Master_Start
 12719 ;;		_I2C_Master_RepeatedStart
 12720 ;;		_I2C_Master_Stop
 12721 ;;		_I2C_Master_Write
 12722 ;;		_I2C_Master_Read
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           
 12727                           ;psect for function _I2C_Master_Wait
 12728  105C                     _I2C_Master_Wait:	
 12729                           
 12730                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12731                           
 12732                           ;incstack = 0
 12733                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12734  105C  30C8               	movlw	200
 12735  105D  1283               	bcf	3,5	;RP0=0, select bank0
 12736  105E  00A0               	movwf	??_I2C_Master_Wait
 12737  105F  0820               	movf	??_I2C_Master_Wait,w
 12738  1060  00A2               	movwf	I2C_Master_Wait@tempo
 12739                           
 12740                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12741  1061  286E               	goto	l5426
 12742  1062                     l5422:	
 12743                           
 12744                           ;I2C.c: 44:          tempo--;
 12745  1062  3001               	movlw	1
 12746  1063  02A2               	subwf	I2C_Master_Wait@tempo,f
 12747                           
 12748                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12749  1064  3003               	movlw	3
 12750  1065  1283               	bcf	3,5	;RP0=0, select bank0
 12751  1066  1303               	bcf	3,6	;RP1=0, select bank0
 12752  1067  00A1               	movwf	??_I2C_Master_Wait+1
 12753  1068  3097               	movlw	151
 12754  1069  00A0               	movwf	??_I2C_Master_Wait
 12755  106A                     u7807:	
 12756  106A  0BA0               	decfsz	??_I2C_Master_Wait,f
 12757  106B  286A               	goto	u7807
 12758  106C  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12759  106D  286A               	goto	u7807
 12760  106E                     l5426:	
 12761                           
 12762                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12763  106E  1683               	bsf	3,5	;RP0=1, select bank1
 12764  106F  1303               	bcf	3,6	;RP1=0, select bank1
 12765  1070  1914               	btfsc	20,2	;volatile
 12766  1071  2876               	goto	l5420
 12767  1072  0811               	movf	17,w	;volatile
 12768  1073  391F               	andlw	31
 12769  1074  1903               	btfsc	3,2
 12770  1075  287A               	goto	l5430
 12771  1076                     l5420:	
 12772                           
 12773                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12774  1076  1283               	bcf	3,5	;RP0=0, select bank0
 12775  1077  0822               	movf	I2C_Master_Wait@tempo,w
 12776  1078  1D03               	btfss	3,2
 12777  1079  2862               	goto	l5422
 12778  107A                     l5430:	
 12779                           
 12780                           ;I2C.c: 49:   return tempo ;
 12781  107A  1283               	bcf	3,5	;RP0=0, select bank0
 12782  107B  0822               	movf	I2C_Master_Wait@tempo,w
 12783  107C  0008               	return
 12784  107D                     __end_of_I2C_Master_Wait:	
 12785                           
 12786                           	psect	text57
 12787  1A98                     __ptext57:	
 12788 ;; *************** function _ADC_init *****************
 12789 ;; Defined at:
 12790 ;;		line 10 in file "adc.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2, status,0
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/100
 12801 ;;		On exit  : 300/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12804 ;;      Params:         0       0       0       0       0
 12805 ;;      Locals:         0       0       0       0       0
 12806 ;;      Temps:          0       0       0       0       0
 12807 ;;      Totals:         0       0       0       0       0
 12808 ;;Total ram usage:        0 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    1
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_main
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function _ADC_init
 12820  1A98                     _ADC_init:	
 12821                           
 12822                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12826  1A98  30C0               	movlw	192
 12827  1A99  1283               	bcf	3,5	;RP0=0, select bank0
 12828  1A9A  1303               	bcf	3,6	;RP1=0, select bank0
 12829  1A9B  049F               	iorwf	31,f	;volatile
 12830                           
 12831                           ;adc.c: 12:      ADCON1=0b10000000;
 12832  1A9C  3080               	movlw	128
 12833  1A9D  1683               	bsf	3,5	;RP0=1, select bank1
 12834  1A9E  009F               	movwf	31	;volatile
 12835                           
 12836                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12837  1A9F  179F               	bsf	31,7	;volatile
 12838                           
 12839                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12840  1AA0  1283               	bcf	3,5	;RP0=0, select bank0
 12841  1AA1  141F               	bsf	31,0	;volatile
 12842  1AA2  0008               	return
 12843  1AA3                     __end_of_ADC_init:	
 12844                           
 12845                           	psect	text58
 12846  1349                     __ptext58:	
 12847 ;; *************** function _isr *****************
 12848 ;; Defined at:
 12849 ;;		line 29 in file "isr.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;		None
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  tempo           2    6[COMMON] unsigned int 
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1    wreg      void 
 12856 ;; Registers used:
 12857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12858 ;; Tracked objects:
 12859 ;;		On entry : 0/0
 12860 ;;		On exit  : 300/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12863 ;;      Params:         0       0       0       0       0
 12864 ;;      Locals:         2       0       0       0       0
 12865 ;;      Temps:          6       0       0       0       0
 12866 ;;      Totals:         8       0       0       0       0
 12867 ;;Total ram usage:        8 bytes
 12868 ;; Hardware stack levels used:    1
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		Interrupt level 1
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           
 12877                           ;psect for function _isr
 12878  1349                     _isr:	
 12879                           
 12880                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12881  1349  188B               	btfsc	11,1	;volatile
 12882                           
 12883                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12884  134A  108B               	bcf	11,1	;volatile
 12885                           
 12886                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12887                           
 12888                           ;isr.c: 37:       }
 12889  134B  1C0C               	btfss	12,0	;volatile
 12890  134C  2BC4               	goto	i1l5348
 12891                           
 12892                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12893  134D  30B1               	movlw	177
 12894  134E  008F               	movwf	15	;volatile
 12895                           
 12896                           ;isr.c: 42:                 TMR1L=0xF3;
 12897  134F  30F3               	movlw	243
 12898  1350  008E               	movwf	14	;volatile
 12899                           
 12900                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12901  1351  100C               	bcf	12,0	;volatile
 12902                           
 12903                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12904  1352  1683               	bsf	3,5	;RP0=1, select bank1
 12905  1353  1FBB               	btfss	_generic_status^(0+128),7
 12906  1354  2B57               	goto	i1l5304
 12907                           
 12908                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12909  1355  13BB               	bcf	_generic_status^(0+128),7
 12910  1356  0064               	clrwdt	;# 
 12911  1357                     i1l5304:	
 12912                           
 12913                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12914  1357  300A               	movlw	10
 12915  1358  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12916  1359  1803               	skipnc
 12917  135A  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12918  135B  3000               	movlw	0
 12919  135C  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12920                           
 12921                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12922  135D  3003               	movlw	3
 12923  135E  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12924  135F  30E8               	movlw	232
 12925  1360  1903               	skipnz
 12926  1361  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12927  1362  1C03               	skipc
 12928  1363  2B66               	goto	i1l5308
 12929                           
 12930                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12931  1364  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12932  1365  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12933  1366                     i1l5308:	
 12934                           
 12935                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12936  1366  3001               	movlw	1
 12937  1367  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12938  1368  30F4               	movlw	244
 12939  1369  1903               	skipnz
 12940  136A  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12941  136B  1803               	skipnc
 12942  136C  2B71               	goto	i1l627
 12943                           
 12944                           ;isr.c: 55:                    PORTBbits.RB7=1;
 12945  136D  1283               	bcf	3,5	;RP0=0, select bank0
 12946  136E  1303               	bcf	3,6	;RP1=0, select bank0
 12947  136F  1786               	bsf	6,7	;volatile
 12948  1370  2B74               	goto	i1l5312
 12949  1371                     i1l627:	
 12950                           ;isr.c: 56:                 else
 12951                           
 12952                           
 12953                           ;isr.c: 57:                    PORTBbits.RB7=0;
 12954  1371  1283               	bcf	3,5	;RP0=0, select bank0
 12955  1372  1303               	bcf	3,6	;RP1=0, select bank0
 12956  1373  1386               	bcf	6,7	;volatile
 12957  1374                     i1l5312:	
 12958                           
 12959                           ;isr.c: 60:                 if(Delay_Led_Usart){
 12960  1374  1683               	bsf	3,5	;RP0=1, select bank1
 12961  1375  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 12962  1376  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 12963  1377  1903               	btfsc	3,2
 12964  1378  2B82               	goto	i1l629
 12965                           
 12966                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 12967  1379  300A               	movlw	10
 12968  137A  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 12969  137B  3000               	movlw	0
 12970  137C  1C03               	skipc
 12971  137D  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12972  137E  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12973                           
 12974                           ;isr.c: 62:                    PORTBbits.RB6=1;
 12975  137F  1283               	bcf	3,5	;RP0=0, select bank0
 12976  1380  1706               	bsf	6,6	;volatile
 12977                           
 12978                           ;isr.c: 63:                    }
 12979  1381  2B84               	goto	i1l5318
 12980  1382                     i1l629:	
 12981                           ;isr.c: 64:                 else{
 12982                           
 12983                           
 12984                           ;isr.c: 65:                    PORTBbits.RB6=0;
 12985  1382  1283               	bcf	3,5	;RP0=0, select bank0
 12986  1383  1306               	bcf	6,6	;volatile
 12987  1384                     i1l5318:	
 12988                           
 12989                           ;isr.c: 68:                 if(Delay_Led_Memory){
 12990  1384  1683               	bsf	3,5	;RP0=1, select bank1
 12991  1385  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 12992  1386  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 12993  1387  1903               	btfsc	3,2
 12994  1388  2B92               	goto	i1l631
 12995                           
 12996                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 12997  1389  300A               	movlw	10
 12998  138A  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 12999  138B  3000               	movlw	0
 13000  138C  1C03               	skipc
 13001  138D  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13002  138E  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13003                           
 13004                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13005  138F  1283               	bcf	3,5	;RP0=0, select bank0
 13006  1390  1686               	bsf	6,5	;volatile
 13007                           
 13008                           ;isr.c: 71:                    }
 13009  1391  2B94               	goto	i1l5324
 13010  1392                     i1l631:	
 13011                           ;isr.c: 72:                 else{
 13012                           
 13013                           
 13014                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13015  1392  1283               	bcf	3,5	;RP0=0, select bank0
 13016  1393  1286               	bcf	6,5	;volatile
 13017  1394                     i1l5324:	
 13018                           
 13019                           ;isr.c: 77:                 tempodecorrido+=10;
 13020  1394  300A               	movlw	10
 13021  1395  1683               	bsf	3,5	;RP0=1, select bank1
 13022  1396  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 13023  1397  1803               	skipnc
 13024  1398  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13025  1399  3000               	movlw	0
 13026  139A  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13027                           
 13028                           ;isr.c: 78:                 milisegundo+=10;
 13029  139B  300A               	movlw	10
 13030  139C  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 13031  139D  1803               	skipnc
 13032  139E  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13033  139F  3000               	movlw	0
 13034  13A0  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13035                           
 13036                           ;isr.c: 79:                 if(milisegundo==1000){
 13037  13A1  30E8               	movlw	232
 13038  13A2  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 13039  13A3  3003               	movlw	3
 13040  13A4  1903               	skipnz
 13041  13A5  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13042  13A6  1D03               	btfss	3,2
 13043  13A7  2BC4               	goto	i1l5348
 13044                           
 13045                           ;isr.c: 80:                    milisegundo=0;
 13046  13A8  01B0               	clrf	_milisegundo^(0+128)	;volatile
 13047  13A9  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13048                           
 13049                           ;isr.c: 81:                    segundo++;
 13050  13AA  3001               	movlw	1
 13051  13AB  00F0               	movwf	??_isr
 13052  13AC  0870               	movf	??_isr,w
 13053  13AD  07FD               	addwf	_segundo,f	;volatile
 13054                           
 13055                           ;isr.c: 88:                    if(segundo==60){
 13056  13AE  303C               	movlw	60
 13057  13AF  067D               	xorwf	_segundo,w	;volatile
 13058  13B0  1D03               	btfss	3,2
 13059  13B1  2BC4               	goto	i1l5348
 13060                           
 13061                           ;isr.c: 89:                       segundo=0;
 13062  13B2  01FD               	clrf	_segundo	;volatile
 13063                           
 13064                           ;isr.c: 90:                       minuto++;
 13065  13B3  3001               	movlw	1
 13066  13B4  00F0               	movwf	??_isr
 13067  13B5  0870               	movf	??_isr,w
 13068  13B6  07FA               	addwf	_minuto,f	;volatile
 13069                           
 13070                           ;isr.c: 91:                       if(minuto==60){
 13071  13B7  303C               	movlw	60
 13072  13B8  067A               	xorwf	_minuto,w	;volatile
 13073  13B9  1D03               	btfss	3,2
 13074  13BA  2BC4               	goto	i1l5348
 13075                           
 13076                           ;isr.c: 92:                          minuto=0;
 13077  13BB  01FA               	clrf	_minuto	;volatile
 13078                           
 13079                           ;isr.c: 93:                          hora++;
 13080  13BC  3001               	movlw	1
 13081  13BD  00F0               	movwf	??_isr
 13082  13BE  0870               	movf	??_isr,w
 13083  13BF  07FC               	addwf	_hora,f	;volatile
 13084                           
 13085                           ;isr.c: 94:                          if(hora==24){
 13086  13C0  3018               	movlw	24
 13087  13C1  067C               	xorwf	_hora,w	;volatile
 13088  13C2  1903               	btfsc	3,2
 13089                           
 13090                           ;isr.c: 95:                             hora=0;
 13091  13C3  01FC               	clrf	_hora	;volatile
 13092  13C4                     i1l5348:	
 13093                           ;isr.c: 99:                 }
 13094                           
 13095                           
 13096                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13097  13C4  1283               	bcf	3,5	;RP0=0, select bank0
 13098  13C5  1E8C               	btfss	12,5	;volatile
 13099  13C6  2C2B               	goto	i1l645
 13100                           
 13101                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13102  13C7  1683               	bsf	3,5	;RP0=1, select bank1
 13103  13C8  143B               	bsf	_generic_status^(0+128),0
 13104                           
 13105                           ;isr.c: 109:         tempo=30;
 13106  13C9  301E               	movlw	30
 13107  13CA  00F6               	movwf	isr@tempo
 13108  13CB  3000               	movlw	0
 13109  13CC  00F7               	movwf	isr@tempo+1
 13110                           
 13111                           ;isr.c: 110:         count=0;
 13112  13CD  01AC               	clrf	_count^(0+128)	;volatile
 13113  13CE  01AD               	clrf	(_count+1)^(0+128)	;volatile
 13114                           
 13115                           ;isr.c: 111:         pointer=usart_buffer;
 13116  13CF  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13117  13D0  00F0               	movwf	??_isr
 13118  13D1  0870               	movf	??_isr,w
 13119  13D2  00B6               	movwf	_pointer^(0+128)
 13120  13D3                     i1l5370:	
 13121                           ;isr.c: 112:         while(tempo)
 13122                           
 13123                           
 13124                           ;isr.c: 112:         while(tempo)
 13125  13D3  0876               	movf	isr@tempo,w
 13126  13D4  0477               	iorwf	isr@tempo+1,w
 13127  13D5  1903               	btfsc	3,2
 13128  13D6  2C06               	goto	i1l5372
 13129                           
 13130                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13131  13D7  1283               	bcf	3,5	;RP0=0, select bank0
 13132  13D8  1303               	bcf	3,6	;RP1=0, select bank0
 13133  13D9  1E8C               	btfss	12,5	;volatile
 13134  13DA  2BFF               	goto	i1l5368
 13135                           
 13136                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13137  13DB  081A               	movf	26,w	;volatile
 13138  13DC  00F0               	movwf	??_isr
 13139  13DD  1683               	bsf	3,5	;RP0=1, select bank1
 13140  13DE  0836               	movf	_pointer^(0+128),w
 13141  13DF  0084               	movwf	4
 13142  13E0  0870               	movf	??_isr,w
 13143  13E1  1783               	bsf	3,7	;select IRP bank2
 13144  13E2  0080               	movwf	0
 13145                           
 13146                           ;isr.c: 118:                 if(count<32+20 -1)
 13147  13E3  082D               	movf	(_count+1)^(0+128),w	;volatile
 13148  13E4  3A80               	xorlw	128
 13149  13E5  00FF               	movwf	127
 13150  13E6  3080               	movlw	128
 13151  13E7  027F               	subwf	127,w
 13152  13E8  1D03               	skipz
 13153  13E9  2BEC               	goto	u519_25
 13154  13EA  3033               	movlw	51
 13155  13EB  022C               	subwf	_count^(0+128),w	;volatile
 13156  13EC                     u519_25:	
 13157  13EC  1803               	skipnc
 13158  13ED  2BFA               	goto	i1l5366
 13159                           
 13160                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13161  13EE  3001               	movlw	1
 13162  13EF  1683               	bsf	3,5	;RP0=1, select bank1
 13163  13F0  1303               	bcf	3,6	;RP1=0, select bank1
 13164  13F1  07AC               	addwf	_count^(0+128),f	;volatile
 13165  13F2  1803               	skipnc
 13166  13F3  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13167  13F4  3000               	movlw	0
 13168  13F5  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13169                           
 13170                           ;isr.c: 121:                    pointer++;
 13171  13F6  3001               	movlw	1
 13172  13F7  00F0               	movwf	??_isr
 13173  13F8  0870               	movf	??_isr,w
 13174  13F9  07B6               	addwf	_pointer^(0+128),f
 13175  13FA                     i1l5366:	
 13176                           
 13177                           ;isr.c: 123:                 tempo=30;
 13178  13FA  301E               	movlw	30
 13179  13FB  00F6               	movwf	isr@tempo
 13180  13FC  3000               	movlw	0
 13181  13FD  00F7               	movwf	isr@tempo+1
 13182                           
 13183                           ;isr.c: 124:             }
 13184  13FE  2BD3               	goto	i1l5370
 13185  13FF                     i1l5368:	
 13186                           
 13187                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13188  13FF  3001               	movlw	1
 13189  1400  02F6               	subwf	isr@tempo,f
 13190  1401  3000               	movlw	0
 13191  1402  1C03               	skipc
 13192  1403  03F7               	decf	isr@tempo+1,f
 13193  1404  02F7               	subwf	isr@tempo+1,f
 13194  1405  2BD3               	goto	i1l5370
 13195  1406                     i1l5372:	
 13196                           
 13197                           ;isr.c: 131:         (*pointer)=0;
 13198  1406  1683               	bsf	3,5	;RP0=1, select bank1
 13199  1407  1303               	bcf	3,6	;RP1=0, select bank1
 13200  1408  0836               	movf	_pointer^(0+128),w
 13201  1409  0084               	movwf	4
 13202  140A  1783               	bsf	3,7	;select IRP bank2
 13203  140B  0180               	clrf	0
 13204                           
 13205                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13206  140C  1283               	bcf	3,5	;RP0=0, select bank0
 13207  140D  1C98               	btfss	24,1	;volatile
 13208  140E  2C2B               	goto	i1l645
 13209                           
 13210                           ;isr.c: 134:            CREN=0;
 13211  140F  1218               	bcf	24,4	;volatile
 13212                           
 13213                           ;isr.c: 135:            CREN=1;
 13214  1410  1618               	bsf	24,4	;volatile
 13215                           
 13216                           ;isr.c: 136:            tempo=RCREG;
 13217  1411  081A               	movf	26,w	;volatile
 13218  1412  00F0               	movwf	??_isr
 13219  1413  01F1               	clrf	??_isr+1
 13220  1414  0870               	movf	??_isr,w
 13221  1415  00F6               	movwf	isr@tempo
 13222  1416  0871               	movf	??_isr+1,w
 13223  1417  00F7               	movwf	isr@tempo+1
 13224                           
 13225                           ;isr.c: 137:            tempo=RCREG;
 13226  1418  081A               	movf	26,w	;volatile
 13227  1419  00F0               	movwf	??_isr
 13228  141A  01F1               	clrf	??_isr+1
 13229  141B  0870               	movf	??_isr,w
 13230  141C  00F6               	movwf	isr@tempo
 13231  141D  0871               	movf	??_isr+1,w
 13232  141E  00F7               	movwf	isr@tempo+1
 13233                           
 13234                           ;isr.c: 138:            tempo=RCREG;
 13235  141F  081A               	movf	26,w	;volatile
 13236  1420  00F0               	movwf	??_isr
 13237  1421  01F1               	clrf	??_isr+1
 13238  1422  0870               	movf	??_isr,w
 13239  1423  00F6               	movwf	isr@tempo
 13240  1424  0871               	movf	??_isr+1,w
 13241  1425  00F7               	movwf	isr@tempo+1
 13242                           
 13243                           ;isr.c: 139:            usart_buffer[0]=0;
 13244  1426  1703               	bsf	3,6	;RP1=1, select bank2
 13245  1427  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13246                           
 13247                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13248  1428  1683               	bsf	3,5	;RP0=1, select bank1
 13249  1429  1303               	bcf	3,6	;RP1=0, select bank1
 13250  142A  14BB               	bsf	_generic_status^(0+128),1
 13251  142B                     i1l645:	
 13252  142B  0875               	movf	??_isr+5,w
 13253  142C  1283               	bcf	3,5	;RP0=0, select bank0
 13254  142D  00FF               	movwf	127
 13255  142E  0874               	movf	??_isr+4,w
 13256  142F  008A               	movwf	10
 13257  1430  0873               	movf	??_isr+3,w
 13258  1431  0084               	movwf	4
 13259  1432  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13260  1433  0083               	movwf	3
 13261  1434  0EFE               	swapf	126,f
 13262  1435  0E7E               	swapf	126,w
 13263  1436  0009               	retfie
 13264  1437                     __end_of_isr:	
 13265  007E                     btemp	set	126	;btemp
 13266  007E                     wtemp0	set	126
 13267                           
 13268                           	psect	intentry
 13269  0004                     __pintentry:	
 13270                           ;incstack = 0
 13271                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13272                           
 13273  0004                     interrupt_function:	
 13274  007E                     saved_w	set	btemp
 13275  0004  00FE               	movwf	btemp
 13276  0005  0E03               	swapf	3,w
 13277  0006  00F2               	movwf	??_isr+2
 13278  0007  0804               	movf	4,w
 13279  0008  00F3               	movwf	??_isr+3
 13280  0009  080A               	movf	10,w
 13281  000A  00F4               	movwf	??_isr+4
 13282  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13283  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13284  000D  087F               	movf	btemp+1,w
 13285  000E  00F5               	movwf	??_isr+5
 13286  000F  160A  118A  2B49   	ljmp	_isr


Data Sizes:
    Strings     12
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     15      76
    BANK3            96      0      58
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), STR_1(CODE[9]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), STR_1(CODE[9]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  133526
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24105
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2136
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0  106526
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     5     4      1     293
                                              1 BANK0      5     4      1
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     521
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     521
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14418
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3387
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     210
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2741
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6518
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7498
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7106
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    8607
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    8573
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    8347
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1023
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8394
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    8143
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7216
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     608
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4979
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     117       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      3A       9       60.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     117      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 11:48:30 2020

                              _USART_putc 1AB9                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69           EEPROM_24C1025_Read_Buffer@range 0035  
        EEPROM_24C1025_Write_Str@chip_add 0031                                        fsr 0004  
                           _USART_put_int 1B05                  Decodify_Command@tempchar 00E7  
                     __Umul8_16@word_mpld 0026                __end_of_RESISTOR_ROOM_TEMP 101C  
            PROCULUS_VP_Write_String@text 005C                                       l410 0372  
                                     l502 1E7A                                       l414 0380  
                                     l512 1C24                                       l416 03D6  
                                     l425 0F0F                                       l507 1E9E  
                                     l508 1E9F                                       l534 1BFF  
                                     l800 1B5E                                       l478 1A8F  
                                     l783 1B86                                       l863 1AC1  
                            __CFG_CPD$OFF 0000        EEPROM_24C1025_Read_Buffer@chip_add 0034  
                Decodify_Command@sizedata 00E0                                       _isr 1349  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1EAE                          _ADC_Media_10bits 107D  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 002A                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1E72  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1E3A                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1024  
                                    l1154 122D                                      l1315 0D5E  
                                    l1307 0D46                                      l1420 1319  
                                    l1173 117E                                      l1421 1323  
                                    l1413 1303                                      l1157 1293  
                                    l1407 12C3                                      l1351 0B26  
                                    l1353 0B34                                      l1329 09E7  
                                    l1273 0B8C                                      l1381 06BF  
                                    l1277 0C25                                      l1294 0CDE  
                                    l1279 0C03                                      l1448 1C72  
                                    l6000 0CF0                                      l6022 0D11  
                                    l6014 0D06                                      l6200 12BB  
                                    l6008 0CFF                                      l6016 0D08  
                                    l6210 12D6                                      l6026 0D13  
                                    l5420 1076                                      l7020 01A1  
                                    l7004 0150                                      l6220 1317  
                                    l6212 12E8                                      l6044 0D56  
                                    l5422 1062                                      l5430 107A  
                                    l5510 1606                                      l6310 149A  
                                    l6150 0611                                      l6070 03F4  
                                    l7110 0376                                      l7014 0181  
                                    l6222 1308                                      l6206 12D2  
                                    l5512 160B                                      l6312 1510  
                                    l6304 14EE                                      l6152 062E  
                                    l6072 03FC                                      l7104 0366  
                                    l7032 01C9                                      l6048 0D5A  
                                    l7200 0754                                      l5426 106E  
                                    l5514 160C                                      l5530 1645  
                                    l5610 085A                                      l6250 1462  
                                    l6162 0647                                      l6090 0421  
                                    l7050 0241                                      l7026 01AE  
                                    l7122 0384                                      l6234 1340  
                                    l5540 166F                                      l5612 085B  
                                    l6404 17E0                                      l6324 16BA  
                                    l6172 0679                                      l6068 03F2  
                                    l7044 0211                                      l5454 1E0A  
                                    l6430 07CA                                      l6406 17E9  
                                    l6350 170D                                      l6326 16BF  
                                    l6246 145C                                      l5710 1E84  
                                    l6182 06A8                                      l6158 0645  
                                    l6086 0417                                      l5702 1D67  
                                    l7070 02BE                                      l7038 01EA  
                                    l5536 166A                                      l5472 1555  
                                    l5608 0855                                      l6328 16C0  
                                    l6248 1461                                      l5712 1E87  
                                    l6512 1CD8                                      l6176 068F  
                                    l6088 0419                                      l5800 113A  
                                    l5704 1D89                                      l7080 0305  
                                    l7064 0299                                      l7056 025F  
                                    l5538 1594                                      l5474 155A  
                                    l5562 1DC1                                      l5570 1DC8  
                                    l6370 176B                                      l6514 1CF5  
                                    l6098 042F                                      l6610 1F57  
                                    l7226 077E                                      l5476 155B  
                                    l5652 090A                                      l6372 176C  
                                    l6444 1CB3                                      l5820 116A  
                                    l5804 1143                                      l7092 032A  
                                    l7076 02DB                                      l6604 1F42  
                                    l5558 1DAE                                      l5654 090F  
                                    l5750 1B7B                                      l5830 118D  
                                    l5822 117A                                      l7086 0319  
                                    l6702 09DC                                      l5902 0B84  
                                    l5656 0910                                      l6368 1766  
                                    l6536 1BA7                                      l7280 038F  
                                    l6624 10E3                                      l6394 17B9  
                                    l7098 0346                                      l6634 111B  
                                    l6626 10F3                                      l6722 0A12  
                                    l6706 09DF                                      l5684 097F  
                                    l6468 1D38                                      l5780 1E6A  
                                    l5852 1EDA                                      l5844 1EB6  
                                    l5748 1B6C                                      l5588 1C6A  
                                    l6564 1099                                      l6804 0B30  
                                    l6716 0A06                                      l6652 126D  
                                    l5908 0B96                                      ?_isr 0070  
                                    l5678 095D                                      l5686 08A8  
                                    l5846 1EC4                                      l6638 1128  
                                    l5758 1DD3                                      l6582 1B63  
                                    l6742 0A61                                      l6750 0A3D  
                                    l5688 0984                                      l5856 1EE5  
                                    l6496 1FDB                                      l6752 0A85  
                                    l6648 1247                                      l5880 0B62  
                                    l6912 0DF2                                      l6904 0DDB  
                                    l6840 1EFB                                      l5778 1E54  
                                    l5794 1F87                                      l6586 1B66  
                                    l6682 09B6                                      l5946 0C0E  
                                    l5938 0BD2                                      l5874 0B57  
                                    l6930 0F35                                      l5796 1FA3  
                                    l6748 0A80                                      l5972 0C54  
                                    l5964 0C33                                      l5948 0C10  
                                    l5956 0C1F                                      l6860 1F15  
                                    l6774 0ABF                                      l6766 0A8B  
                                    l6686 09B9                                      l5974 0C56  
                                    l5982 0C66                                      l5878 0B5A  
                                    l6942 0FA3                                      l6792 0B0C  
                                    l6768 0AA8                                      l6688 09C1  
                                    l5992 0CD0                                      l6936 0F8D  
                                    l6970 007C                                      l6962 005F  
                                    l6778 0AC1                                      l5898 0B81  
                                    l6874 1F1C                                      l6788 0AF3  
                                    l6990 010F                                      l6982 00D6  
                                    l6966 006E                                      l6896 0D93  
                                    l6994 011E                                      _BETA 1048  
                                    l6998 0138                                      STR_1 1050  
                            __CFG_WDTE$ON 0000                                      STR_2 1059  
                             _statuspower 00BA                           ADC_Max_10Bits@i 0032  
                                    _CREN 00C4                                      u5303 1542  
                                    u6031 0C91                                      u6023 0C78  
                                    u6015 0C5A                                      u5400 1DBE  
                                    u6040 0CA5                                      u6032 0C92  
                                    u5313 1553                                      u6041 0CA6  
                                    u6033 0C97                                      u6042 0CAB  
                                    u6034 0C98                                      u5323 15B6  
                                    u6043 0CAC                                      u6035 0C9D  
                                    u6036 0C9E                                      u5343 1604  
                                    u5503 0908                                      u7111 1258  
                                    u7112 1259                                      u5425 1B8C  
                                    u7025 10E7                                      u7113 125E  
                                    u7114 125F                                      u5283 1E1C  
                                    u5355 15A2                                      u7131 127E  
                                    u7115 1264                                      u7132 127F  
                                    u7116 1265                                      u5445 1C73  
                                    u6405 0532                                      u7045 10F5  
                                    u7133 1284                                      u6085 0CF2  
                                    u7134 1285                                      u5463 0842  
                                    u7055 110A                                      u7135 128A  
                                    u7136 128B                                      u5473 0853  
                                    u6505 0620                                      u7065 111C  
                                    u6185 0D30                                      u5483 08BE  
                                    u5635 114C                                      u7315 0A8F  
                                    u5900 0BF3                                      u6445 05C6  
                                    u7405 0ADE                                      u7245 0A46  
                                    u5735 1EB9                                      u6375 04D9  
                                    u5583 1DE5                                      u7415 0AFC  
                                    u7335 0A9A                                      u7255 0A4F  
                                    u5665 116B                                      u7425 0B17  
                                    u5755 1EC5                                      u6475 05FD  
                                    u7275 0A5A                                      u6813 16A7  
                                    u5765 1ED1                                      u6485 0615  
                                    u7445 1D0E                                      u6725 132B  
                                    u6645 12DF                                      u7285 0A6F  
                                    u6823 16B8                                      u5775 1EDB  
                                    u6575 0664                                      u5695 1183  
                                    u5935 0C14                                      u6833 171C  
                                    u6753 1449                                      u6585 0682  
                                    u6665 12FB                                      u5890 0BF2  
                                    u6763 145A                                      u6595 069A  
                                    u6915 1FE7                                      u7707 06D4  
                                    u6853 1764                                      u6773 14B2  
                                    u7717 1DED                                      u6685 1310  
                                    u5885 0BE6                                      u7807 106A  
                                    u7727 1B94                                      u7737 1D5D  
                                    u6883 07FB                                      u7747 1EA8  
                                    u7757 1C35                                      u7767 173D  
                                    u7777 17FA                                      u7787 0995  
                                    u6995 1F51                                      u7797 1E25  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 1AB9                                      _main 06CC  
                                    _hora 007C         __size_of_EEPROM_24C1025_Write_Int 0020  
                                    btemp 007E         __size_of_EEPROM_24C1025_Write_Str 00F3  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 002A               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 1AA3  
                        _BALANCE_RESISTOR 104C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002E                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0023  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                         __end_of___fldiv 0B3C                                     _EEADR 010D  
                         __end_of___flmul 06CC                           __end_of___flsub 1BDC  
                         __end_of___fltol 119C                                     _ANSEL 0188  
                         __end_of___lldiv 1131                                     _T1CON 0010  
                         __end_of___lwdiv 1EEA                                     i1l631 1392  
                                   i1l627 1371                                     i1l645 142B  
                                   i1l629 1382                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 003D                                     _TRISE 0089  
                                   _TXREG 0019                     ADC_Media_10bits@canal 0046  
                         __end_of_captura 1A98                             __CFG_PWRTE$ON 0000  
                            _usart_buffer 0110                     ADC_Media_10bits@value 0047  
               EEPROM_Read_Integer@result 0028                                     _canal 00B9  
            __size_of_EEPROM_Read_Integer 002A                                     _count 00AC  
                                   _errno 00A8             ??_EEPROM_24C1025_Write_Buffer 0031  
      __size_of_EEPROM_24C1025_Write_Byte 0016                ?_EEPROM_24C1025_Write_Byte 0037  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0037  
                            __end_of_BETA 104C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 001A  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 07BF                            Send_To_MB@size 0021  
                        _USART_put_buffer 1BA1                  __end_of_EEPROM_Read_Byte 1C3E  
                                  ??_main 006A                          __end_of_Save_Log 1213  
                        _USART_put_string 1D63                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0023                        ??_I2C_Master_Start 0023  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0025  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0801  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1AEF                                    i1l5312 1374  
                                  i1l5304 1357                                    i1l5324 1394  
                                  i1l5308 1366                                    i1l5318 1384  
                                  i1l5370 13D3                                    i1l5372 1406  
                                  i1l5348 13C4                                    i1l5366 13FA  
                                  i1l5368 13FF         __end_of_EEPROM_24C1025_Write_Byte 1B05  
                                  u519_25 13EC                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0058                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 005B                          __end_of___xxtofl 1349  
           EEPROM_24C1025_Read_Str@buffer 002D                        PROCULUS_VP_Write@i 0059  
                __end_of_Decodify_Command 03D7                  ?_EEPROM_24C1025_Read_Int 0037  
                ?_EEPROM_24C1025_Read_Str 0029                  _I2C_Master_RepeatedStart 1AAE  
    __size_of_EEPROM_24C1025_Write_Buffer 016A                                    ___flge 1213  
                               ??___fladd 0052                                 ??___fldiv 0049  
                               ??___flmul 0031                                 ??___flsub 0066  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00AE  
                       __end_of_ROOM_TEMP 1020                                 ??___lwdiv 0024  
                                  _buffer 00BC                         _USART_to_Protocol 1FAB  
                         USART_putc@value 0020         EEPROM_24C1025_Read_Buffer@cnt_103 0033  
                                  _minuto 007A                                 ??_captura 0022  
                      ?_USART_to_Protocol 0070              Decodify_Command@add_24LCxxxx 00E8  
                                  _strlen 1B68         EEPROM_24C1025_Read_Buffer@mem_add 002A  
        __end_of_EEPROM_24C1025_Read_Byte 1B34                        __size_of__Umul8_16 0023  
                                  saved_w 007E         EEPROM_24C1025_Write_Byte@chip_add 003C  
                               ?_ADC_init 0070                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 0010  
                __end_of_MediaPlacaVaccum 1000                                ___flge@ff1 0020  
                              ___flge@ff2 0024                              ___xxtofl@arg 003D  
                            ___xxtofl@exp 003C                              ___xxtofl@val 0033  
                        __end_oflog@coeff 1048                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 0052                                ___fltol@f1 0043  
                            _Board_Number 00B8                  __end_of_ADC_Media_10bits 10D3  
                          __pcstackCOMMON 0070                  __size_of_PROCULUS_Buzzer 0022  
               __end_of_USART_to_Protocol 2000                     USART_put_string@vetor 0021  
                     my_delay_ms_WDT@time 0020             __size_of_EEPROM_Write_Integer 0032  
                __size_of_my_delay_ms_WDT 0038                            _OPTION_REGbits 0081  
                 __size_of_ADC_Max_10Bits 003E                  __end_of_BALANCE_RESISTOR 1050  
        __end_of_EEPROM_24C1025_Write_Int 1BFC          __end_of_EEPROM_24C1025_Write_Str 152A  
                    USART_put_buffer@loop 0024                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1D00  
         __end_of_EEPROM_24C1025_Fill_All 07FE                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00A0  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1018           __end_of_EEPROM_24C1025_Read_Int 1CAB  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 1B84  
                       __end_of__Umul8_16 1C83                                __pmaintext 06CC  
                                 ?___flge 0020                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1CAB                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 1ADA  
                      ADC_Max_10Bits@Temp 002E                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strlen 0020  
                       MediaPlacaVaccum@i 00E6                                 ?___xxtofl 0033  
                                 _MAX_ADC 1020                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00DD               EEPROM_24C1025_Read_Int@data 003E  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1B4E  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 1B1B                                __stringtab 1000  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 003C  
                __end_of_USART_put_buffer 1BBE                __end_of_EEPROM_Read_String 1C1C  
                  __end_of_PROCULUS_Delay 1BA1                  __end_of_USART_put_string 1D96  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00A4  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0033  
                                 _Tensao1 00A0                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 0055               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 03D7                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1BBE                                   ___fltol 1131  
                                 ___lldiv 10D3                                   ___lwdiv 1EAE  
                           _Send_Reply_OK 1A85                       __size_of_Send_To_MB 0028  
                   ?_PROCULUS_Show_Screen 0056                                   _captura 1A8E  
                        _statuspower_memo 007B                                   __ptext1 1EEA  
                                 __ptext2 0D69                                   __ptext3 1BBE  
                                 __ptext4 0B3C                                   __ptext5 1213  
                                 __ptext6 099B                                   __ptext7 1B4E  
                                 __ptext8 107D                                   __ptext9 12A6  
                       ??_PROCULUS_Buzzer 0058                                   _destino 00B7  
                       ?_EEPROM_Read_Byte 0070                           __size_of_strlen 001C  
                            __size_of_isr 00EE                                ??___xxtofl 0037  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 007D  
                __size_of_I2C_Master_Init 0031                  __size_of_I2C_Master_Read 0035  
                          _usart_protocol 0190                     ??_EEPROM_Read_Integer 0025  
                __size_of_I2C_Master_Wait 0021                  __size_of_I2C_Master_Stop 0009  
           EEPROM_24C1025_Write_Int@local 0056                                   _pointer 00B6  
           EEPROM_24C1025_Write_Byte@data 003B                                   clrloop0 1A75  
                      __end_of_USART_init 1F26           __end_of_Package_Usart_is_for_me 1B68  
                      __end_of_USART_putc 1AC9                         ADC_Media_10bits@i 0049  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 1BDC  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 1437  
              ??_I2C_Master_RepeatedStart 0023                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 002F  
         EEPROM_24C1025_Write_Buffer@ctrl 0036                 __size_of_I2C_Master_Start 0011  
               __size_of_I2C_Master_Write 000B                         ?_Decodify_Command 0070  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002D  
                      ??_Decodify_Command 005F                                 _RCSTAbits 0018  
                        I2C_Master_Init@c 002E                          I2C_Master_Read@a 0023  
                          ?_Send_Reply_OK 0070                 _EEPROM_24C1025_Write_Byte 1AEF  
        __size_of_EEPROM_24C1025_Fill_All 003F                                   strlen@s 0020  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 00B4              ??_EEPROM_24C1025_Read_Buffer 0030  
           EEPROM_24C1025_Write_Str@range 0032                                 _ROOM_TEMP 101C  
                          _ADC_Max_10Bits 1F26                               ___fladd@grs 005D  
        __size_of_EEPROM_24C1025_Read_Int 0028          __size_of_EEPROM_24C1025_Read_Str 016C  
                           ___xxtofl@sign 003B       __end_of_EEPROM_24C1025_Write_Buffer 1694  
             _EEPROM_24C1025_Write_Buffer 152A                               ___fldiv@grs 0055  
                             ___fldiv@rem 004E      PROCULUS_Control_Register_Write@vetor 0054  
        EEPROM_24C1025_Write_Buffer@count 0033           EEPROM_24C1025_Write_Int@mem_add 004E  
        EEPROM_24C1025_Write_Buffer@range 0035                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00E1                         ?_MediaPlacaVaccum 0070  
                   PROCULUS_VP_Write@size 0056           EEPROM_24C1025_Read_Str@chip_add 0031  
                             ___flmul@grs 0039                        ??_MediaPlacaVaccum 0066  
                _PROCULUS_VP_Write_String 1B34                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 0172                         ?_ADC_Media_10bits 0041  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0058  
                      ??_ADC_Media_10bits 0045                            __end_of___flge 12A6  
                   __end_of_USART_put_int 1B1B                    __end_of_ADC_Max_10Bits 1F64  
                             _BAUDCTLbits 0187                            __end_of_strlen 1B84  
                     start_initialization 0015                               __end_of_isr 1437  
                             USART_init@i 0026                              ??_Send_To_MB 0021  
                       ??_I2C_Master_Init 0032                         ??_I2C_Master_Read 0025  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0023  
            __end_of_EEPROM_Write_Integer 1D63          EEPROM_24C1025_Write_Int@chip_add 0055  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00DF  
                   USART_put_buffer@vetor 0023                           ??_Send_Reply_OK 0025  
                                ??___flge 0028                         __size_of_Save_Log 0077  
                    I2C_Master_Wait@tempo 0022                                 __Umul8_16 1C60  
                      __end_of_Send_To_MB 0829          __size_of_Package_Usart_is_for_me 001A  
                         ?_ADC_Max_10Bits 002A                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 003B        EEPROM_24C1025_Write_Buffer@mem_add 002A  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 0037                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00DD                         _PROCULUS_VP_Write 1F64  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0025                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1AC9  
                      ??_USART_put_buffer 0022                          _I2C_Master_Write 1AA3  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00AA  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1C3E  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 07BF  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1BFC  
                                ?___lwdiv 0020        __end_of_EEPROM_24C1025_Read_Buffer 099B  
              _EEPROM_24C1025_Read_Buffer 0829                     MediaPlacaVaccum@Valor 00DD  
                                ?_captura 0020                                 __pstrings 1000  
                   MediaPlacaVaccum@canal 00E1                           _my_delay_ms_WDT 1E02  
                 _EEPROM_24C1025_Read_Int 1C83                   _EEPROM_24C1025_Read_Str 1694  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0054  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 1FAB                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 1A98                          ___lwdiv@quotient 0026  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
                     ADC_Max_10Bits@canal 002D            EEPROM_24C1025_Read_Buffer@data 002F  
          EEPROM_24C1025_Read_Buffer@ctrl 0036                       ADC_Max_10Bits@value 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0022  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1A74  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0055                    Decodify_Command@OutPut 00E3  
                         _PT100_TRANSLADA 1010                           _Delay_Led_Usart 00B2  
            EEPROM_24C1025_Read_Byte@data 003D               __end_of_EEPROM_Read_Integer 1CD5  
                              _ADCON0bits 001F                               __stringbase 100F  
                              _ADCON1bits 009F                 __size_of_Decodify_Command 03A0  
                    _EEPROM_Write_Integer 1D31            EEPROM_24C1025_Read_Int@mem_add 0037  
                               main@reset 006D                ??_PROCULUS_VP_Write_String 005D  
                     I2C_Master_Read@temp 0027                   __end_of_PROCULUS_Buzzer 1C60  
                          _generic_status 00BB                                _EECON1bits 018C  
                                _Save_Log 119C                 ??_EEPROM_24C1025_Fill_All 005A  
                     __end_of_my_delay_ms 1E02              EEPROM_24C1025_Read_Str@range 0032  
                 __end_of_my_delay_ms_WDT 1E3A                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 000B                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 003B                   _Package_Usart_is_for_me 1B4E  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002E  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                      __end_of__stringtab 1010       EEPROM_24C1025_Write_Buffer@chip_add 0034  
                     USART_put_string@ptr 0023                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1D00  
                         _I2C_Master_Read 1D96                                  ___xxtofl 12A6  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 105C  
        EEPROM_24C1025_Read_Byte@chip_add 003C                           _I2C_Master_Stop 1A7C  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 1F26  
                                __ptext11 1DCB                                  __ptext20 1D63  
                                __ptext12 1A8E                                  __ptext21 119C  
                                __ptext13 1D00                                  __ptext30 1EAE  
                                __ptext22 1131                                  __ptext14 10D3  
                                __ptext31 1E3A                                  __ptext23 03D7  
                                __ptext15 0037                                  __ptext40 1C1C  
                                __ptext32 1B05                                  __ptext24 1C60  
                                __ptext16 1FAB                                  __ptext41 1437  
                                __ptext33 1AB9                                  __ptext25 1B34  
                                __ptext17 1BA1                                  __ptext50 1BDC  
                                __ptext42 1AEF                                  __ptext34 1B84  
                                __ptext26 1B68                                  __ptext18 0801  
                                __ptext51 152A                                  __ptext43 1694  
                                __ptext35 1CD5                                  __ptext27 1F64  
                                __ptext19 1A85                                  __ptext52 1E02  
                                __ptext44 1C83                                  __ptext36 1D31  
                                __ptext28 1ADA                                  __ptext53 1AA3  
                                __ptext45 1B1B                                  __ptext37 1E72  
                                __ptext29 1C3E                                  __ptext54 1A7C  
                                __ptext46 0829                                  __ptext38 1BFC  
                                __ptext55 1AC9                                  __ptext47 1AAE  
                                __ptext39 1CAB                                  __ptext56 105C  
                                __ptext48 1D96                                  __ptext57 1A98  
                                __ptext49 07BF                                  __ptext58 1349  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 004E  
                          _PT100_CONSTANT 1014                      MediaPlacaVaccum@Temp 00E2  
                           __size_of_main 00F3              EEPROM_24C1025_Fill_All@value 0058  
              PROCULUS_VP_Write_String@vp 005A                   __end_of_PT100_TRANSLADA 1014  
     EEPROM_24C1025_Write_Buffer@sizedata 002E                               _milisegundo 00B0  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 1CD5  
                                log@coeff 1024                  __end_of_I2C_Master_Start 1ADA  
                __end_of_I2C_Master_Write 1AAE                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1018                                  isr@tempo 0076  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1C1C  
                             _my_delay_ms 1DCB                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 100A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1A8E  
                 __end_of_I2C_Master_Init 1D31                   __end_of_I2C_Master_Read 1DCB  
                 __end_of_I2C_Master_Wait 107D                   __end_of_I2C_Master_Stop 1A85  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0033  
               __size_of_USART_put_buffer 001D               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 005A                    ??_EEPROM_Write_Integer 0027  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0037                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0023  
                                strlen@cp 0022                                  stringdir 100A  
                                stringtab 1000                               _SSPCON2bits 0091  
                       _EEPROM_Write_Byte 1E72            EEPROM_24C1025_Read_Str@mem_add 0029  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 0019  
               ?_EEPROM_24C1025_Read_Byte 0037                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1EEA  
