

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 30 08:30:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  000E                     	;# 
  1118  000F                     	;# 
  1119  0010                     	;# 
  1120  0011                     	;# 
  1121  0012                     	;# 
  1122  0013                     	;# 
  1123  0014                     	;# 
  1124  0015                     	;# 
  1125  0015                     	;# 
  1126  0016                     	;# 
  1127  0017                     	;# 
  1128  0018                     	;# 
  1129  0019                     	;# 
  1130  001A                     	;# 
  1131  001B                     	;# 
  1132  001B                     	;# 
  1133  001C                     	;# 
  1134  001D                     	;# 
  1135  001E                     	;# 
  1136  001F                     	;# 
  1137  0081                     	;# 
  1138  0085                     	;# 
  1139  0086                     	;# 
  1140  0087                     	;# 
  1141  0089                     	;# 
  1142  008C                     	;# 
  1143  008D                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0091                     	;# 
  1148  0092                     	;# 
  1149  0093                     	;# 
  1150  0093                     	;# 
  1151  0093                     	;# 
  1152  0094                     	;# 
  1153  0095                     	;# 
  1154  0096                     	;# 
  1155  0097                     	;# 
  1156  0098                     	;# 
  1157  0099                     	;# 
  1158  009A                     	;# 
  1159  009B                     	;# 
  1160  009C                     	;# 
  1161  009D                     	;# 
  1162  009E                     	;# 
  1163  009F                     	;# 
  1164  0105                     	;# 
  1165  0107                     	;# 
  1166  0108                     	;# 
  1167  0109                     	;# 
  1168  010C                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0185                     	;# 
  1174  0187                     	;# 
  1175  0188                     	;# 
  1176  0189                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179                           
  1180                           	psect	strings
  1181  1800                     __pstrings:	
  1182  1800                     stringtab:	
  1183  1800                     __stringtab:	
  1184                           
  1185                           ;	String table - string pointers are 1 byte each
  1186  1800  1BFF               	btfsc	btemp+1,7
  1187  1801  280A               	ljmp	stringcode
  1188  1802  1383               	bcf	3,7
  1189  1803  187F               	btfsc	btemp+1,0
  1190  1804  1783               	bsf	3,7
  1191  1805  0800               	movf	0,w
  1192  1806  0A84               	incf	4,f
  1193  1807  1903               	skipnz
  1194  1808  0AFF               	incf	btemp+1,f
  1195  1809  0008               	return
  1196  180A                     stringcode:	
  1197  180A                     stringdir:	
  1198  180A  3018               	movlw	high stringdir
  1199  180B  008A               	movwf	10
  1200  180C  0804               	movf	4,w
  1201  180D  0A84               	incf	4,f
  1202  180E  0782               	addwf	2,f
  1203  180F                     __stringbase:	
  1204  180F  3400               	retlw	0
  1205  1810                     __end_of__stringtab:	
  1206  1810                     _PT100_TRANSLADA:	
  1207  1810  3466               	retlw	102
  1208  1811  3466               	retlw	102
  1209  1812  34A6               	retlw	166
  1210  1813  34BF               	retlw	191
  1211  1814                     __end_of_PT100_TRANSLADA:	
  1212  1814                     _PT100_CONSTANT:	
  1213  1814  3414               	retlw	20
  1214  1815  34AE               	retlw	174
  1215  1816  342B               	retlw	43
  1216  1817  34C1               	retlw	193
  1217  1818                     __end_of_PT100_CONSTANT:	
  1218  1818                     _RESISTOR_ROOM_TEMP:	
  1219                           
  1220                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1221  1818  3400               	retlw	0
  1222  1819  3440               	retlw	64
  1223  181A  341C               	retlw	28
  1224  181B  3446               	retlw	70
  1225  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1226  181C                     _ROOM_TEMP:	
  1227                           
  1228                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1229  181C  3466               	retlw	102
  1230  181D  3486               	retlw	134
  1231  181E  3496               	retlw	150
  1232  181F  3443               	retlw	67
  1233  1820                     __end_of_ROOM_TEMP:	
  1234  1820                     _MAX_ADC:	
  1235                           
  1236                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1237  1820  3400               	retlw	0
  1238  1821  34C0               	retlw	192
  1239  1822  347F               	retlw	127
  1240  1823  3444               	retlw	68
  1241  1824                     __end_of_MAX_ADC:	
  1242  1824                     log@coeff:	
  1243  1824  3400               	retlw	0
  1244  1825  3400               	retlw	0
  1245  1826  3400               	retlw	0
  1246  1827  3400               	retlw	0
  1247  1828  34C4               	retlw	196
  1248  1829  34FF               	retlw	255
  1249  182A  347F               	retlw	127
  1250  182B  343F               	retlw	63
  1251  182C  3480               	retlw	128
  1252  182D  34EF               	retlw	239
  1253  182E  34FF               	retlw	255
  1254  182F  34BE               	retlw	190
  1255  1830  3490               	retlw	144
  1256  1831  34E1               	retlw	225
  1257  1832  34A9               	retlw	169
  1258  1833  343E               	retlw	62
  1259  1834  34EC               	retlw	236
  1260  1835  3482               	retlw	130
  1261  1836  3476               	retlw	118
  1262  1837  34BE               	retlw	190
  1263  1838  3482               	retlw	130
  1264  1839  34AD               	retlw	173
  1265  183A  342B               	retlw	43
  1266  183B  343E               	retlw	62
  1267  183C  340E               	retlw	14
  1268  183D  343C               	retlw	60
  1269  183E  34C3               	retlw	195
  1270  183F  34BD               	retlw	189
  1271  1840  3487               	retlw	135
  1272  1841  34D1               	retlw	209
  1273  1842  3413               	retlw	19
  1274  1843  343D               	retlw	61
  1275  1844  3441               	retlw	65
  1276  1845  3478               	retlw	120
  1277  1846  34D3               	retlw	211
  1278  1847  34BB               	retlw	187
  1279  1848                     __end_oflog@coeff:	
  1280  1848                     _BETA:	
  1281                           
  1282                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1283  1848  3400               	retlw	0
  1284  1849  3460               	retlw	96
  1285  184A  3478               	retlw	120
  1286  184B  3445               	retlw	69
  1287  184C                     __end_of_BETA:	
  1288  184C                     _BALANCE_RESISTOR:	
  1289                           
  1290                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1291  184C  3400               	retlw	0
  1292  184D  3440               	retlw	64
  1293  184E  341C               	retlw	28
  1294  184F  3446               	retlw	70
  1295  1850                     __end_of_BALANCE_RESISTOR:	
  1296  0019                     _TXREG	set	25
  1297  0018                     _RCSTAbits	set	24
  1298  001A                     _RCREG	set	26
  1299  000E                     _TMR1L	set	14
  1300  000F                     _TMR1H	set	15
  1301  001E                     _ADRESH	set	30
  1302  001F                     _ADCON0bits	set	31
  1303  0005                     _PORTAbits	set	5
  1304  0007                     _PORTCbits	set	7
  1305  0010                     _T1CON	set	16
  1306  0006                     _PORTBbits	set	6
  1307  0009                     _PORTE	set	9
  1308  0007                     _PORTC	set	7
  1309  0005                     _PORTA	set	5
  1310  0013                     _SSPBUF	set	19
  1311  000C                     _PIR1bits	set	12
  1312  000B                     _INTCONbits	set	11
  1313  0006                     _PORTB	set	6
  1314  00C4                     _CREN	set	196
  1315  0081                     _TMR1CS	set	129
  1316  0085                     _T1CKPS1	set	133
  1317  0084                     _T1CKPS0	set	132
  1318  0099                     _SPBRG	set	153
  1319  0098                     _TXSTAbits	set	152
  1320  009E                     _ADRESL	set	158
  1321  009F                     _ADCON1	set	159
  1322  009F                     _ADCON1bits	set	159
  1323  0095                     _WPUB	set	149
  1324  0081                     _OPTION_REGbits	set	129
  1325  0089                     _TRISE	set	137
  1326  0087                     _TRISC	set	135
  1327  0086                     _TRISB	set	134
  1328  0085                     _TRISA	set	133
  1329  008F                     _OSCCONbits	set	143
  1330  0091                     _SSPCON2bits	set	145
  1331  008C                     _PIE1bits	set	140
  1332  0087                     _TRISCbits	set	135
  1333  0094                     _SSPSTAT	set	148
  1334  0093                     _SSPADD	set	147
  1335  0091                     _SSPCON2	set	145
  1336  043F                     _TRISC7	set	1087
  1337  043E                     _TRISC6	set	1086
  1338  0460                     _TMR1IE	set	1120
  1339  010C                     _EEDATA	set	268
  1340  010D                     _EEADR	set	269
  1341  0187                     _BAUDCTLbits	set	391
  1342  018D                     _EECON2	set	397
  1343  018C                     _EECON1bits	set	396
  1344  0189                     _ANSELH	set	393
  1345  0188                     _ANSEL	set	392
  1346  1850                     STR_1:	
  1347  1850  3476               	retlw	118	;'v'
  1348  1851  3431               	retlw	49	;'1'
  1349  1852  342E               	retlw	46	;'.'
  1350  1853  3430               	retlw	48	;'0'
  1351  1854  342E               	retlw	46	;'.'
  1352  1855  3431               	retlw	49	;'1'
  1353  1856  3431               	retlw	49	;'1'
  1354  1857  3400               	retlw	0
  1355  1858                     STR_8:	
  1356  1858  344F               	retlw	79	;'O'
  1357  1859  344B               	retlw	75	;'K'
  1358  185A  3400               	retlw	0
  1359  185B                     STR_3:	
  1360  185B  3430               	retlw	48	;'0'
  1361  185C  3400               	retlw	0
  1362  185D                     STR_4:	
  1363  185D  343A               	retlw	58	;':'
  1364  185E  3400               	retlw	0
  1365  185C                     
  1366                           ; #config settings
  1367  0000                     
  1368                           	psect	cinit
  1369  0015                     start_initialization:	
  1370  0015                     __initialization:	
  1371                           
  1372                           ; Clear objects allocated to COMMON
  1373  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1374  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1375  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1376  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1377  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001A  1383               	bcf	3,7	;select IRP bank0
  1381  001B  30CD               	movlw	low __pbssBANK1
  1382  001C  0084               	movwf	4
  1383  001D  30EA               	movlw	low (__pbssBANK1+29)
  1384  001E  160A  158A  20E7  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK3
  1387  0023  1783               	bsf	3,7	;select IRP bank2
  1388  0024  3090               	movlw	low __pbssBANK3
  1389  0025  0084               	movwf	4
  1390  0026  30DA               	movlw	low (__pbssBANK3+74)
  1391  0027  160A  158A  20E7  120A  118A  	fcall	clear_ram0
  1392                           
  1393                           ; Clear objects allocated to BANK2
  1394  002C  3010               	movlw	low __pbssBANK2
  1395  002D  0084               	movwf	4
  1396  002E  3030               	movlw	low (__pbssBANK2+32)
  1397  002F  160A  158A  20E7   	fcall	clear_ram0
  1398  0032                     end_of_initialization:	
  1399                           ;End of C runtime variable initialization code
  1400                           
  1401  0032                     __end_of__initialization:	
  1402  0032  0183               	clrf	3
  1403  0033  160A  118A  2B45   	ljmp	_main	;jump to C main() function
  1404                           
  1405                           	psect	bssCOMMON
  1406  0078                     __pbssCOMMON:	
  1407  0078                     _Delay_Led_Tmr0:	
  1408  0078                     	ds	2
  1409  007A                     _Delay_Led_Memory:	
  1410  007A                     	ds	2
  1411  007C                     _statuspower_memo:	
  1412  007C                     	ds	1
  1413                           
  1414                           	psect	bssBANK1
  1415  00CD                     __pbssBANK1:	
  1416  00CD                     _Tensao1:	
  1417  00CD                     	ds	4
  1418  00D1                     _Vaccum0:	
  1419  00D1                     	ds	4
  1420  00D5                     _errno:	
  1421  00D5                     	ds	2
  1422  00D7                     _tempodecorrido:	
  1423  00D7                     	ds	2
  1424  00D9                     _count:	
  1425  00D9                     	ds	2
  1426  00DB                     _header:	
  1427  00DB                     	ds	2
  1428  00DD                     _milisegundo:	
  1429  00DD                     	ds	2
  1430  00DF                     _Delay_Led_Usart:	
  1431  00DF                     	ds	2
  1432  00E1                     _pointer:	
  1433  00E1                     	ds	1
  1434  00E2                     _destino:	
  1435  00E2                     	ds	1
  1436  00E3                     _Board_Number:	
  1437  00E3                     	ds	1
  1438  00E4                     _canal:	
  1439  00E4                     	ds	1
  1440  00E5                     _minuto:	
  1441  00E5                     	ds	1
  1442  00E6                     _hora:	
  1443  00E6                     	ds	1
  1444  00E7                     _segundo:	
  1445  00E7                     	ds	1
  1446  00E8                     _statuspower:	
  1447  00E8                     	ds	1
  1448  00E9                     _generic_status:	
  1449  00E9                     	ds	1
  1450                           
  1451                           	psect	bssBANK3
  1452  0190                     __pbssBANK3:	
  1453  0190                     _usart_buffer:	
  1454  0190                     	ds	42
  1455  01BA                     _texto:	
  1456  01BA                     	ds	16
  1457  01CA                     _usart_protocol:	
  1458  01CA                     	ds	16
  1459                           
  1460                           	psect	bssBANK2
  1461  0110                     __pbssBANK2:	
  1462  0110                     _buffer:	
  1463  0110                     	ds	32
  1464                           
  1465                           	psect	clrtext
  1466  18E7                     clear_ram0:	
  1467                           ;	Called with FSR containing the base address, and
  1468                           ;	W with the last address+1
  1469                           
  1470  18E7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1471  18E8                     clrloop0:	
  1472  18E8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1473  18E9  0A84               	incf	4,f	;increment pointer
  1474  18EA  0604               	xorwf	4,w	;XOR with final address
  1475  18EB  1903               	btfsc	3,2	;have we reached the end yet?
  1476  18EC  3400               	retlw	0	;all done for this memory range, return
  1477  18ED  0604               	xorwf	4,w	;XOR again to restore value
  1478  18EE  28E8               	goto	clrloop0	;do the next byte
  1479                           
  1480                           	psect	cstackBANK1
  1481  00A0                     __pcstackBANK1:	
  1482  00A0                     MediaPlacaVaccum@Valor:	
  1483  00A0                     Decodify_Command@hh:	
  1484                           ; 4 bytes @ 0x0
  1485                           
  1486                           
  1487                           ; 10 bytes @ 0x0
  1488  00A0                     	ds	4
  1489  00A4                     MediaPlacaVaccum@canal:	
  1490                           
  1491                           ; 1 bytes @ 0x4
  1492  00A4                     	ds	1
  1493  00A5                     MediaPlacaVaccum@Temp:	
  1494                           
  1495                           ; 4 bytes @ 0x5
  1496  00A5                     	ds	4
  1497  00A9                     MediaPlacaVaccum@i:	
  1498                           
  1499                           ; 2 bytes @ 0x9
  1500  00A9                     	ds	1
  1501  00AA                     Decodify_Command@mm:	
  1502                           
  1503                           ; 10 bytes @ 0xA
  1504  00AA                     	ds	10
  1505  00B4                     Decodify_Command@ss:	
  1506                           
  1507                           ; 10 bytes @ 0x14
  1508  00B4                     	ds	10
  1509  00BE                     Decodify_Command@dados:	
  1510                           
  1511                           ; 2 bytes @ 0x1E
  1512  00BE                     	ds	2
  1513  00C0                     Decodify_Command@add:	
  1514                           
  1515                           ; 1 bytes @ 0x20
  1516  00C0                     	ds	1
  1517  00C1                     Decodify_Command@tempint:	
  1518                           
  1519                           ; 2 bytes @ 0x21
  1520  00C1                     	ds	2
  1521  00C3                     Decodify_Command@OutPut:	
  1522                           
  1523                           ; 4 bytes @ 0x23
  1524  00C3                     	ds	4
  1525  00C7                     Decodify_Command@tempchar:	
  1526                           
  1527                           ; 1 bytes @ 0x27
  1528  00C7                     	ds	1
  1529  00C8                     Decodify_Command@sizedata:	
  1530                           
  1531                           ; 1 bytes @ 0x28
  1532  00C8                     	ds	1
  1533  00C9                     Decodify_Command@add_24LCxxxx:	
  1534                           
  1535                           ; 4 bytes @ 0x29
  1536  00C9                     	ds	4
  1537                           
  1538                           	psect	cstackCOMMON
  1539  0070                     __pcstackCOMMON:	
  1540  0070                     ?_I2C_Master_Start:	
  1541  0070                     ?_I2C_Master_Stop:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_I2C_Master_RepeatedStart:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_ADC_init:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_MediaPlacaVaccum:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_Decodify_Command:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_USART_to_Protocol:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Send_To_MB:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_Send_Reply_OK:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_EEPROM_Read_Byte:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_USART_putc:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_Package_Usart_is_for_me:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_I2C_Master_Wait:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_main:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_isr:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ??_isr:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0x0
  1588  0070                     	ds	6
  1589  0076                     isr@tempo:	
  1590                           
  1591                           ; 2 bytes @ 0x6
  1592  0076                     	ds	2
  1593                           
  1594                           	psect	cstackBANK0
  1595  0020                     __pcstackBANK0:	
  1596  0020                     ?___flge:	
  1597  0020                     ?_my_delay_ms_WDT:	
  1598                           ; 1 bit 
  1599                           
  1600  0020                     ??_ADC_init:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ?_USART_init:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ??_USART_to_Protocol:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ?_EEPROM_Write_Byte:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ??_EEPROM_Read_Byte:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ??_USART_putc:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ?_strcpy:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ?_strcat:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ?_my_delay_ms:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ??_Package_Usart_is_for_me:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ?_PROCULUS_Delay:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ??_I2C_Master_Wait:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ?_strlen:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     ?_captura:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642  0020                     ?__Umul8_16:	
  1643                           ; 2 bytes @ 0x0
  1644                           
  1645  0020                     ?___lwdiv:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0020                     ?___lwmod:	
  1649                           ; 2 bytes @ 0x0
  1650                           
  1651  0020                     ?___lldiv:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654  0020                     EEPROM_Write_Byte@dado:	
  1655                           ; 4 bytes @ 0x0
  1656                           
  1657  0020                     Package_Usart_is_for_me@retorno:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     USART_putc@value:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     strcpy@from:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     __Umul8_16@multiplicand:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0020                     PROCULUS_Delay@tempo_ms:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0020                     ___lwdiv@divisor:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     ___lwmod@divisor:	
  1676                           ; 2 bytes @ 0x0
  1677                           
  1678  0020                     strcat@from:	
  1679                           ; 2 bytes @ 0x0
  1680                           
  1681  0020                     my_delay_ms@time:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684  0020                     my_delay_ms_WDT@time:	
  1685                           ; 4 bytes @ 0x0
  1686                           
  1687  0020                     USART_init@baudrate:	
  1688                           ; 4 bytes @ 0x0
  1689                           
  1690  0020                     ___lldiv@divisor:	
  1691                           ; 4 bytes @ 0x0
  1692                           
  1693  0020                     ___flge@ff1:	
  1694                           ; 4 bytes @ 0x0
  1695                           
  1696                           
  1697                           ; 4 bytes @ 0x0
  1698  0020                     	ds	1
  1699  0021                     ??_Send_To_MB:	
  1700  0021                     ?_USART_put_string:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0021                     ??_EEPROM_Write_Byte:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706  0021                     ?_USART_put_buffer:	
  1707                           ; 1 bytes @ 0x1
  1708                           
  1709  0021                     ??_strcpy:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712  0021                     Send_To_MB@size:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715  0021                     USART_put_buffer@size:	
  1716                           ; 1 bytes @ 0x1
  1717                           
  1718  0021                     USART_put_string@vetor:	
  1719                           ; 2 bytes @ 0x1
  1720                           
  1721                           
  1722                           ; 2 bytes @ 0x1
  1723  0021                     	ds	1
  1724  0022                     ??_strlen:	
  1725  0022                     ??_strcat:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0022                     ??_captura:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0022                     ??_PROCULUS_Delay:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734  0022                     ??__Umul8_16:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0022                     I2C_Master_Wait@tempo:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740  0022                     EEPROM_Read_Byte@addr:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743  0022                     strcpy@to:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746  0022                     USART_to_Protocol@i:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749  0022                     ___lwdiv@dividend:	
  1750                           ; 2 bytes @ 0x2
  1751                           
  1752  0022                     ___lwmod@dividend:	
  1753                           ; 2 bytes @ 0x2
  1754                           
  1755                           
  1756                           ; 2 bytes @ 0x2
  1757  0022                     	ds	1
  1758  0023                     ??_I2C_Master_Start:	
  1759  0023                     ?_I2C_Master_Write:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762  0023                     ??_I2C_Master_Stop:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0023                     ??_I2C_Master_RepeatedStart:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0023                     ??_USART_put_string:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0023                     ?_EEPROM_Read_String:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0023                     ??_USART_put_buffer:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777  0023                     ?_I2C_Master_Read:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0023                     ?_EEPROM_Read_Integer:	
  1781                           ; 2 bytes @ 0x3
  1782                           
  1783  0023                     EEPROM_Write_Byte@addr:	
  1784                           ; 2 bytes @ 0x3
  1785                           
  1786  0023                     EEPROM_Read_String@dado:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0023                     strcat@cp:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0023                     strcpy@cp:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0023                     strlen@cp:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0023                     I2C_Master_Write@d:	
  1799                           ; 1 bytes @ 0x3
  1800                           
  1801  0023                     I2C_Master_Read@a:	
  1802                           ; 2 bytes @ 0x3
  1803                           
  1804  0023                     USART_put_string@ptr:	
  1805                           ; 2 bytes @ 0x3
  1806                           
  1807                           
  1808                           ; 2 bytes @ 0x3
  1809  0023                     	ds	1
  1810  0024                     ??_my_delay_ms_WDT:	
  1811  0024                     ??_USART_init:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814  0024                     ??_EEPROM_Read_String:	
  1815                           ; 1 bytes @ 0x4
  1816                           
  1817  0024                     ??_my_delay_ms:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0024                     ??___lwdiv:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0024                     ??___lwmod:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826  0024                     EEPROM_Write_Byte@last_GIE:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829  0024                     USART_to_Protocol@usart_protocol:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832  0024                     strcat@to:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835  0024                     strlen@s:	
  1836                           ; 1 bytes @ 0x4
  1837                           
  1838  0024                     PROCULUS_Delay@i:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841  0024                     __Umul8_16@product:	
  1842                           ; 2 bytes @ 0x4
  1843                           
  1844  0024                     ___lldiv@dividend:	
  1845                           ; 2 bytes @ 0x4
  1846                           
  1847  0024                     ___flge@ff2:	
  1848                           ; 4 bytes @ 0x4
  1849                           
  1850                           
  1851                           ; 4 bytes @ 0x4
  1852  0024                     	ds	1
  1853  0025                     ??_I2C_Master_Write:	
  1854  0025                     ??_I2C_Master_Read:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857  0025                     ??_EEPROM_Read_Integer:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860  0025                     ?_EEPROM_Write_Integer:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863  0025                     ??_Send_Reply_OK:	
  1864                           ; 1 bytes @ 0x5
  1865                           
  1866  0025                     ?_EEPROM_Write_String:	
  1867                           ; 1 bytes @ 0x5
  1868                           
  1869  0025                     EEPROM_Write_String@dado:	
  1870                           ; 1 bytes @ 0x5
  1871                           
  1872  0025                     EEPROM_Read_String@addr:	
  1873                           ; 1 bytes @ 0x5
  1874                           
  1875  0025                     USART_put_buffer@vetor:	
  1876                           ; 1 bytes @ 0x5
  1877                           
  1878  0025                     ___lwdiv@counter:	
  1879                           ; 1 bytes @ 0x5
  1880                           
  1881  0025                     ___lwmod@counter:	
  1882                           ; 1 bytes @ 0x5
  1883                           
  1884  0025                     EEPROM_Write_Integer@dado:	
  1885                           ; 1 bytes @ 0x5
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0x5
  1889  0025                     	ds	1
  1890  0026                     ??_EEPROM_Write_String:	
  1891  0026                     EEPROM_Read_Integer@addr:	
  1892                           ; 1 bytes @ 0x6
  1893                           
  1894  0026                     EEPROM_Read_String@c:	
  1895                           ; 1 bytes @ 0x6
  1896                           
  1897  0026                     USART_init@i:	
  1898                           ; 1 bytes @ 0x6
  1899                           
  1900  0026                     USART_put_buffer@loop:	
  1901                           ; 1 bytes @ 0x6
  1902                           
  1903  0026                     ___lwdiv@quotient:	
  1904                           ; 1 bytes @ 0x6
  1905                           
  1906  0026                     __Umul8_16@word_mpld:	
  1907                           ; 2 bytes @ 0x6
  1908                           
  1909  0026                     my_delay_ms@i:	
  1910                           ; 2 bytes @ 0x6
  1911                           
  1912  0026                     my_delay_ms_WDT@i:	
  1913                           ; 4 bytes @ 0x6
  1914                           
  1915                           
  1916                           ; 4 bytes @ 0x6
  1917  0026                     	ds	1
  1918  0027                     ??_EEPROM_Write_Integer:	
  1919  0027                     EEPROM_Read_Integer@ptr:	
  1920                           ; 1 bytes @ 0x7
  1921                           
  1922  0027                     EEPROM_Write_String@addr:	
  1923                           ; 1 bytes @ 0x7
  1924                           
  1925  0027                     USART_put_buffer@ptr:	
  1926                           ; 1 bytes @ 0x7
  1927                           
  1928  0027                     I2C_Master_Read@temp:	
  1929                           ; 1 bytes @ 0x7
  1930                           
  1931                           
  1932                           ; 2 bytes @ 0x7
  1933  0027                     	ds	1
  1934  0028                     ?_utoa:	
  1935  0028                     ??___lldiv:	
  1936                           ; 1 bytes @ 0x8
  1937                           
  1938  0028                     ??___flge:	
  1939                           ; 1 bytes @ 0x8
  1940                           
  1941  0028                     __Umul8_16@multiplier:	
  1942                           ; 1 bytes @ 0x8
  1943                           
  1944  0028                     EEPROM_Read_Integer@result:	
  1945                           ; 1 bytes @ 0x8
  1946                           
  1947  0028                     utoa@val:	
  1948                           ; 2 bytes @ 0x8
  1949                           
  1950                           
  1951                           ; 2 bytes @ 0x8
  1952  0028                     	ds	1
  1953  0029                     ?___flmul:	
  1954  0029                     ___lldiv@quotient:	
  1955                           ; 4 bytes @ 0x9
  1956                           
  1957  0029                     ___flmul@b:	
  1958                           ; 4 bytes @ 0x9
  1959                           
  1960                           
  1961                           ; 4 bytes @ 0x9
  1962  0029                     	ds	1
  1963  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1964  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1965                           ; 1 bytes @ 0xA
  1966                           
  1967  002A                     ?_EEPROM_24C1025_Write_Str:	
  1968                           ; 1 bytes @ 0xA
  1969                           
  1970  002A                     ?_EEPROM_24C1025_Read_Str:	
  1971                           ; 1 bytes @ 0xA
  1972                           
  1973  002A                     ?_ADC_Max_10Bits:	
  1974                           ; 1 bytes @ 0xA
  1975                           
  1976  002A                     EEPROM_Write_Integer@ptr:	
  1977                           ; 2 bytes @ 0xA
  1978                           
  1979  002A                     EEPROM_Read_Integer@i:	
  1980                           ; 1 bytes @ 0xA
  1981                           
  1982  002A                     utoa@base:	
  1983                           ; 1 bytes @ 0xA
  1984                           
  1985  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1986                           ; 2 bytes @ 0xA
  1987                           
  1988  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1989                           ; 4 bytes @ 0xA
  1990                           
  1991  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1992                           ; 4 bytes @ 0xA
  1993                           
  1994  002A                     EEPROM_24C1025_Read_Str@mem_add:	
  1995                           ; 4 bytes @ 0xA
  1996                           
  1997                           
  1998                           ; 4 bytes @ 0xA
  1999  002A                     	ds	1
  2000  002B                     EEPROM_Write_Integer@addr:	
  2001                           
  2002                           ; 1 bytes @ 0xB
  2003  002B                     	ds	1
  2004  002C                     ??_ADC_Max_10Bits:	
  2005  002C                     ??_utoa:	
  2006                           ; 1 bytes @ 0xC
  2007                           
  2008  002C                     EEPROM_Write_Integer@i:	
  2009                           ; 1 bytes @ 0xC
  2010                           
  2011                           
  2012                           ; 1 bytes @ 0xC
  2013  002C                     	ds	1
  2014  002D                     ADC_Max_10Bits@canal:	
  2015  002D                     ___lldiv@counter:	
  2016                           ; 1 bytes @ 0xD
  2017                           
  2018  002D                     utoa@v:	
  2019                           ; 1 bytes @ 0xD
  2020                           
  2021  002D                     ___flmul@a:	
  2022                           ; 2 bytes @ 0xD
  2023                           
  2024                           
  2025                           ; 4 bytes @ 0xD
  2026  002D                     	ds	1
  2027  002E                     ?_I2C_Master_Init:	
  2028  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2029                           ; 1 bytes @ 0xE
  2030                           
  2031  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2032                           ; 1 bytes @ 0xE
  2033                           
  2034  002E                     EEPROM_24C1025_Write_Str@data:	
  2035                           ; 1 bytes @ 0xE
  2036                           
  2037  002E                     EEPROM_24C1025_Read_Str@texto:	
  2038                           ; 1 bytes @ 0xE
  2039                           
  2040  002E                     ADC_Max_10Bits@Temp:	
  2041                           ; 1 bytes @ 0xE
  2042                           
  2043  002E                     I2C_Master_Init@c:	
  2044                           ; 2 bytes @ 0xE
  2045                           
  2046                           
  2047                           ; 4 bytes @ 0xE
  2048  002E                     	ds	1
  2049  002F                     ??_EEPROM_24C1025_Write_Str:	
  2050  002F                     ??_EEPROM_24C1025_Read_Str:	
  2051                           ; 1 bytes @ 0xF
  2052                           
  2053  002F                     utoa@c:	
  2054                           ; 1 bytes @ 0xF
  2055                           
  2056  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2057                           ; 1 bytes @ 0xF
  2058                           
  2059  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2060                           ; 2 bytes @ 0xF
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0xF
  2064  002F                     	ds	1
  2065  0030                     utoa@buf:	
  2066  0030                     ADC_Max_10Bits@value:	
  2067                           ; 1 bytes @ 0x10
  2068                           
  2069                           
  2070                           ; 2 bytes @ 0x10
  2071  0030                     	ds	1
  2072  0031                     ?_itoa:	
  2073  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2074                           ; 1 bytes @ 0x11
  2075                           
  2076  0031                     ??_EEPROM_24C1025_Read_Buffer:	
  2077                           ; 1 bytes @ 0x11
  2078                           
  2079  0031                     ??___flmul:	
  2080                           ; 1 bytes @ 0x11
  2081                           
  2082  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2083                           ; 1 bytes @ 0x11
  2084                           
  2085  0031                     EEPROM_24C1025_Read_Str@cnt:	
  2086                           ; 1 bytes @ 0x11
  2087                           
  2088  0031                     itoa@val:	
  2089                           ; 1 bytes @ 0x11
  2090                           
  2091                           
  2092                           ; 2 bytes @ 0x11
  2093  0031                     	ds	1
  2094  0032                     ??_I2C_Master_Init:	
  2095  0032                     EEPROM_24C1025_Write_Str@range:	
  2096                           ; 1 bytes @ 0x12
  2097                           
  2098  0032                     EEPROM_24C1025_Read_Str@chip_add:	
  2099                           ; 1 bytes @ 0x12
  2100                           
  2101  0032                     ADC_Max_10Bits@i:	
  2102                           ; 1 bytes @ 0x12
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x12
  2106  0032                     	ds	1
  2107  0033                     ?___xxtofl:	
  2108  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2109                           ; 4 bytes @ 0x13
  2110                           
  2111  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2112                           ; 1 bytes @ 0x13
  2113                           
  2114  0033                     EEPROM_24C1025_Read_Str@range:	
  2115                           ; 1 bytes @ 0x13
  2116                           
  2117  0033                     itoa@base:	
  2118                           ; 1 bytes @ 0x13
  2119                           
  2120  0033                     ___xxtofl@val:	
  2121                           ; 2 bytes @ 0x13
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0x13
  2125  0033                     	ds	1
  2126  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2127  0034                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2128                           ; 1 bytes @ 0x14
  2129                           
  2130  0034                     EEPROM_24C1025_Read_Str@ctrl:	
  2131                           ; 1 bytes @ 0x14
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x14
  2135  0034                     	ds	1
  2136  0035                     ??_itoa:	
  2137  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2138                           ; 1 bytes @ 0x15
  2139                           
  2140  0035                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2141                           ; 1 bytes @ 0x15
  2142                           
  2143                           
  2144                           ; 1 bytes @ 0x15
  2145  0035                     	ds	1
  2146  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2147  0036                     EEPROM_24C1025_Read_Buffer@range:	
  2148                           ; 1 bytes @ 0x16
  2149                           
  2150  0036                     ___flmul@sign:	
  2151                           ; 1 bytes @ 0x16
  2152                           
  2153                           
  2154                           ; 1 bytes @ 0x16
  2155  0036                     	ds	1
  2156  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2157  0037                     ??___xxtofl:	
  2158                           ; 1 bytes @ 0x17
  2159                           
  2160  0037                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2161                           ; 1 bytes @ 0x17
  2162                           
  2163  0037                     ___flmul@aexp:	
  2164                           ; 1 bytes @ 0x17
  2165                           
  2166  0037                     itoa@buf:	
  2167                           ; 1 bytes @ 0x17
  2168                           
  2169  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2170                           ; 1 bytes @ 0x17
  2171                           
  2172                           
  2173                           ; 4 bytes @ 0x17
  2174  0037                     	ds	1
  2175  0038                     ?_EEPROM_24C1025_Read_Byte:	
  2176  0038                     ?_EEPROM_24C1025_Read_Int:	
  2177                           ; 1 bytes @ 0x18
  2178                           
  2179  0038                     ___flmul@bexp:	
  2180                           ; 2 bytes @ 0x18
  2181                           
  2182  0038                     EEPROM_24C1025_Read_Byte@mem_add:	
  2183                           ; 1 bytes @ 0x18
  2184                           
  2185  0038                     EEPROM_24C1025_Read_Int@mem_add:	
  2186                           ; 4 bytes @ 0x18
  2187                           
  2188                           
  2189                           ; 4 bytes @ 0x18
  2190  0038                     	ds	1
  2191  0039                     ___flmul@grs:	
  2192                           
  2193                           ; 4 bytes @ 0x19
  2194  0039                     	ds	2
  2195  003B                     EEPROM_24C1025_Write_Byte@data:	
  2196  003B                     ___xxtofl@sign:	
  2197                           ; 1 bytes @ 0x1B
  2198                           
  2199                           
  2200                           ; 1 bytes @ 0x1B
  2201  003B                     	ds	1
  2202  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2203  003C                     ??_EEPROM_24C1025_Read_Byte:	
  2204                           ; 1 bytes @ 0x1C
  2205                           
  2206  003C                     ??_EEPROM_24C1025_Read_Int:	
  2207                           ; 1 bytes @ 0x1C
  2208                           
  2209  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2210                           ; 1 bytes @ 0x1C
  2211                           
  2212  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2213                           ; 1 bytes @ 0x1C
  2214                           
  2215  003C                     ___xxtofl@exp:	
  2216                           ; 1 bytes @ 0x1C
  2217                           
  2218                           
  2219                           ; 1 bytes @ 0x1C
  2220  003C                     	ds	1
  2221  003D                     EEPROM_24C1025_Read_Byte@data:	
  2222  003D                     ___flmul@prod:	
  2223                           ; 1 bytes @ 0x1D
  2224                           
  2225  003D                     ___xxtofl@arg:	
  2226                           ; 4 bytes @ 0x1D
  2227                           
  2228                           
  2229                           ; 4 bytes @ 0x1D
  2230  003D                     	ds	1
  2231  003E                     EEPROM_24C1025_Read_Int@chip_add:	
  2232                           
  2233                           ; 1 bytes @ 0x1E
  2234  003E                     	ds	1
  2235  003F                     EEPROM_24C1025_Read_Int@data:	
  2236                           
  2237                           ; 2 bytes @ 0x1F
  2238  003F                     	ds	2
  2239  0041                     ?_ADC_Media_10bits:	
  2240  0041                     ?___fldiv:	
  2241                           ; 4 bytes @ 0x21
  2242                           
  2243  0041                     ___flmul@temp:	
  2244                           ; 4 bytes @ 0x21
  2245                           
  2246  0041                     ___fldiv@a:	
  2247                           ; 2 bytes @ 0x21
  2248                           
  2249                           
  2250                           ; 4 bytes @ 0x21
  2251  0041                     	ds	2
  2252  0043                     ?___fltol:	
  2253  0043                     ___fltol@f1:	
  2254                           ; 4 bytes @ 0x23
  2255                           
  2256                           
  2257                           ; 4 bytes @ 0x23
  2258  0043                     	ds	2
  2259  0045                     ??_ADC_Media_10bits:	
  2260  0045                     ___fldiv@b:	
  2261                           ; 1 bytes @ 0x25
  2262                           
  2263                           
  2264                           ; 4 bytes @ 0x25
  2265  0045                     	ds	1
  2266  0046                     ADC_Media_10bits@canal:	
  2267                           
  2268                           ; 1 bytes @ 0x26
  2269  0046                     	ds	1
  2270  0047                     ??___fltol:	
  2271  0047                     ADC_Media_10bits@value:	
  2272                           ; 1 bytes @ 0x27
  2273                           
  2274                           
  2275                           ; 2 bytes @ 0x27
  2276  0047                     	ds	2
  2277  0049                     ??___fldiv:	
  2278  0049                     ADC_Media_10bits@i:	
  2279                           ; 1 bytes @ 0x29
  2280                           
  2281                           
  2282                           ; 1 bytes @ 0x29
  2283  0049                     	ds	1
  2284  004A                     ?___fladd:	
  2285  004A                     ___fladd@b:	
  2286                           ; 4 bytes @ 0x2A
  2287                           
  2288                           
  2289                           ; 4 bytes @ 0x2A
  2290  004A                     	ds	2
  2291  004C                     ___fltol@sign1:	
  2292                           
  2293                           ; 1 bytes @ 0x2C
  2294  004C                     	ds	1
  2295  004D                     ___fltol@exp1:	
  2296                           
  2297                           ; 1 bytes @ 0x2D
  2298  004D                     	ds	1
  2299  004E                     ?_USART_put_int:	
  2300  004E                     ?_EEPROM_24C1025_Write_Int:	
  2301                           ; 1 bytes @ 0x2E
  2302                           
  2303  004E                     USART_put_int@value:	
  2304                           ; 1 bytes @ 0x2E
  2305                           
  2306  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2307                           ; 2 bytes @ 0x2E
  2308                           
  2309  004E                     ___fladd@a:	
  2310                           ; 4 bytes @ 0x2E
  2311                           
  2312  004E                     ___fldiv@rem:	
  2313                           ; 4 bytes @ 0x2E
  2314                           
  2315                           
  2316                           ; 4 bytes @ 0x2E
  2317  004E                     	ds	2
  2318  0050                     ??_USART_put_int:	
  2319                           
  2320                           ; 1 bytes @ 0x30
  2321  0050                     	ds	1
  2322  0051                     USART_put_int@dado:	
  2323                           
  2324                           ; 1 bytes @ 0x31
  2325  0051                     	ds	1
  2326  0052                     ?_PROCULUS_Control_Register_Write:	
  2327  0052                     ?_PROCULUS_VP_Write:	
  2328                           ; 1 bytes @ 0x32
  2329                           
  2330  0052                     ??___fladd:	
  2331                           ; 1 bytes @ 0x32
  2332                           
  2333  0052                     PROCULUS_Control_Register_Write@size:	
  2334                           ; 1 bytes @ 0x32
  2335                           
  2336  0052                     ___fldiv@sign:	
  2337                           ; 1 bytes @ 0x32
  2338                           
  2339  0052                     EEPROM_24C1025_Write_Int@data:	
  2340                           ; 1 bytes @ 0x32
  2341                           
  2342  0052                     PROCULUS_VP_Write@vp:	
  2343                           ; 2 bytes @ 0x32
  2344                           
  2345                           
  2346                           ; 2 bytes @ 0x32
  2347  0052                     	ds	1
  2348  0053                     ??_PROCULUS_Control_Register_Write:	
  2349  0053                     ___fldiv@new_exp:	
  2350                           ; 1 bytes @ 0x33
  2351                           
  2352                           
  2353                           ; 2 bytes @ 0x33
  2354  0053                     	ds	1
  2355  0054                     ??_EEPROM_24C1025_Write_Int:	
  2356  0054                     PROCULUS_Control_Register_Write@vetor:	
  2357                           ; 1 bytes @ 0x34
  2358                           
  2359  0054                     PROCULUS_VP_Write@vetor:	
  2360                           ; 1 bytes @ 0x34
  2361                           
  2362                           
  2363                           ; 2 bytes @ 0x34
  2364  0054                     	ds	1
  2365  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2366  0055                     PROCULUS_Control_Register_Write@i:	
  2367                           ; 1 bytes @ 0x35
  2368                           
  2369  0055                     ___fldiv@grs:	
  2370                           ; 1 bytes @ 0x35
  2371                           
  2372                           
  2373                           ; 4 bytes @ 0x35
  2374  0055                     	ds	1
  2375  0056                     ?_PROCULUS_Show_Screen:	
  2376  0056                     ?_PROCULUS_Buzzer:	
  2377                           ; 1 bytes @ 0x36
  2378                           
  2379  0056                     PROCULUS_VP_Write@size:	
  2380                           ; 1 bytes @ 0x36
  2381                           
  2382  0056                     EEPROM_24C1025_Write_Int@local:	
  2383                           ; 1 bytes @ 0x36
  2384                           
  2385  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2386                           ; 2 bytes @ 0x36
  2387                           
  2388  0056                     PROCULUS_Show_Screen@screen:	
  2389                           ; 2 bytes @ 0x36
  2390                           
  2391                           
  2392                           ; 2 bytes @ 0x36
  2393  0056                     	ds	1
  2394  0057                     ??_PROCULUS_VP_Write:	
  2395                           
  2396                           ; 1 bytes @ 0x37
  2397  0057                     	ds	1
  2398  0058                     ?_Save_Log:	
  2399  0058                     ??_PROCULUS_Show_Screen:	
  2400                           ; 1 bytes @ 0x38
  2401                           
  2402  0058                     ??_PROCULUS_Buzzer:	
  2403                           ; 1 bytes @ 0x38
  2404                           
  2405  0058                     ?_EEPROM_24C1025_Fill_All:	
  2406                           ; 1 bytes @ 0x38
  2407                           
  2408  0058                     EEPROM_24C1025_Fill_All@value:	
  2409                           ; 1 bytes @ 0x38
  2410                           
  2411  0058                     Save_Log@add_datalog:	
  2412                           ; 2 bytes @ 0x38
  2413                           
  2414                           
  2415                           ; 4 bytes @ 0x38
  2416  0058                     	ds	1
  2417  0059                     PROCULUS_VP_Write@i:	
  2418  0059                     ___fldiv@bexp:	
  2419                           ; 1 bytes @ 0x39
  2420                           
  2421  0059                     PROCULUS_Buzzer@vetor:	
  2422                           ; 1 bytes @ 0x39
  2423                           
  2424  0059                     PROCULUS_Show_Screen@vetor:	
  2425                           ; 2 bytes @ 0x39
  2426                           
  2427                           
  2428                           ; 3 bytes @ 0x39
  2429  0059                     	ds	1
  2430  005A                     ?_PROCULUS_VP_Write_String:	
  2431  005A                     ??_EEPROM_24C1025_Fill_All:	
  2432                           ; 1 bytes @ 0x3A
  2433                           
  2434  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2435                           ; 1 bytes @ 0x3A
  2436                           
  2437  005A                     ___fladd@signs:	
  2438                           ; 1 bytes @ 0x3A
  2439                           
  2440  005A                     ___fldiv@aexp:	
  2441                           ; 1 bytes @ 0x3A
  2442                           
  2443  005A                     PROCULUS_VP_Write_String@vp:	
  2444                           ; 1 bytes @ 0x3A
  2445                           
  2446                           
  2447                           ; 2 bytes @ 0x3A
  2448  005A                     	ds	1
  2449  005B                     ___fladd@aexp:	
  2450  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2451                           ; 1 bytes @ 0x3B
  2452                           
  2453                           
  2454                           ; 4 bytes @ 0x3B
  2455  005B                     	ds	1
  2456  005C                     ??_Save_Log:	
  2457  005C                     PROCULUS_VP_Write_String@text:	
  2458                           ; 1 bytes @ 0x3C
  2459                           
  2460  005C                     ___fladd@bexp:	
  2461                           ; 1 bytes @ 0x3C
  2462                           
  2463                           
  2464                           ; 1 bytes @ 0x3C
  2465  005C                     	ds	1
  2466  005D                     ??_PROCULUS_VP_Write_String:	
  2467  005D                     ___fladd@grs:	
  2468                           ; 1 bytes @ 0x3D
  2469                           
  2470                           
  2471                           ; 1 bytes @ 0x3D
  2472  005D                     	ds	1
  2473  005E                     ?___flsub:	
  2474  005E                     ___flsub@a:	
  2475                           ; 4 bytes @ 0x3E
  2476                           
  2477                           
  2478                           ; 4 bytes @ 0x3E
  2479  005E                     	ds	1
  2480  005F                     ??_Decodify_Command:	
  2481                           
  2482                           ; 1 bytes @ 0x3F
  2483  005F                     	ds	3
  2484  0062                     ___flsub@b:	
  2485                           
  2486                           ; 4 bytes @ 0x42
  2487  0062                     	ds	4
  2488  0066                     ??_MediaPlacaVaccum:	
  2489  0066                     ??___flsub:	
  2490                           ; 1 bytes @ 0x46
  2491                           
  2492                           
  2493                           ; 1 bytes @ 0x46
  2494  0066                     	ds	4
  2495  006A                     ??_main:	
  2496                           
  2497                           ; 1 bytes @ 0x4A
  2498  006A                     	ds	3
  2499  006D                     main@reset:	
  2500                           
  2501                           ; 2 bytes @ 0x4D
  2502  006D                     	ds	2
  2503                           
  2504                           	psect	maintext
  2505  1345                     __pmaintext:	
  2506 ;;
  2507 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2508 ;;
  2509 ;; *************** function _main *****************
  2510 ;; Defined at:
  2511 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  reset           2   77[BANK0 ] unsigned int 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : B00/0
  2522 ;;		On exit  : 300/100
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       2       0       0       0
  2527 ;;      Temps:          0       3       0       0       0
  2528 ;;      Totals:         0       5       0       0       0
  2529 ;;Total ram usage:        5 bytes
  2530 ;; Hardware stack levels required when called:    7
  2531 ;; This function calls:
  2532 ;;		_ADC_init
  2533 ;;		_Decodify_Command
  2534 ;;		_EEPROM_Read_Integer
  2535 ;;		_EEPROM_Write_Integer
  2536 ;;		_I2C_Master_Init
  2537 ;;		_MediaPlacaVaccum
  2538 ;;		_USART_init
  2539 ;;		_my_delay_ms_WDT
  2540 ;; This function is called by:
  2541 ;;		Startup code after reset
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _main
  2547  1345                     _main:	
  2548                           
  2549                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2553  1345  3002               	movlw	2
  2554  1346  1283               	bcf	3,5	;RP0=0, select bank0
  2555  1347  1303               	bcf	3,6	;RP1=0, select bank0
  2556  1348  00EC               	movwf	??_main+2
  2557  1349  3004               	movlw	4
  2558  134A  00EB               	movwf	??_main+1
  2559  134B  30B9               	movlw	185
  2560  134C  00EA               	movwf	??_main
  2561  134D                     u8177:	
  2562  134D  0BEA               	decfsz	??_main,f
  2563  134E  2B4D               	goto	u8177
  2564  134F  0BEB               	decfsz	??_main+1,f
  2565  1350  2B4D               	goto	u8177
  2566  1351  0BEC               	decfsz	??_main+2,f
  2567  1352  2B4D               	goto	u8177
  2568  1353  2B54               	nop2
  2569                           
  2570                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2571  1354  1683               	bsf	3,5	;RP0=1, select bank1
  2572  1355  1303               	bcf	3,6	;RP1=0, select bank1
  2573  1356  160F               	bsf	15,4	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2576  1357  168F               	bsf	15,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2579  1358  170F               	bsf	15,6	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2582  1359  1283               	bcf	3,5	;RP0=0, select bank0
  2583  135A  0185               	clrf	5	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2586  135B  0186               	clrf	6	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2589  135C  0187               	clrf	7	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2592  135D  0189               	clrf	9	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2595  135E  30EF               	movlw	239
  2596  135F  1683               	bsf	3,5	;RP0=1, select bank1
  2597  1360  0085               	movwf	5	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2600  1361  300F               	movlw	15
  2601  1362  0086               	movwf	6	;volatile
  2602                           
  2603                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2604  1363  30F0               	movlw	240
  2605  1364  0087               	movwf	7	;volatile
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2608  1365  30FF               	movlw	255
  2609  1366  0089               	movwf	9	;volatile
  2610                           
  2611                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2612  1367  3011               	movlw	17
  2613  1368  1703               	bsf	3,6	;RP1=1, select bank3
  2614  1369  0088               	movwf	8	;volatile
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2617  136A  0189               	clrf	9	;volatile
  2618                           
  2619                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2620  136B  1303               	bcf	3,6	;RP1=0, select bank1
  2621  136C  1381               	bcf	1,7	;volatile
  2622                           
  2623                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2624  136D  300F               	movlw	15
  2625  136E  0095               	movwf	21	;volatile
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2628  136F  1283               	bcf	3,5	;RP0=0, select bank0
  2629  1370  1786               	bsf	6,7	;volatile
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2632  1371  1706               	bsf	6,6	;volatile
  2633                           
  2634                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2635  1372  1686               	bsf	6,5	;volatile
  2636                           
  2637                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2638  1373  3000               	movlw	0
  2639  1374  00A3               	movwf	my_delay_ms_WDT@time+3
  2640  1375  3000               	movlw	0
  2641  1376  00A2               	movwf	my_delay_ms_WDT@time+2
  2642  1377  3003               	movlw	3
  2643  1378  00A1               	movwf	my_delay_ms_WDT@time+1
  2644  1379  30E8               	movlw	232
  2645  137A  00A0               	movwf	my_delay_ms_WDT@time
  2646  137B  160A  158A  2529  160A  118A  	fcall	_my_delay_ms_WDT
  2647                           
  2648                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2649  1380  1683               	bsf	3,5	;RP0=1, select bank1
  2650  1381  1281               	bcf	1,5	;volatile
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2653  1382  1581               	bsf	1,3	;volatile
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2656  1383  1401               	bsf	1,0	;volatile
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2659  1384  1481               	bsf	1,1	;volatile
  2660                           
  2661                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2662  1385  1501               	bsf	1,2	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2665  1386  128B               	bcf	11,5	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2668  1387  120B               	bcf	11,4	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2671  1388  178B               	bsf	11,7	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2674  1389  170B               	bsf	11,6	;volatile
  2675                           
  2676                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2677  138A  1283               	bcf	3,5	;RP0=0, select bank0
  2678  138B  1610               	bsf	16,4	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2681  138C  1690               	bsf	16,5	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2684  138D  1090               	bcf	16,1	;volatile
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2687  138E  1683               	bsf	3,5	;RP0=1, select bank1
  2688  138F  140C               	bsf	12,0	;volatile
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2691  1390  3001               	movlw	1
  2692  1391  1283               	bcf	3,5	;RP0=0, select bank0
  2693  1392  0090               	movwf	16	;volatile
  2694  1393  0064               	clrwdt	;# 
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2697  1394  160A  158A  2102  160A  118A  	fcall	_ADC_init
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2700  1399  3000               	movlw	0
  2701  139A  00B1               	movwf	I2C_Master_Init@c+3
  2702  139B  3001               	movlw	1
  2703  139C  00B0               	movwf	I2C_Master_Init@c+2
  2704  139D  3086               	movlw	134
  2705  139E  00AF               	movwf	I2C_Master_Init@c+1
  2706  139F  30A0               	movlw	160
  2707  13A0  00AE               	movwf	I2C_Master_Init@c
  2708  13A1  160A  158A  23F7  160A  118A  	fcall	_I2C_Master_Init
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2711  13A6  3000               	movlw	0
  2712  13A7  1283               	bcf	3,5	;RP0=0, select bank0
  2713  13A8  00A3               	movwf	USART_init@baudrate+3
  2714  13A9  3001               	movlw	1
  2715  13AA  00A2               	movwf	USART_init@baudrate+2
  2716  13AB  30C2               	movlw	194
  2717  13AC  00A1               	movwf	USART_init@baudrate+1
  2718  13AD  3000               	movlw	0
  2719  13AE  00A0               	movwf	USART_init@baudrate
  2720  13AF  160A  158A  2611  160A  118A  	fcall	_USART_init
  2721                           
  2722                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2723  13B4  3010               	movlw	16
  2724  13B5  160A  158A  2376  160A  118A  	fcall	_EEPROM_Read_Integer
  2725  13BA  0824               	movf	?_EEPROM_Read_Integer+1,w
  2726  13BB  00EE               	movwf	main@reset+1
  2727  13BC  0823               	movf	?_EEPROM_Read_Integer,w
  2728  13BD  00ED               	movwf	main@reset
  2729                           
  2730                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2731  13BE  0A6D               	incf	main@reset,w
  2732  13BF  1D03               	skipz
  2733  13C0  2BCD               	goto	l7614
  2734  13C1  0A6E               	incf	main@reset+1,w
  2735  13C2  1D03               	btfss	3,2
  2736  13C3  2BCD               	goto	l7614
  2737  13C4  3000               	movlw	0
  2738  13C5  00A5               	movwf	EEPROM_Write_Integer@dado
  2739  13C6  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2740  13C7  3010               	movlw	16
  2741  13C8  160A  158A  2426  160A  118A  	fcall	_EEPROM_Write_Integer
  2742  13CD                     l7614:	
  2743                           
  2744                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2745  13CD  3001               	movlw	1
  2746  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  2747  13CF  1303               	bcf	3,6	;RP1=0, select bank0
  2748  13D0  07ED               	addwf	main@reset,f
  2749  13D1  1803               	skipnc
  2750  13D2  0AEE               	incf	main@reset+1,f
  2751  13D3  3000               	movlw	0
  2752  13D4  07EE               	addwf	main@reset+1,f
  2753                           
  2754                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2755  13D5  086E               	movf	main@reset+1,w
  2756  13D6  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2757  13D7  086D               	movf	main@reset,w
  2758  13D8  00A5               	movwf	EEPROM_Write_Integer@dado
  2759  13D9  3010               	movlw	16
  2760  13DA  160A  158A  2426  160A  118A  	fcall	_EEPROM_Write_Integer
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2763  13DF  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2764  13E0  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2765                           
  2766                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2767  13E1  1683               	bsf	3,5	;RP0=1, select bank1
  2768  13E2  1303               	bcf	3,6	;RP1=0, select bank1
  2769  13E3  01DF               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2770  13E4  01E0               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2771                           
  2772                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2773  13E5  01FA               	clrf	_Delay_Led_Memory	;volatile
  2774  13E6  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2777  13E7  01E7               	clrf	_segundo^(0+128)	;volatile
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2780  13E8  01E6               	clrf	_hora^(0+128)	;volatile
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2783  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  2784  13EA  1007               	bcf	7,0	;volatile
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2787  13EB  1087               	bcf	7,1	;volatile
  2788                           
  2789                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2790  13EC  1105               	bcf	5,2	;volatile
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2793  13ED  1185               	bcf	5,3	;volatile
  2794                           
  2795                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2796  13EE  0906               	comf	6,w	;volatile
  2797  13EF  390F               	andlw	15
  2798  13F0  00EA               	movwf	??_main
  2799  13F1  086A               	movf	??_main,w
  2800  13F2  1683               	bsf	3,5	;RP0=1, select bank1
  2801  13F3  00E3               	movwf	_Board_Number^(0+128)
  2802                           
  2803                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2804  13F4  01E4               	clrf	_canal^(0+128)
  2805  13F5  0AE4               	incf	_canal^(0+128),f
  2806                           
  2807                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2808  13F6  1168               	bcf	_statuspower^(0+128),2
  2809  13F7                     l7640:	
  2810                           
  2811                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2812  13F7  17E9               	bsf	_generic_status^(0+128),7
  2813                           
  2814                           ;SlaveLiofilizadorVer1.c: 275:          if(++canal==2) canal=0;
  2815  13F8  3001               	movlw	1
  2816  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  2817  13FA  00EA               	movwf	??_main
  2818  13FB  086A               	movf	??_main,w
  2819  13FC  1683               	bsf	3,5	;RP0=1, select bank1
  2820  13FD  07E4               	addwf	_canal^(0+128),f
  2821  13FE  3002               	movlw	2
  2822  13FF  0664               	xorwf	_canal^(0+128),w
  2823  1400  1903               	btfsc	3,2
  2824  1401  01E4               	clrf	_canal^(0+128)
  2825                           
  2826                           ;SlaveLiofilizadorVer1.c: 276:          MediaPlacaVaccum(canal);
  2827  1402  0864               	movf	_canal^(0+128),w
  2828  1403  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2829                           
  2830                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2831  1408  1683               	bsf	3,5	;RP0=1, select bank1
  2832  1409  1C69               	btfss	_generic_status^(0+128),0
  2833  140A  2BF7               	goto	l7640
  2834                           
  2835                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2836  140B  1703               	bsf	3,6	;RP1=1, select bank3
  2837  140C  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2838  140D  1303               	bcf	3,6	;RP1=0, select bank1
  2839  140E  00DC               	movwf	(_header+1)^(0+128)
  2840  140F  1703               	bsf	3,6	;RP1=1, select bank3
  2841  1410  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2842  1411  1303               	bcf	3,6	;RP1=0, select bank1
  2843  1412  00DB               	movwf	_header^(0+128)
  2844                           
  2845                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2846  1413  30BB               	movlw	187
  2847  1414  065B               	xorwf	_header^(0+128),w
  2848  1415  30AA               	movlw	170
  2849  1416  1903               	skipnz
  2850  1417  065C               	xorwf	(_header+1)^(0+128),w
  2851  1418  1D03               	btfss	3,2
  2852  1419  2BF7               	goto	l7640
  2853                           
  2854                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2855  141A  1703               	bsf	3,6	;RP1=1, select bank3
  2856  141B  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2857  141C  1283               	bcf	3,5	;RP0=0, select bank0
  2858  141D  1303               	bcf	3,6	;RP1=0, select bank0
  2859  141E  00EA               	movwf	??_main
  2860  141F  086A               	movf	??_main,w
  2861  1420  1683               	bsf	3,5	;RP0=1, select bank1
  2862  1421  00E2               	movwf	_destino^(0+128)
  2863                           
  2864                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2865  1422  0862               	movf	_destino^(0+128),w
  2866  1423  0663               	xorwf	_Board_Number^(0+128),w
  2867  1424  1D03               	btfss	3,2
  2868  1425  0A62               	incf	_destino^(0+128),w
  2869  1426  1D03               	btfss	3,2
  2870  1427  2BF7               	goto	l7640
  2871                           
  2872                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2873  1428  3014               	movlw	20
  2874  1429  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2875  142A  3000               	movlw	0
  2876  142B  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2877                           
  2878                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2879  142C  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2880                           
  2881                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2882  1431  1683               	bsf	3,5	;RP0=1, select bank1
  2883  1432  1069               	bcf	_generic_status^(0+128),0
  2884                           
  2885                           ;SlaveLiofilizadorVer1.c: 297:             }
  2886  1433  2BF7               	goto	l7640
  2887  1434                     __end_of_main:	
  2888                           
  2889                           	psect	text1
  2890  1E11                     __ptext1:	
  2891 ;; *************** function _USART_init *****************
  2892 ;; Defined at:
  2893 ;;		line 18 in file "usart.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  i               1    6[BANK0 ] unsigned char 
  2898 ;;  erro            1    0        unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 300/0
  2905 ;;		On exit  : 300/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       4       0       0       0
  2909 ;;      Locals:         0       2       0       0       0
  2910 ;;      Temps:          0       1       0       0       0
  2911 ;;      Totals:         0       7       0       0       0
  2912 ;;Total ram usage:        7 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _USART_init
  2924  1E11                     _USART_init:	
  2925                           
  2926                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2930  1E11  304B               	movlw	75
  2931  1E12  0621               	xorwf	USART_init@baudrate+1,w
  2932  1E13  0420               	iorwf	USART_init@baudrate,w
  2933  1E14  0422               	iorwf	USART_init@baudrate+2,w
  2934  1E15  0423               	iorwf	USART_init@baudrate+3,w
  2935  1E16  1D03               	btfss	3,2
  2936  1E17  2E22               	goto	l7210
  2937                           
  2938                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2939  1E18  1798               	bsf	24,7	;volatile
  2940                           
  2941                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2942  1E19  1618               	bsf	24,4	;volatile
  2943                           
  2944                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2945  1E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2946  1E1B  1518               	bsf	24,2	;volatile
  2947                           
  2948                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2949  1E1C  1218               	bcf	24,4	;volatile
  2950                           
  2951                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2952  1E1D  1318               	bcf	24,6	;volatile
  2953                           
  2954                           ;usart.c: 32:           SPBRG =12;
  2955  1E1E  300C               	movlw	12
  2956  1E1F  0099               	movwf	25	;volatile
  2957                           
  2958                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2959  1E20  170B               	bsf	11,6	;volatile
  2960  1E21  2E3B               	goto	L1
  2961  1E22                     l7210:	
  2962                           ;usart.c: 35:           }
  2963                           
  2964                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2965                           
  2966  1E22  30C2               	movlw	194
  2967  1E23  0621               	xorwf	USART_init@baudrate+1,w
  2968  1E24  1D03               	skipz
  2969  1E25  2E3C               	goto	l7230
  2970  1E26  0322               	decf	USART_init@baudrate+2,w
  2971  1E27  0420               	iorwf	USART_init@baudrate,w
  2972  1E28  0423               	iorwf	USART_init@baudrate+3,w
  2973  1E29  1D03               	btfss	3,2
  2974  1E2A  2E3C               	goto	l7230
  2975                           
  2976                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2977  1E2B  3010               	movlw	16
  2978  1E2C  1683               	bsf	3,5	;RP0=1, select bank1
  2979  1E2D  0099               	movwf	25	;volatile
  2980                           
  2981                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2982  1E2E  1703               	bsf	3,6	;RP1=1, select bank3
  2983  1E2F  1587               	bsf	7,3	;volatile
  2984                           
  2985                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2986  1E30  1303               	bcf	3,6	;RP1=0, select bank1
  2987  1E31  1518               	bsf	24,2	;volatile
  2988                           
  2989                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2990  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  2991  1E33  1798               	bsf	24,7	;volatile
  2992                           
  2993                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2994  1E34  1683               	bsf	3,5	;RP0=1, select bank1
  2995  1E35  1218               	bcf	24,4	;volatile
  2996                           
  2997                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2998  1E36  1318               	bcf	24,6	;volatile
  2999                           
  3000                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3001  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  3002  1E38  1618               	bsf	24,4	;volatile
  3003                           
  3004                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3005  1E39  170B               	bsf	11,6	;volatile
  3006                           
  3007                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3008  1E3A  1683               	bsf	3,5	;RP0=1, select bank1
  3009  1E3B                     L1:	
  3010  1E3B  168C               	bsf	12,5	;volatile
  3011  1E3C                     l7230:	
  3012                           
  3013                           ;usart.c: 68:      TRISC6= 1;
  3014  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  3015  1E3D  1707               	bsf	7,6	;volatile
  3016                           
  3017                           ;usart.c: 69:      TRISC7= 1;
  3018  1E3E  1787               	bsf	7,7	;volatile
  3019                           
  3020                           ;usart.c: 71:      CREN=0;
  3021  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  3022  1E40  1218               	bcf	24,4	;volatile
  3023                           
  3024                           ;usart.c: 72:      CREN=1;
  3025  1E41  1618               	bsf	24,4	;volatile
  3026                           
  3027                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3028  1E42  01A6               	clrf	USART_init@i
  3029  1E43                     l7244:	
  3030  1E43  081A               	movf	26,w	;volatile
  3031  1E44  3001               	movlw	1
  3032  1E45  00A4               	movwf	??_USART_init
  3033  1E46  0824               	movf	??_USART_init,w
  3034  1E47  07A6               	addwf	USART_init@i,f
  3035  1E48  300F               	movlw	15
  3036  1E49  0226               	subwf	USART_init@i,w
  3037  1E4A  1803               	btfsc	3,0
  3038  1E4B  0008               	return
  3039  1E4C  2E43               	goto	l7244
  3040  1E4D                     __end_of_USART_init:	
  3041                           
  3042                           	psect	text2
  3043  0D69                     __ptext2:	
  3044 ;; *************** function _MediaPlacaVaccum *****************
  3045 ;; Defined at:
  3046 ;;		line 789 in file "SlaveLiofilizadorVer1.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  canal           1    wreg     unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  canal           1    4[BANK1 ] unsigned char 
  3051 ;;  Temp            4    5[BANK1 ] float 
  3052 ;;  Valor           4    0[BANK1 ] float 
  3053 ;;  i               2    9[BANK1 ] unsigned int 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 300/100
  3060 ;;		On exit  : 200/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         0       0       0       0       0
  3064 ;;      Locals:         0       0      11       0       0
  3065 ;;      Temps:          0       4       0       0       0
  3066 ;;      Totals:         0       4      11       0       0
  3067 ;;Total ram usage:       15 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    3
  3070 ;; This function calls:
  3071 ;;		_ADC_Max_10Bits
  3072 ;;		_ADC_Media_10bits
  3073 ;;		_Package_Usart_is_for_me
  3074 ;;		___fladd
  3075 ;;		___fldiv
  3076 ;;		___flge
  3077 ;;		___flmul
  3078 ;;		___flsub
  3079 ;;		___xxtofl
  3080 ;;		_my_delay_ms
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function _MediaPlacaVaccum
  3088  0D69                     _MediaPlacaVaccum:	
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3092                           ;MediaPlacaVaccum@canal stored from wreg
  3093  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3094                           
  3095                           ;SlaveLiofilizadorVer1.c: 790:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 791:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 795:      if(canal==0)
  3096  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3097  0D6B  1D03               	btfss	3,2
  3098  0D6C  2F0F               	goto	l432
  3099                           
  3100                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=1;
  3101  0D6D  161F               	bsf	31,4	;volatile
  3102                           
  3103                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=1;
  3104  0D6E  169F               	bsf	31,5	;volatile
  3105                           
  3106                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3107  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3108  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3110  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3111  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3112  0D74  081F               	movf	31,w	;volatile
  3113  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3114  0D76  39C3               	andlw	-61
  3115  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3116  0D78  009F               	movwf	31	;volatile
  3117                           
  3118                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3119  0D79  3000               	movlw	0
  3120  0D7A  00A3               	movwf	my_delay_ms@time+3
  3121  0D7B  3000               	movlw	0
  3122  0D7C  00A2               	movwf	my_delay_ms@time+2
  3123  0D7D  3000               	movlw	0
  3124  0D7E  00A1               	movwf	my_delay_ms@time+1
  3125  0D7F  3001               	movlw	1
  3126  0D80  00A0               	movwf	my_delay_ms@time
  3127  0D81  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3128                           
  3129                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3130  0D86  3000               	movlw	0
  3131  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3133  0D89  3000               	movlw	0
  3134  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3135  0D8B  3000               	movlw	0
  3136  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3137  0D8D  3000               	movlw	0
  3138  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3139                           
  3140                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3141  0D8F  3001               	movlw	1
  3142  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3143  0D91  3000               	movlw	0
  3144  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3145  0D93                     l7266:	
  3146                           
  3147                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 805:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3148  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3149  0D94  160A  158A  268B  120A  158A  	fcall	_ADC_Media_10bits
  3150  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3151  0D9A  00CD               	movwf	___fladd@b+3
  3152  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3153  0D9C  00CC               	movwf	___fladd@b+2
  3154  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3155  0D9E  00CB               	movwf	___fladd@b+1
  3156  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3157  0DA0  00CA               	movwf	___fladd@b
  3158  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3159  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3160  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0DA4  00D1               	movwf	___fladd@a+3
  3162  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3163  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3164  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0DA8  00D0               	movwf	___fladd@a+2
  3166  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3168  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0DAC  00CF               	movwf	___fladd@a+1
  3170  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3172  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0DB0  00CE               	movwf	___fladd@a
  3174  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3175  0DB6  084D               	movf	?___fladd+3,w
  3176  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3178  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0DBA  084C               	movf	?___fladd+2,w
  3180  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3181  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3182  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0DBE  084B               	movf	?___fladd+1,w
  3184  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3186  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0DC2  084A               	movf	?___fladd,w
  3188  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3190                           
  3191                           ;SlaveLiofilizadorVer1.c: 806:            if(Package_Usart_is_for_me()==1) break;
  3192  0DC5  160A  158A  219B  120A  158A  	fcall	_Package_Usart_is_for_me
  3193  0DCA  3A01               	xorlw	1
  3194  0DCB  1903               	btfsc	3,2
  3195  0DCC  2DDB               	goto	l7274
  3196                           
  3197                           ;SlaveLiofilizadorVer1.c: 807:            }
  3198  0DCD  3001               	movlw	1
  3199  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3201  0DD0  1803               	skipnc
  3202  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3203  0DD2  3000               	movlw	0
  3204  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3205  0DD4  3000               	movlw	0
  3206  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3207  0DD6  300F               	movlw	15
  3208  0DD7  1903               	skipnz
  3209  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3210  0DD9  1C03               	skipc
  3211  0DDA  2D93               	goto	l7266
  3212  0DDB                     l7274:	
  3213                           
  3214                           ;SlaveLiofilizadorVer1.c: 808:        if(i<10)
  3215  0DDB  3000               	movlw	0
  3216  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3218  0DDE  300A               	movlw	10
  3219  0DDF  1903               	skipnz
  3220  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3221  0DE1  1C03               	btfss	3,0
  3222  0DE2  0008               	return
  3223                           
  3224                           ;SlaveLiofilizadorVer1.c: 814:        if(i==15)
  3225  0DE3  300F               	movlw	15
  3226  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3227  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3228  0DE6  1D03               	btfss	3,2
  3229  0DE7  2DF2               	goto	l7282
  3230                           
  3231                           ;SlaveLiofilizadorVer1.c: 815:          Temp/=(i-1);
  3232  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3233  0DE9  3EFF               	addlw	255
  3234  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0DEB  00B3               	movwf	___xxtofl@val
  3236  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3238  0DEE  1803               	skipnc
  3239  0DEF  3E01               	addlw	1
  3240  0DF0  3EFF               	addlw	255
  3241  0DF1  2DF7               	goto	L2
  3242  0DF2                     l7282:	
  3243                           
  3244                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i);
  3245  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3246  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0DF4  00B3               	movwf	___xxtofl@val
  3248  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3250  0DF7                     L2:	
  3251  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0DF8  00B4               	movwf	___xxtofl@val+1
  3253  0DF9  01B5               	clrf	___xxtofl@val+2
  3254  0DFA  01B6               	clrf	___xxtofl@val+3
  3255  0DFB  3000               	movlw	0
  3256  0DFC  160A  118A  21B7  120A  158A  	fcall	___xxtofl
  3257  0E01  0836               	movf	?___xxtofl+3,w
  3258  0E02  00C4               	movwf	___fldiv@a+3
  3259  0E03  0835               	movf	?___xxtofl+2,w
  3260  0E04  00C3               	movwf	___fldiv@a+2
  3261  0E05  0834               	movf	?___xxtofl+1,w
  3262  0E06  00C2               	movwf	___fldiv@a+1
  3263  0E07  0833               	movf	?___xxtofl,w
  3264  0E08  00C1               	movwf	___fldiv@a
  3265  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3267  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0E0C  00C8               	movwf	___fldiv@b+3
  3269  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3271  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0E10  00C7               	movwf	___fldiv@b+2
  3273  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3275  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0E14  00C6               	movwf	___fldiv@b+1
  3277  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3279  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0E18  00C5               	movwf	___fldiv@b
  3281  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3282  0E1E  0844               	movf	?___fldiv+3,w
  3283  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3285  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0E22  0843               	movf	?___fldiv+2,w
  3287  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3289  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0E26  0842               	movf	?___fldiv+1,w
  3291  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3293  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0E2A  0841               	movf	?___fldiv,w
  3295  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3297                           
  3298                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0 =1023.0-Temp;
  3299  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3300  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0E2F  00E1               	movwf	___flsub@a+3
  3302  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3304  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E33  00E0               	movwf	___flsub@a+2
  3306  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3308  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E37  00DF               	movwf	___flsub@a+1
  3310  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3312  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0E3B  00DE               	movwf	___flsub@a
  3314  0E3C  3044               	movlw	68
  3315  0E3D  00E5               	movwf	___flsub@b+3
  3316  0E3E  307F               	movlw	127
  3317  0E3F  00E4               	movwf	___flsub@b+2
  3318  0E40  30C0               	movlw	192
  3319  0E41  00E3               	movwf	___flsub@b+1
  3320  0E42  3000               	movlw	0
  3321  0E43  00E2               	movwf	___flsub@b
  3322  0E44  160A  158A  221F  120A  158A  	fcall	___flsub
  3323  0E49  0861               	movf	?___flsub+3,w
  3324  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0E4B  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3326  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0E4D  0860               	movf	?___flsub+2,w
  3328  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0E4F  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3330  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0E51  085F               	movf	?___flsub+1,w
  3332  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0E53  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3334  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0E55  085E               	movf	?___flsub,w
  3336  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0E57  00D1               	movwf	_Vaccum0^(0+128)
  3338                           
  3339                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=Vaccum0;
  3340  0E58  0854               	movf	(_Vaccum0+3)^(0+128),w
  3341  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0E5A  00AC               	movwf	___flmul@b+3
  3343  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0E5C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3345  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0E5E  00AB               	movwf	___flmul@b+2
  3347  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0E60  0852               	movf	(_Vaccum0+1)^(0+128),w
  3349  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0E62  00AA               	movwf	___flmul@b+1
  3351  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0E64  0851               	movf	_Vaccum0^(0+128),w
  3353  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0E66  00A9               	movwf	___flmul@b
  3355  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0E68  0854               	movf	(_Vaccum0+3)^(0+128),w
  3357  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0E6A  00B0               	movwf	___flmul@a+3
  3359  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0E6C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3361  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0E6E  00AF               	movwf	___flmul@a+2
  3363  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3364  0E70  0852               	movf	(_Vaccum0+1)^(0+128),w
  3365  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0E72  00AE               	movwf	___flmul@a+1
  3367  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0E74  0851               	movf	_Vaccum0^(0+128),w
  3369  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0E76  00AD               	movwf	___flmul@a
  3371  0E77  120A  118A  24BB  120A  158A  	fcall	___flmul
  3372  0E7C  082C               	movf	?___flmul+3,w
  3373  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0E7E  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3375  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0E80  082B               	movf	?___flmul+2,w
  3377  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0E82  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3379  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0E84  082A               	movf	?___flmul+1,w
  3381  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0E86  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3383  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0E88  0829               	movf	?___flmul,w
  3385  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0E8A  00D1               	movwf	_Vaccum0^(0+128)
  3387                           
  3388                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0*=0.00222;
  3389  0E8B  303B               	movlw	59
  3390  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E8D  00AC               	movwf	___flmul@b+3
  3392  0E8E  3011               	movlw	17
  3393  0E8F  00AB               	movwf	___flmul@b+2
  3394  0E90  307D               	movlw	125
  3395  0E91  00AA               	movwf	___flmul@b+1
  3396  0E92  306B               	movlw	107
  3397  0E93  00A9               	movwf	___flmul@b
  3398  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0E95  0854               	movf	(_Vaccum0+3)^(0+128),w
  3400  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0E97  00B0               	movwf	___flmul@a+3
  3402  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0E99  0853               	movf	(_Vaccum0+2)^(0+128),w
  3404  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0E9B  00AF               	movwf	___flmul@a+2
  3406  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0E9D  0852               	movf	(_Vaccum0+1)^(0+128),w
  3408  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0E9F  00AE               	movwf	___flmul@a+1
  3410  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0EA1  0851               	movf	_Vaccum0^(0+128),w
  3412  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0EA3  00AD               	movwf	___flmul@a
  3414  0EA4  120A  118A  24BB  120A  158A  	fcall	___flmul
  3415  0EA9  082C               	movf	?___flmul+3,w
  3416  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3417  0EAB  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3418  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0EAD  082B               	movf	?___flmul+2,w
  3420  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3421  0EAF  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3422  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0EB1  082A               	movf	?___flmul+1,w
  3424  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0EB3  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3426  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0EB5  0829               	movf	?___flmul,w
  3428  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3429  0EB7  00D1               	movwf	_Vaccum0^(0+128)
  3430                           
  3431                           ;SlaveLiofilizadorVer1.c: 822:        Vaccum0+=150;
  3432  0EB8  3043               	movlw	67
  3433  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0EBA  00CD               	movwf	___fladd@b+3
  3435  0EBB  3016               	movlw	22
  3436  0EBC  00CC               	movwf	___fladd@b+2
  3437  0EBD  3000               	movlw	0
  3438  0EBE  00CB               	movwf	___fladd@b+1
  3439  0EBF  3000               	movlw	0
  3440  0EC0  00CA               	movwf	___fladd@b
  3441  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3442  0EC2  0854               	movf	(_Vaccum0+3)^(0+128),w
  3443  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0EC4  00D1               	movwf	___fladd@a+3
  3445  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0EC6  0853               	movf	(_Vaccum0+2)^(0+128),w
  3447  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0EC8  00D0               	movwf	___fladd@a+2
  3449  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3450  0ECA  0852               	movf	(_Vaccum0+1)^(0+128),w
  3451  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0ECC  00CF               	movwf	___fladd@a+1
  3453  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0ECE  0851               	movf	_Vaccum0^(0+128),w
  3455  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0ED0  00CE               	movwf	___fladd@a
  3457  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3458  0ED6  084D               	movf	?___fladd+3,w
  3459  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0ED8  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3461  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0EDA  084C               	movf	?___fladd+2,w
  3463  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0EDC  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3465  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0EDE  084B               	movf	?___fladd+1,w
  3467  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0EE0  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3469  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0EE2  084A               	movf	?___fladd,w
  3471  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3472  0EE4  00D1               	movwf	_Vaccum0^(0+128)
  3473                           
  3474                           ;SlaveLiofilizadorVer1.c: 824:        if(Vaccum0>2000)Vaccum0=2000;
  3475  0EE5  3044               	movlw	68
  3476  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0EE7  00A3               	movwf	___flge@ff1+3
  3478  0EE8  30FA               	movlw	250
  3479  0EE9  00A2               	movwf	___flge@ff1+2
  3480  0EEA  3000               	movlw	0
  3481  0EEB  00A1               	movwf	___flge@ff1+1
  3482  0EEC  3000               	movlw	0
  3483  0EED  00A0               	movwf	___flge@ff1
  3484  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0EEF  0854               	movf	(_Vaccum0+3)^(0+128),w
  3486  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0EF1  00A7               	movwf	___flge@ff2+3
  3488  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3489  0EF3  0853               	movf	(_Vaccum0+2)^(0+128),w
  3490  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0EF5  00A6               	movwf	___flge@ff2+2
  3492  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0EF7  0852               	movf	(_Vaccum0+1)^(0+128),w
  3494  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0EF9  00A5               	movwf	___flge@ff2+1
  3496  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0EFB  0851               	movf	_Vaccum0^(0+128),w
  3498  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0EFD  00A4               	movwf	___flge@ff2
  3500  0EFE  160A  118A  2124  120A  158A  	fcall	___flge
  3501  0F03  1803               	btfsc	3,0
  3502  0F04  0008               	return
  3503  0F05  3044               	movlw	68
  3504  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0F07  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3506  0F08  30FA               	movlw	250
  3507  0F09  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3508  0F0A  3000               	movlw	0
  3509  0F0B  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3510  0F0C  3000               	movlw	0
  3511  0F0D  00D1               	movwf	_Vaccum0^(0+128)
  3512  0F0E  0008               	return
  3513  0F0F                     l432:	
  3514                           ;SlaveLiofilizadorVer1.c: 827:      else
  3515                           
  3516                           
  3517                           ;SlaveLiofilizadorVer1.c: 828:        {;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.
      +                          VCFG0=0;
  3518  0F0F  121F               	bcf	31,4	;volatile
  3519                           
  3520                           ;SlaveLiofilizadorVer1.c: 830:        ADCON1bits.VCFG1=0;
  3521  0F10  129F               	bcf	31,5	;volatile
  3522                           
  3523                           ;SlaveLiofilizadorVer1.c: 831:        ADCON0bits.CHS=canal;
  3524  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3525  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3527  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3528  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3529  0F16  081F               	movf	31,w	;volatile
  3530  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3531  0F18  39C3               	andlw	-61
  3532  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3533  0F1A  009F               	movwf	31	;volatile
  3534                           
  3535                           ;SlaveLiofilizadorVer1.c: 832:        my_delay_ms(1);
  3536  0F1B  3000               	movlw	0
  3537  0F1C  00A3               	movwf	my_delay_ms@time+3
  3538  0F1D  3000               	movlw	0
  3539  0F1E  00A2               	movwf	my_delay_ms@time+2
  3540  0F1F  3000               	movlw	0
  3541  0F20  00A1               	movwf	my_delay_ms@time+1
  3542  0F21  3001               	movlw	1
  3543  0F22  00A0               	movwf	my_delay_ms@time
  3544  0F23  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3545                           
  3546                           ;SlaveLiofilizadorVer1.c: 833:        Temp=0;
  3547  0F28  3000               	movlw	0
  3548  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3550  0F2B  3000               	movlw	0
  3551  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3552  0F2D  3000               	movlw	0
  3553  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3554  0F2F  3000               	movlw	0
  3555  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3556                           
  3557                           ;SlaveLiofilizadorVer1.c: 835:        for(i=1;i<15;i++)
  3558  0F31  3001               	movlw	1
  3559  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3560  0F33  3000               	movlw	0
  3561  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3562  0F35                     l7300:	
  3563                           
  3564                           ;SlaveLiofilizadorVer1.c: 836:            {;SlaveLiofilizadorVer1.c: 837:            Val
      +                          or=ADC_Max_10Bits(canal);
  3565  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3566  0F36  160A  158A  264D  120A  158A  	fcall	_ADC_Max_10Bits
  3567  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3568  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3569  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3570  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3571  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3572  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3573  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3574  0F42  00B6               	movwf	___xxtofl@val+3
  3575  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3576  0F44  00B5               	movwf	___xxtofl@val+2
  3577  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3578  0F46  00B4               	movwf	___xxtofl@val+1
  3579  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3580  0F48  00B3               	movwf	___xxtofl@val
  3581  0F49  3000               	movlw	0
  3582  0F4A  160A  118A  21B7  120A  158A  	fcall	___xxtofl
  3583  0F4F  0836               	movf	?___xxtofl+3,w
  3584  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3585  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3586  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0F53  0835               	movf	?___xxtofl+2,w
  3588  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3590  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0F57  0834               	movf	?___xxtofl+1,w
  3592  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3594  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0F5B  0833               	movf	?___xxtofl,w
  3596  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3598                           
  3599                           ;SlaveLiofilizadorVer1.c: 838:            if(Valor>Temp) Temp=Valor;
  3600  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3601  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0F60  00A3               	movwf	___flge@ff1+3
  3603  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3605  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0F64  00A2               	movwf	___flge@ff1+2
  3607  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3609  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0F68  00A1               	movwf	___flge@ff1+1
  3611  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3613  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0F6C  00A0               	movwf	___flge@ff1
  3615  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3617  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0F70  00A7               	movwf	___flge@ff2+3
  3619  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3620  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3621  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0F74  00A6               	movwf	___flge@ff2+2
  3623  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3624  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3625  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0F78  00A5               	movwf	___flge@ff2+1
  3627  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3629  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0F7C  00A4               	movwf	___flge@ff2
  3631  0F7D  160A  118A  2124  120A  158A  	fcall	___flge
  3632  0F82  1803               	btfsc	3,0
  3633  0F83  2F8D               	goto	l7306
  3634  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3636  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3637  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3638  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3639  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3640  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3641  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3642  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3643  0F8D                     l7306:	
  3644                           
  3645                           ;SlaveLiofilizadorVer1.c: 839:            if(Package_Usart_is_for_me()==1) break;
  3646  0F8D  160A  158A  219B  120A  158A  	fcall	_Package_Usart_is_for_me
  3647  0F92  3A01               	xorlw	1
  3648  0F93  1903               	btfsc	3,2
  3649  0F94  2FA3               	goto	l7312
  3650                           
  3651                           ;SlaveLiofilizadorVer1.c: 840:            }
  3652  0F95  3001               	movlw	1
  3653  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3655  0F98  1803               	skipnc
  3656  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3657  0F9A  3000               	movlw	0
  3658  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3659  0F9C  3000               	movlw	0
  3660  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3661  0F9E  300F               	movlw	15
  3662  0F9F  1903               	skipnz
  3663  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3664  0FA1  1C03               	skipc
  3665  0FA2  2F35               	goto	l7300
  3666  0FA3                     l7312:	
  3667                           
  3668                           ;SlaveLiofilizadorVer1.c: 841:         if(i<10)
  3669  0FA3  3000               	movlw	0
  3670  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3672  0FA6  300A               	movlw	10
  3673  0FA7  1903               	skipnz
  3674  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3675  0FA9  1C03               	btfss	3,0
  3676  0FAA  0008               	return
  3677                           
  3678                           ;SlaveLiofilizadorVer1.c: 846:         Tensao1 =Temp*0.318296;
  3679  0FAB  303E               	movlw	62
  3680  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0FAD  00AC               	movwf	___flmul@b+3
  3682  0FAE  30A2               	movlw	162
  3683  0FAF  00AB               	movwf	___flmul@b+2
  3684  0FB0  30F7               	movlw	247
  3685  0FB1  00AA               	movwf	___flmul@b+1
  3686  0FB2  30B1               	movlw	177
  3687  0FB3  00A9               	movwf	___flmul@b
  3688  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3689  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3690  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0FB7  00B0               	movwf	___flmul@a+3
  3692  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3694  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0FBB  00AF               	movwf	___flmul@a+2
  3696  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3698  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0FBF  00AE               	movwf	___flmul@a+1
  3700  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3701  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3702  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0FC3  00AD               	movwf	___flmul@a
  3704  0FC4  120A  118A  24BB  120A  158A  	fcall	___flmul
  3705  0FC9  082C               	movf	?___flmul+3,w
  3706  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0FCB  00D0               	movwf	(_Tensao1+3)^(0+128)
  3708  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0FCD  082B               	movf	?___flmul+2,w
  3710  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3711  0FCF  00CF               	movwf	(_Tensao1+2)^(0+128)
  3712  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0FD1  082A               	movf	?___flmul+1,w
  3714  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0FD3  00CE               	movwf	(_Tensao1+1)^(0+128)
  3716  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0FD5  0829               	movf	?___flmul,w
  3718  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0FD7  00CD               	movwf	_Tensao1^(0+128)
  3720                           
  3721                           ;SlaveLiofilizadorVer1.c: 847:         if(Tensao1<15) Tensao1=0;
  3722  0FD8  0850               	movf	(_Tensao1+3)^(0+128),w
  3723  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0FDA  00A3               	movwf	___flge@ff1+3
  3725  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0FDC  084F               	movf	(_Tensao1+2)^(0+128),w
  3727  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FDE  00A2               	movwf	___flge@ff1+2
  3729  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0FE0  084E               	movf	(_Tensao1+1)^(0+128),w
  3731  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0FE2  00A1               	movwf	___flge@ff1+1
  3733  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0FE4  084D               	movf	_Tensao1^(0+128),w
  3735  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0FE6  00A0               	movwf	___flge@ff1
  3737  0FE7  3041               	movlw	65
  3738  0FE8  00A7               	movwf	___flge@ff2+3
  3739  0FE9  3070               	movlw	112
  3740  0FEA  00A6               	movwf	___flge@ff2+2
  3741  0FEB  3000               	movlw	0
  3742  0FEC  00A5               	movwf	___flge@ff2+1
  3743  0FED  3000               	movlw	0
  3744  0FEE  00A4               	movwf	___flge@ff2
  3745  0FEF  160A  118A  2124  120A  158A  	fcall	___flge
  3746  0FF4  1803               	btfsc	3,0
  3747  0FF5  0008               	return
  3748  0FF6  3000               	movlw	0
  3749  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3750  0FF8  00D0               	movwf	(_Tensao1+3)^(0+128)
  3751  0FF9  3000               	movlw	0
  3752  0FFA  00CF               	movwf	(_Tensao1+2)^(0+128)
  3753  0FFB  3000               	movlw	0
  3754  0FFC  00CE               	movwf	(_Tensao1+1)^(0+128)
  3755  0FFD  3000               	movlw	0
  3756  0FFE  00CD               	movwf	_Tensao1^(0+128)
  3757  0FFF  0008               	return
  3758  1000                     __end_of_MediaPlacaVaccum:	
  3759                           
  3760                           	psect	text3
  3761  1A1F                     __ptext3:	
  3762 ;; *************** function ___flsub *****************
  3763 ;; Defined at:
  3764 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  a               4   62[BANK0 ] void 
  3767 ;;  b               4   66[BANK0 ] void 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  4   62[BANK0 ] void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 300/0
  3776 ;;		On exit  : 300/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       8       0       0       0
  3780 ;;      Locals:         0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         0       8       0       0       0
  3783 ;;Total ram usage:        8 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    2
  3786 ;; This function calls:
  3787 ;;		___fladd
  3788 ;; This function is called by:
  3789 ;;		_MediaPlacaVaccum
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function ___flsub
  3795  1A1F                     ___flsub:	
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3799  1A1F  3080               	movlw	128
  3800  1A20  06E1               	xorwf	___flsub@a+3,f
  3801  1A21  0865               	movf	___flsub@b+3,w
  3802  1A22  00CD               	movwf	___fladd@b+3
  3803  1A23  0864               	movf	___flsub@b+2,w
  3804  1A24  00CC               	movwf	___fladd@b+2
  3805  1A25  0863               	movf	___flsub@b+1,w
  3806  1A26  00CB               	movwf	___fladd@b+1
  3807  1A27  0862               	movf	___flsub@b,w
  3808  1A28  00CA               	movwf	___fladd@b
  3809  1A29  0861               	movf	___flsub@a+3,w
  3810  1A2A  00D1               	movwf	___fladd@a+3
  3811  1A2B  0860               	movf	___flsub@a+2,w
  3812  1A2C  00D0               	movwf	___fladd@a+2
  3813  1A2D  085F               	movf	___flsub@a+1,w
  3814  1A2E  00CF               	movwf	___fladd@a+1
  3815  1A2F  085E               	movf	___flsub@a,w
  3816  1A30  00CE               	movwf	___fladd@a
  3817  1A31  120A  158A  233C   	fcall	___fladd
  3818  1A34  084D               	movf	?___fladd+3,w
  3819  1A35  00E1               	movwf	?___flsub+3
  3820  1A36  084C               	movf	?___fladd+2,w
  3821  1A37  00E0               	movwf	?___flsub+2
  3822  1A38  084B               	movf	?___fladd+1,w
  3823  1A39  00DF               	movwf	?___flsub+1
  3824  1A3A  084A               	movf	?___fladd,w
  3825  1A3B  00DE               	movwf	?___flsub
  3826  1A3C  0008               	return
  3827  1A3D                     __end_of___flsub:	
  3828                           
  3829                           	psect	text4
  3830  0B3C                     __ptext4:	
  3831 ;; *************** function ___fladd *****************
  3832 ;; Defined at:
  3833 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  b               4   42[BANK0 ] void 
  3836 ;;  a               4   46[BANK0 ] void 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  grs             1   61[BANK0 ] unsigned char 
  3839 ;;  bexp            1   60[BANK0 ] unsigned char 
  3840 ;;  aexp            1   59[BANK0 ] unsigned char 
  3841 ;;  signs           1   58[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  4   42[BANK0 ] unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, btemp+1
  3846 ;; Tracked objects:
  3847 ;;		On entry : 300/0
  3848 ;;		On exit  : 300/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       8       0       0       0
  3852 ;;      Locals:         0       4       0       0       0
  3853 ;;      Temps:          0       8       0       0       0
  3854 ;;      Totals:         0      20       0       0       0
  3855 ;;Total ram usage:       20 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_MediaPlacaVaccum
  3862 ;;		___flsub
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function ___fladd
  3868  0B3C                     ___fladd:	
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3872  0B3C  084D               	movf	___fladd@b+3,w
  3873  0B3D  3980               	andlw	128
  3874  0B3E  00D2               	movwf	??___fladd
  3875  0B3F  0852               	movf	??___fladd,w
  3876  0B40  00DA               	movwf	___fladd@signs
  3877  0B41  084D               	movf	___fladd@b+3,w
  3878  0B42  00D2               	movwf	??___fladd
  3879  0B43  0752               	addwf	??___fladd,w
  3880  0B44  00D3               	movwf	??___fladd+1
  3881  0B45  0853               	movf	??___fladd+1,w
  3882  0B46  00DC               	movwf	___fladd@bexp
  3883  0B47  1BCC               	btfsc	___fladd@b+2,7
  3884  0B48  145C               	bsf	___fladd@bexp,0
  3885  0B49  085C               	movf	___fladd@bexp,w
  3886  0B4A  1903               	btfsc	3,2
  3887  0B4B  2B5A               	goto	l6188
  3888  0B4C  0A5C               	incf	___fladd@bexp,w
  3889  0B4D  1D03               	btfss	3,2
  3890  0B4E  2B57               	goto	l6184
  3891  0B4F  3000               	movlw	0
  3892  0B50  00CD               	movwf	___fladd@b+3
  3893  0B51  3000               	movlw	0
  3894  0B52  00CC               	movwf	___fladd@b+2
  3895  0B53  3000               	movlw	0
  3896  0B54  00CB               	movwf	___fladd@b+1
  3897  0B55  3000               	movlw	0
  3898  0B56  00CA               	movwf	___fladd@b
  3899  0B57                     l6184:	
  3900  0B57  17CC               	bsf	___fladd@b+2,7
  3901  0B58  01CD               	clrf	___fladd@b+3
  3902  0B59  2B62               	goto	l6190
  3903  0B5A                     l6188:	
  3904  0B5A  3000               	movlw	0
  3905  0B5B  00CD               	movwf	___fladd@b+3
  3906  0B5C  3000               	movlw	0
  3907  0B5D  00CC               	movwf	___fladd@b+2
  3908  0B5E  3000               	movlw	0
  3909  0B5F  00CB               	movwf	___fladd@b+1
  3910  0B60  3000               	movlw	0
  3911  0B61  00CA               	movwf	___fladd@b
  3912  0B62                     l6190:	
  3913  0B62  0851               	movf	___fladd@a+3,w
  3914  0B63  3980               	andlw	128
  3915  0B64  00D2               	movwf	??___fladd
  3916  0B65  0852               	movf	??___fladd,w
  3917  0B66  00DB               	movwf	___fladd@aexp
  3918  0B67  085B               	movf	___fladd@aexp,w
  3919  0B68  065A               	xorwf	___fladd@signs,w
  3920  0B69  1D03               	btfss	3,2
  3921  0B6A  175A               	bsf	___fladd@signs,6
  3922  0B6B  0851               	movf	___fladd@a+3,w
  3923  0B6C  00D2               	movwf	??___fladd
  3924  0B6D  0752               	addwf	??___fladd,w
  3925  0B6E  00D3               	movwf	??___fladd+1
  3926  0B6F  0853               	movf	??___fladd+1,w
  3927  0B70  00DB               	movwf	___fladd@aexp
  3928  0B71  1BD0               	btfsc	___fladd@a+2,7
  3929  0B72  145B               	bsf	___fladd@aexp,0
  3930  0B73  085B               	movf	___fladd@aexp,w
  3931  0B74  1903               	btfsc	3,2
  3932  0B75  2B84               	goto	l6212
  3933  0B76  0A5B               	incf	___fladd@aexp,w
  3934  0B77  1D03               	btfss	3,2
  3935  0B78  2B81               	goto	l6208
  3936  0B79  3000               	movlw	0
  3937  0B7A  00D1               	movwf	___fladd@a+3
  3938  0B7B  3000               	movlw	0
  3939  0B7C  00D0               	movwf	___fladd@a+2
  3940  0B7D  3000               	movlw	0
  3941  0B7E  00CF               	movwf	___fladd@a+1
  3942  0B7F  3000               	movlw	0
  3943  0B80  00CE               	movwf	___fladd@a
  3944  0B81                     l6208:	
  3945  0B81  17D0               	bsf	___fladd@a+2,7
  3946  0B82  01D1               	clrf	___fladd@a+3
  3947  0B83  2B8C               	goto	l1280
  3948  0B84                     l6212:	
  3949  0B84  3000               	movlw	0
  3950  0B85  00D1               	movwf	___fladd@a+3
  3951  0B86  3000               	movlw	0
  3952  0B87  00D0               	movwf	___fladd@a+2
  3953  0B88  3000               	movlw	0
  3954  0B89  00CF               	movwf	___fladd@a+1
  3955  0B8A  3000               	movlw	0
  3956  0B8B  00CE               	movwf	___fladd@a
  3957  0B8C                     l1280:	
  3958  0B8C  085C               	movf	___fladd@bexp,w
  3959  0B8D  025B               	subwf	___fladd@aexp,w
  3960  0B8E  1803               	skipnc
  3961  0B8F  2BD2               	goto	l6248
  3962  0B90  1F5A               	btfss	___fladd@signs,6
  3963  0B91  2B96               	goto	l6218
  3964  0B92  3080               	movlw	128
  3965  0B93  00D2               	movwf	??___fladd
  3966  0B94  0852               	movf	??___fladd,w
  3967  0B95  06DA               	xorwf	___fladd@signs,f
  3968  0B96                     l6218:	
  3969  0B96  085C               	movf	___fladd@bexp,w
  3970  0B97  00D2               	movwf	??___fladd
  3971  0B98  0852               	movf	??___fladd,w
  3972  0B99  00DD               	movwf	___fladd@grs
  3973  0B9A  085B               	movf	___fladd@aexp,w
  3974  0B9B  00D2               	movwf	??___fladd
  3975  0B9C  0852               	movf	??___fladd,w
  3976  0B9D  00DC               	movwf	___fladd@bexp
  3977  0B9E  085D               	movf	___fladd@grs,w
  3978  0B9F  00D2               	movwf	??___fladd
  3979  0BA0  0852               	movf	??___fladd,w
  3980  0BA1  00DB               	movwf	___fladd@aexp
  3981  0BA2  084A               	movf	___fladd@b,w
  3982  0BA3  00D2               	movwf	??___fladd
  3983  0BA4  0852               	movf	??___fladd,w
  3984  0BA5  00DD               	movwf	___fladd@grs
  3985  0BA6  084E               	movf	___fladd@a,w
  3986  0BA7  00D2               	movwf	??___fladd
  3987  0BA8  0852               	movf	??___fladd,w
  3988  0BA9  00CA               	movwf	___fladd@b
  3989  0BAA  085D               	movf	___fladd@grs,w
  3990  0BAB  00D2               	movwf	??___fladd
  3991  0BAC  0852               	movf	??___fladd,w
  3992  0BAD  00CE               	movwf	___fladd@a
  3993  0BAE  084B               	movf	___fladd@b+1,w
  3994  0BAF  00D2               	movwf	??___fladd
  3995  0BB0  0852               	movf	??___fladd,w
  3996  0BB1  00DD               	movwf	___fladd@grs
  3997  0BB2  084F               	movf	___fladd@a+1,w
  3998  0BB3  00D2               	movwf	??___fladd
  3999  0BB4  0852               	movf	??___fladd,w
  4000  0BB5  00CB               	movwf	___fladd@b+1
  4001  0BB6  085D               	movf	___fladd@grs,w
  4002  0BB7  00D2               	movwf	??___fladd
  4003  0BB8  0852               	movf	??___fladd,w
  4004  0BB9  00CF               	movwf	___fladd@a+1
  4005  0BBA  084C               	movf	___fladd@b+2,w
  4006  0BBB  00D2               	movwf	??___fladd
  4007  0BBC  0852               	movf	??___fladd,w
  4008  0BBD  00DD               	movwf	___fladd@grs
  4009  0BBE  0850               	movf	___fladd@a+2,w
  4010  0BBF  00D2               	movwf	??___fladd
  4011  0BC0  0852               	movf	??___fladd,w
  4012  0BC1  00CC               	movwf	___fladd@b+2
  4013  0BC2  085D               	movf	___fladd@grs,w
  4014  0BC3  00D2               	movwf	??___fladd
  4015  0BC4  0852               	movf	??___fladd,w
  4016  0BC5  00D0               	movwf	___fladd@a+2
  4017  0BC6  084D               	movf	___fladd@b+3,w
  4018  0BC7  00D2               	movwf	??___fladd
  4019  0BC8  0852               	movf	??___fladd,w
  4020  0BC9  00DD               	movwf	___fladd@grs
  4021  0BCA  0851               	movf	___fladd@a+3,w
  4022  0BCB  00D2               	movwf	??___fladd
  4023  0BCC  0852               	movf	??___fladd,w
  4024  0BCD  00CD               	movwf	___fladd@b+3
  4025  0BCE  085D               	movf	___fladd@grs,w
  4026  0BCF  00D2               	movwf	??___fladd
  4027  0BD0  0852               	movf	??___fladd,w
  4028  0BD1  00D1               	movwf	___fladd@a+3
  4029  0BD2                     l6248:	
  4030  0BD2  01DD               	clrf	___fladd@grs
  4031  0BD3  085B               	movf	___fladd@aexp,w
  4032  0BD4  00D2               	movwf	??___fladd
  4033  0BD5  01D3               	clrf	??___fladd+1
  4034  0BD6  0853               	movf	??___fladd+1,w
  4035  0BD7  00D5               	movwf	??___fladd+3
  4036  0BD8  085C               	movf	___fladd@bexp,w
  4037  0BD9  0252               	subwf	??___fladd,w
  4038  0BDA  00D4               	movwf	??___fladd+2
  4039  0BDB  1C03               	skipc
  4040  0BDC  03D5               	decf	??___fladd+3,f
  4041  0BDD  0855               	movf	??___fladd+3,w
  4042  0BDE  3A80               	xorlw	128
  4043  0BDF  00FF               	movwf	127
  4044  0BE0  3080               	movlw	128
  4045  0BE1  027F               	subwf	127,w
  4046  0BE2  1D03               	skipz
  4047  0BE3  2BE6               	goto	u6255
  4048  0BE4  301A               	movlw	26
  4049  0BE5  0254               	subwf	??___fladd+2,w
  4050  0BE6                     u6255:	
  4051  0BE6  1C03               	skipc
  4052  0BE7  2C1F               	goto	l6266
  4053  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4055  0BEA  084D               	movf	___fladd@b+3,w
  4056  0BEB  044C               	iorwf	___fladd@b+2,w
  4057  0BEC  044B               	iorwf	___fladd@b+1,w
  4058  0BED  044A               	iorwf	___fladd@b,w
  4059  0BEE  1903               	btfsc	3,2
  4060  0BEF  2BF2               	goto	u6260
  4061  0BF0  3001               	movlw	1
  4062  0BF1  2BF3               	goto	u6270
  4063  0BF2                     u6260:	
  4064  0BF2  3000               	movlw	0
  4065  0BF3                     u6270:	
  4066  0BF3  00D2               	movwf	??___fladd
  4067  0BF4  0852               	movf	??___fladd,w
  4068  0BF5  00DD               	movwf	___fladd@grs
  4069  0BF6  3000               	movlw	0
  4070  0BF7  00CD               	movwf	___fladd@b+3
  4071  0BF8  3000               	movlw	0
  4072  0BF9  00CC               	movwf	___fladd@b+2
  4073  0BFA  3000               	movlw	0
  4074  0BFB  00CB               	movwf	___fladd@b+1
  4075  0BFC  3000               	movlw	0
  4076  0BFD  00CA               	movwf	___fladd@b
  4077  0BFE  085B               	movf	___fladd@aexp,w
  4078  0BFF  00D2               	movwf	??___fladd
  4079  0C00  0852               	movf	??___fladd,w
  4080  0C01  00DC               	movwf	___fladd@bexp
  4081  0C02  2C25               	goto	l1284
  4082  0C03                     l1286:	
  4083  0C03  1C5D               	btfss	___fladd@grs,0
  4084  0C04  2C0E               	goto	l6256
  4085  0C05  085D               	movf	___fladd@grs,w
  4086  0C06  00D2               	movwf	??___fladd
  4087  0C07  1003               	clrc
  4088  0C08  0C52               	rrf	??___fladd,w
  4089  0C09  3801               	iorlw	1
  4090  0C0A  00D3               	movwf	??___fladd+1
  4091  0C0B  0853               	movf	??___fladd+1,w
  4092  0C0C  00DD               	movwf	___fladd@grs
  4093  0C0D  2C10               	goto	l6258
  4094  0C0E                     l6256:	
  4095  0C0E  1003               	clrc
  4096  0C0F  0CDD               	rrf	___fladd@grs,f
  4097  0C10                     l6258:	
  4098  0C10  184A               	btfsc	___fladd@b,0
  4099  0C11  17DD               	bsf	___fladd@grs,7
  4100  0C12  3001               	movlw	1
  4101  0C13  00D2               	movwf	??___fladd
  4102  0C14                     u6305:	
  4103  0C14  0D4D               	rlf	___fladd@b+3,w
  4104  0C15  0CCD               	rrf	___fladd@b+3,f
  4105  0C16  0CCC               	rrf	___fladd@b+2,f
  4106  0C17  0CCB               	rrf	___fladd@b+1,f
  4107  0C18  0CCA               	rrf	___fladd@b,f
  4108  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4109  0C1A  2C14               	goto	u6305
  4110  0C1B  3001               	movlw	1
  4111  0C1C  00D2               	movwf	??___fladd
  4112  0C1D  0852               	movf	??___fladd,w
  4113  0C1E  07DC               	addwf	___fladd@bexp,f
  4114  0C1F                     l6266:	
  4115  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0C21  085B               	movf	___fladd@aexp,w
  4118  0C22  025C               	subwf	___fladd@bexp,w
  4119  0C23  1C03               	skipc
  4120  0C24  2C03               	goto	l1286
  4121  0C25                     l1284:	
  4122  0C25  1B5A               	btfsc	___fladd@signs,6
  4123  0C26  2C66               	goto	l6292
  4124  0C27  085C               	movf	___fladd@bexp,w
  4125  0C28  1D03               	btfss	3,2
  4126  0C29  2C33               	goto	l6274
  4127  0C2A  3000               	movlw	0
  4128  0C2B  00CD               	movwf	?___fladd+3
  4129  0C2C  3000               	movlw	0
  4130  0C2D  00CC               	movwf	?___fladd+2
  4131  0C2E  3000               	movlw	0
  4132  0C2F  00CB               	movwf	?___fladd+1
  4133  0C30  3000               	movlw	0
  4134  0C31  00CA               	movwf	?___fladd
  4135  0C32  0008               	return
  4136  0C33                     l6274:	
  4137  0C33  084E               	movf	___fladd@a,w
  4138  0C34  07CA               	addwf	___fladd@b,f
  4139  0C35  084F               	movf	___fladd@a+1,w
  4140  0C36  1103               	clrz
  4141  0C37  1803               	skipnc
  4142  0C38  3E01               	addlw	1
  4143  0C39  1D03               	btfss	3,2
  4144  0C3A  07CB               	addwf	___fladd@b+1,f
  4145  0C3B  0850               	movf	___fladd@a+2,w
  4146  0C3C  1103               	clrz
  4147  0C3D  1803               	skipnc
  4148  0C3E  3E01               	addlw	1
  4149  0C3F  1D03               	btfss	3,2
  4150  0C40  07CC               	addwf	___fladd@b+2,f
  4151  0C41  0851               	movf	___fladd@a+3,w
  4152  0C42  1103               	clrz
  4153  0C43  1803               	skipnc
  4154  0C44  3E01               	addlw	1
  4155  0C45  1D03               	btfss	3,2
  4156  0C46  07CD               	addwf	___fladd@b+3,f
  4157  0C47  1C4D               	btfss	___fladd@b+3,0
  4158  0C48  2D08               	goto	l6326
  4159  0C49  1C5D               	btfss	___fladd@grs,0
  4160  0C4A  2C54               	goto	l6282
  4161  0C4B  085D               	movf	___fladd@grs,w
  4162  0C4C  00D2               	movwf	??___fladd
  4163  0C4D  1003               	clrc
  4164  0C4E  0C52               	rrf	??___fladd,w
  4165  0C4F  3801               	iorlw	1
  4166  0C50  00D3               	movwf	??___fladd+1
  4167  0C51  0853               	movf	??___fladd+1,w
  4168  0C52  00DD               	movwf	___fladd@grs
  4169  0C53  2C56               	goto	l6284
  4170  0C54                     l6282:	
  4171  0C54  1003               	clrc
  4172  0C55  0CDD               	rrf	___fladd@grs,f
  4173  0C56                     l6284:	
  4174  0C56  184A               	btfsc	___fladd@b,0
  4175  0C57  17DD               	bsf	___fladd@grs,7
  4176  0C58  3001               	movlw	1
  4177  0C59  00D2               	movwf	??___fladd
  4178  0C5A                     u6385:	
  4179  0C5A  0D4D               	rlf	___fladd@b+3,w
  4180  0C5B  0CCD               	rrf	___fladd@b+3,f
  4181  0C5C  0CCC               	rrf	___fladd@b+2,f
  4182  0C5D  0CCB               	rrf	___fladd@b+1,f
  4183  0C5E  0CCA               	rrf	___fladd@b,f
  4184  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4185  0C60  2C5A               	goto	u6385
  4186  0C61  3001               	movlw	1
  4187  0C62  00D2               	movwf	??___fladd
  4188  0C63  0852               	movf	??___fladd,w
  4189  0C64  07DC               	addwf	___fladd@bexp,f
  4190  0C65  2D08               	goto	l6326
  4191  0C66                     l6292:	
  4192  0C66  084D               	movf	___fladd@b+3,w
  4193  0C67  3A80               	xorlw	128
  4194  0C68  00FF               	movwf	127
  4195  0C69  0851               	movf	___fladd@a+3,w
  4196  0C6A  3A80               	xorlw	128
  4197  0C6B  027F               	subwf	127,w
  4198  0C6C  1D03               	skipz
  4199  0C6D  2C78               	goto	u6393
  4200  0C6E  0850               	movf	___fladd@a+2,w
  4201  0C6F  024C               	subwf	___fladd@b+2,w
  4202  0C70  1D03               	skipz
  4203  0C71  2C78               	goto	u6393
  4204  0C72  084F               	movf	___fladd@a+1,w
  4205  0C73  024B               	subwf	___fladd@b+1,w
  4206  0C74  1D03               	skipz
  4207  0C75  2C78               	goto	u6393
  4208  0C76  084E               	movf	___fladd@a,w
  4209  0C77  024A               	subwf	___fladd@b,w
  4210  0C78                     u6393:	
  4211  0C78  1803               	skipnc
  4212  0C79  2CD0               	goto	l6302
  4213  0C7A  30FF               	movlw	255
  4214  0C7B  00D2               	movwf	??___fladd
  4215  0C7C  30FF               	movlw	255
  4216  0C7D  00D3               	movwf	??___fladd+1
  4217  0C7E  30FF               	movlw	255
  4218  0C7F  00D4               	movwf	??___fladd+2
  4219  0C80  30FF               	movlw	255
  4220  0C81  00D5               	movwf	??___fladd+3
  4221  0C82  084E               	movf	___fladd@a,w
  4222  0C83  00D6               	movwf	??___fladd+4
  4223  0C84  084F               	movf	___fladd@a+1,w
  4224  0C85  00D7               	movwf	??___fladd+5
  4225  0C86  0850               	movf	___fladd@a+2,w
  4226  0C87  00D8               	movwf	??___fladd+6
  4227  0C88  0851               	movf	___fladd@a+3,w
  4228  0C89  00D9               	movwf	??___fladd+7
  4229  0C8A  084A               	movf	___fladd@b,w
  4230  0C8B  02D6               	subwf	??___fladd+4,f
  4231  0C8C  084B               	movf	___fladd@b+1,w
  4232  0C8D  1C03               	skipc
  4233  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4234  0C8F  2C91               	goto	u6401
  4235  0C90  2C92               	goto	u6402
  4236  0C91                     u6401:	
  4237  0C91  02D7               	subwf	??___fladd+5,f
  4238  0C92                     u6402:	
  4239  0C92  084C               	movf	___fladd@b+2,w
  4240  0C93  1C03               	skipc
  4241  0C94  0F4C               	incfsz	___fladd@b+2,w
  4242  0C95  2C97               	goto	u6403
  4243  0C96  2C98               	goto	u6404
  4244  0C97                     u6403:	
  4245  0C97  02D8               	subwf	??___fladd+6,f
  4246  0C98                     u6404:	
  4247  0C98  084D               	movf	___fladd@b+3,w
  4248  0C99  1C03               	skipc
  4249  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4250  0C9B  2C9D               	goto	u6405
  4251  0C9C  2C9E               	goto	u6406
  4252  0C9D                     u6405:	
  4253  0C9D  02D9               	subwf	??___fladd+7,f
  4254  0C9E                     u6406:	
  4255  0C9E  0856               	movf	??___fladd+4,w
  4256  0C9F  07D2               	addwf	??___fladd,f
  4257  0CA0  0857               	movf	??___fladd+5,w
  4258  0CA1  1803               	skipnc
  4259  0CA2  0F57               	incfsz	??___fladd+5,w
  4260  0CA3  2CA5               	goto	u6410
  4261  0CA4  2CA6               	goto	u6411
  4262  0CA5                     u6410:	
  4263  0CA5  07D3               	addwf	??___fladd+1,f
  4264  0CA6                     u6411:	
  4265  0CA6  0858               	movf	??___fladd+6,w
  4266  0CA7  1803               	skipnc
  4267  0CA8  0F58               	incfsz	??___fladd+6,w
  4268  0CA9  2CAB               	goto	u6412
  4269  0CAA  2CAC               	goto	u6413
  4270  0CAB                     u6412:	
  4271  0CAB  07D4               	addwf	??___fladd+2,f
  4272  0CAC                     u6413:	
  4273  0CAC  0859               	movf	??___fladd+7,w
  4274  0CAD  1803               	skipnc
  4275  0CAE  0A59               	incf	??___fladd+7,w
  4276  0CAF  07D5               	addwf	??___fladd+3,f
  4277  0CB0  0855               	movf	??___fladd+3,w
  4278  0CB1  00CD               	movwf	___fladd@b+3
  4279  0CB2  0854               	movf	??___fladd+2,w
  4280  0CB3  00CC               	movwf	___fladd@b+2
  4281  0CB4  0853               	movf	??___fladd+1,w
  4282  0CB5  00CB               	movwf	___fladd@b+1
  4283  0CB6  0852               	movf	??___fladd,w
  4284  0CB7  00CA               	movwf	___fladd@b
  4285  0CB8  3080               	movlw	128
  4286  0CB9  00D2               	movwf	??___fladd
  4287  0CBA  0852               	movf	??___fladd,w
  4288  0CBB  06DA               	xorwf	___fladd@signs,f
  4289  0CBC  09DD               	comf	___fladd@grs,f
  4290  0CBD  0ADD               	incf	___fladd@grs,f
  4291  0CBE  085D               	movf	___fladd@grs,w
  4292  0CBF  1D03               	btfss	3,2
  4293  0CC0  2CDE               	goto	l1301
  4294  0CC1  3001               	movlw	1
  4295  0CC2  07CA               	addwf	___fladd@b,f
  4296  0CC3  3000               	movlw	0
  4297  0CC4  1803               	skipnc
  4298  0CC5  3001               	movlw	1
  4299  0CC6  07CB               	addwf	___fladd@b+1,f
  4300  0CC7  3000               	movlw	0
  4301  0CC8  1803               	skipnc
  4302  0CC9  3001               	movlw	1
  4303  0CCA  07CC               	addwf	___fladd@b+2,f
  4304  0CCB  3000               	movlw	0
  4305  0CCC  1803               	skipnc
  4306  0CCD  3001               	movlw	1
  4307  0CCE  07CD               	addwf	___fladd@b+3,f
  4308  0CCF  2CDE               	goto	l1301
  4309  0CD0                     l6302:	
  4310  0CD0  084E               	movf	___fladd@a,w
  4311  0CD1  02CA               	subwf	___fladd@b,f
  4312  0CD2  084F               	movf	___fladd@a+1,w
  4313  0CD3  1C03               	skipc
  4314  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4315  0CD5  02CB               	subwf	___fladd@b+1,f
  4316  0CD6  0850               	movf	___fladd@a+2,w
  4317  0CD7  1C03               	skipc
  4318  0CD8  0F50               	incfsz	___fladd@a+2,w
  4319  0CD9  02CC               	subwf	___fladd@b+2,f
  4320  0CDA  0851               	movf	___fladd@a+3,w
  4321  0CDB  1C03               	skipc
  4322  0CDC  0F51               	incfsz	___fladd@a+3,w
  4323  0CDD  02CD               	subwf	___fladd@b+3,f
  4324  0CDE                     l1301:	
  4325  0CDE  084D               	movf	___fladd@b+3,w
  4326  0CDF  044C               	iorwf	___fladd@b+2,w
  4327  0CE0  044B               	iorwf	___fladd@b+1,w
  4328  0CE1  044A               	iorwf	___fladd@b,w
  4329  0CE2  1D03               	skipz
  4330  0CE3  2D06               	goto	l6324
  4331  0CE4  085D               	movf	___fladd@grs,w
  4332  0CE5  1D03               	btfss	3,2
  4333  0CE6  2D06               	goto	l6324
  4334  0CE7  3000               	movlw	0
  4335  0CE8  00CD               	movwf	?___fladd+3
  4336  0CE9  3000               	movlw	0
  4337  0CEA  00CC               	movwf	?___fladd+2
  4338  0CEB  3000               	movlw	0
  4339  0CEC  00CB               	movwf	?___fladd+1
  4340  0CED  3000               	movlw	0
  4341  0CEE  00CA               	movwf	?___fladd
  4342  0CEF  0008               	return
  4343  0CF0                     l6310:	
  4344  0CF0  3001               	movlw	1
  4345  0CF1  00D2               	movwf	??___fladd
  4346  0CF2                     u6455:	
  4347  0CF2  1003               	clrc
  4348  0CF3  0DCA               	rlf	___fladd@b,f
  4349  0CF4  0DCB               	rlf	___fladd@b+1,f
  4350  0CF5  0DCC               	rlf	___fladd@b+2,f
  4351  0CF6  0DCD               	rlf	___fladd@b+3,f
  4352  0CF7  0BD2               	decfsz	??___fladd,f
  4353  0CF8  2CF2               	goto	u6455
  4354  0CF9  1BDD               	btfsc	___fladd@grs,7
  4355  0CFA  144A               	bsf	___fladd@b,0
  4356  0CFB  1C5D               	btfss	___fladd@grs,0
  4357  0CFC  2CFF               	goto	l6318
  4358  0CFD  1403               	setc
  4359  0CFE  2D00               	goto	L3
  4360  0CFF                     l6318:	
  4361  0CFF  1003               	clrc
  4362  0D00                     L3:	
  4363  0D00  0DDD               	rlf	___fladd@grs,f
  4364  0D01  085C               	movf	___fladd@bexp,w
  4365  0D02  1903               	btfsc	3,2
  4366  0D03  2D06               	goto	l6324
  4367  0D04  3001               	movlw	1
  4368  0D05  02DC               	subwf	___fladd@bexp,f
  4369  0D06                     l6324:	
  4370  0D06  1FCC               	btfss	___fladd@b+2,7
  4371  0D07  2CF0               	goto	l6310
  4372  0D08                     l6326:	
  4373  0D08  01DB               	clrf	___fladd@aexp
  4374  0D09  1FDD               	btfss	___fladd@grs,7
  4375  0D0A  2D13               	goto	l6336
  4376  0D0B  085D               	movf	___fladd@grs,w
  4377  0D0C  397F               	andlw	127
  4378  0D0D  1903               	btfsc	3,2
  4379  0D0E  184A               	btfsc	___fladd@b,0
  4380  0D0F  2D11               	goto	l6332
  4381  0D10  2D13               	goto	l6336
  4382  0D11                     l6332:	
  4383  0D11  01DB               	clrf	___fladd@aexp
  4384  0D12  0ADB               	incf	___fladd@aexp,f
  4385  0D13                     l6336:	
  4386  0D13  085B               	movf	___fladd@aexp,w
  4387  0D14  1903               	btfsc	3,2
  4388  0D15  2D46               	goto	l1314
  4389  0D16  3001               	movlw	1
  4390  0D17  07CA               	addwf	___fladd@b,f
  4391  0D18  3000               	movlw	0
  4392  0D19  1803               	skipnc
  4393  0D1A  3001               	movlw	1
  4394  0D1B  07CB               	addwf	___fladd@b+1,f
  4395  0D1C  3000               	movlw	0
  4396  0D1D  1803               	skipnc
  4397  0D1E  3001               	movlw	1
  4398  0D1F  07CC               	addwf	___fladd@b+2,f
  4399  0D20  3000               	movlw	0
  4400  0D21  1803               	skipnc
  4401  0D22  3001               	movlw	1
  4402  0D23  07CD               	addwf	___fladd@b+3,f
  4403  0D24  1C4D               	btfss	___fladd@b+3,0
  4404  0D25  2D46               	goto	l1314
  4405  0D26  084A               	movf	___fladd@b,w
  4406  0D27  00D2               	movwf	??___fladd
  4407  0D28  084B               	movf	___fladd@b+1,w
  4408  0D29  00D3               	movwf	??___fladd+1
  4409  0D2A  084C               	movf	___fladd@b+2,w
  4410  0D2B  00D4               	movwf	??___fladd+2
  4411  0D2C  084D               	movf	___fladd@b+3,w
  4412  0D2D  00D5               	movwf	??___fladd+3
  4413  0D2E  3001               	movlw	1
  4414  0D2F  00D6               	movwf	??___fladd+4
  4415  0D30                     u6555:	
  4416  0D30  0D55               	rlf	??___fladd+3,w
  4417  0D31  0CD5               	rrf	??___fladd+3,f
  4418  0D32  0CD4               	rrf	??___fladd+2,f
  4419  0D33  0CD3               	rrf	??___fladd+1,f
  4420  0D34  0CD2               	rrf	??___fladd,f
  4421  0D35  0BD6               	decfsz	??___fladd+4,f
  4422  0D36  2D30               	goto	u6555
  4423  0D37  0855               	movf	??___fladd+3,w
  4424  0D38  00CD               	movwf	___fladd@b+3
  4425  0D39  0854               	movf	??___fladd+2,w
  4426  0D3A  00CC               	movwf	___fladd@b+2
  4427  0D3B  0853               	movf	??___fladd+1,w
  4428  0D3C  00CB               	movwf	___fladd@b+1
  4429  0D3D  0852               	movf	??___fladd,w
  4430  0D3E  00CA               	movwf	___fladd@b
  4431  0D3F  0A5C               	incf	___fladd@bexp,w
  4432  0D40  1903               	btfsc	3,2
  4433  0D41  2D46               	goto	l1314
  4434  0D42  3001               	movlw	1
  4435  0D43  00D2               	movwf	??___fladd
  4436  0D44  0852               	movf	??___fladd,w
  4437  0D45  07DC               	addwf	___fladd@bexp,f
  4438  0D46                     l1314:	
  4439  0D46  0A5C               	incf	___fladd@bexp,w
  4440  0D47  1D03               	btfss	3,2
  4441  0D48  085C               	movf	___fladd@bexp,w
  4442  0D49  1D03               	btfss	3,2
  4443  0D4A  2D56               	goto	l6354
  4444  0D4B  3000               	movlw	0
  4445  0D4C  00CD               	movwf	___fladd@b+3
  4446  0D4D  3000               	movlw	0
  4447  0D4E  00CC               	movwf	___fladd@b+2
  4448  0D4F  3000               	movlw	0
  4449  0D50  00CB               	movwf	___fladd@b+1
  4450  0D51  3000               	movlw	0
  4451  0D52  00CA               	movwf	___fladd@b
  4452  0D53  085C               	movf	___fladd@bexp,w
  4453  0D54  1903               	btfsc	3,2
  4454  0D55  01DA               	clrf	___fladd@signs
  4455  0D56                     l6354:	
  4456  0D56  1C5C               	btfss	___fladd@bexp,0
  4457  0D57  2D5A               	goto	l6358
  4458  0D58  17CC               	bsf	___fladd@b+2,7
  4459  0D59  2D5E               	goto	l1322
  4460  0D5A                     l6358:	
  4461  0D5A  307F               	movlw	127
  4462  0D5B  00D2               	movwf	??___fladd
  4463  0D5C  0852               	movf	??___fladd,w
  4464  0D5D  05CC               	andwf	___fladd@b+2,f
  4465  0D5E                     l1322:	
  4466  0D5E  085C               	movf	___fladd@bexp,w
  4467  0D5F  00D2               	movwf	??___fladd
  4468  0D60  1003               	clrc
  4469  0D61  0C52               	rrf	??___fladd,w
  4470  0D62  00D3               	movwf	??___fladd+1
  4471  0D63  0853               	movf	??___fladd+1,w
  4472  0D64  00CD               	movwf	___fladd@b+3
  4473  0D65  1FDA               	btfss	___fladd@signs,7
  4474  0D66  0008               	return
  4475  0D67  17CD               	bsf	___fladd@b+3,7
  4476  0D68  0008               	return
  4477  0D69                     __end_of___fladd:	
  4478                           
  4479                           	psect	text5
  4480  1124                     __ptext5:	
  4481 ;; *************** function ___flge *****************
  4482 ;; Defined at:
  4483 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  ff1             4    0[BANK0 ] unsigned char 
  4486 ;;  ff2             4    4[BANK0 ] unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;		None               void
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0
  4493 ;; Tracked objects:
  4494 ;;		On entry : 300/0
  4495 ;;		On exit  : 300/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         0       8       0       0       0
  4499 ;;      Locals:         0       0       0       0       0
  4500 ;;      Temps:          0       4       0       0       0
  4501 ;;      Totals:         0      12       0       0       0
  4502 ;;Total ram usage:       12 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    1
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_MediaPlacaVaccum
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           
  4513                           ;psect for function ___flge
  4514  1124                     ___flge:	
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4518  1124  3000               	movlw	0
  4519  1125  0520               	andwf	___flge@ff1,w
  4520  1126  00A8               	movwf	??___flge
  4521  1127  3000               	movlw	0
  4522  1128  0521               	andwf	___flge@ff1+1,w
  4523  1129  00A9               	movwf	??___flge+1
  4524  112A  3080               	movlw	128
  4525  112B  0522               	andwf	___flge@ff1+2,w
  4526  112C  00AA               	movwf	??___flge+2
  4527  112D  307F               	movlw	127
  4528  112E  0523               	andwf	___flge@ff1+3,w
  4529  112F  00AB               	movwf	??___flge+3
  4530  1130  082B               	movf	??___flge+3,w
  4531  1131  042A               	iorwf	??___flge+2,w
  4532  1132  0429               	iorwf	??___flge+1,w
  4533  1133  0428               	iorwf	??___flge,w
  4534  1134  1D03               	skipz
  4535  1135  293E               	goto	l1161
  4536  1136  3000               	movlw	0
  4537  1137  00A3               	movwf	___flge@ff1+3
  4538  1138  3000               	movlw	0
  4539  1139  00A2               	movwf	___flge@ff1+2
  4540  113A  3000               	movlw	0
  4541  113B  00A1               	movwf	___flge@ff1+1
  4542  113C  3000               	movlw	0
  4543  113D  00A0               	movwf	___flge@ff1
  4544  113E                     l1161:	
  4545  113E  3000               	movlw	0
  4546  113F  0524               	andwf	___flge@ff2,w
  4547  1140  00A8               	movwf	??___flge
  4548  1141  3000               	movlw	0
  4549  1142  0525               	andwf	___flge@ff2+1,w
  4550  1143  00A9               	movwf	??___flge+1
  4551  1144  3080               	movlw	128
  4552  1145  0526               	andwf	___flge@ff2+2,w
  4553  1146  00AA               	movwf	??___flge+2
  4554  1147  307F               	movlw	127
  4555  1148  0527               	andwf	___flge@ff2+3,w
  4556  1149  00AB               	movwf	??___flge+3
  4557  114A  082B               	movf	??___flge+3,w
  4558  114B  042A               	iorwf	??___flge+2,w
  4559  114C  0429               	iorwf	??___flge+1,w
  4560  114D  0428               	iorwf	??___flge,w
  4561  114E  1D03               	skipz
  4562  114F  2958               	goto	l7020
  4563  1150  3000               	movlw	0
  4564  1151  00A7               	movwf	___flge@ff2+3
  4565  1152  3000               	movlw	0
  4566  1153  00A6               	movwf	___flge@ff2+2
  4567  1154  3000               	movlw	0
  4568  1155  00A5               	movwf	___flge@ff2+1
  4569  1156  3000               	movlw	0
  4570  1157  00A4               	movwf	___flge@ff2
  4571  1158                     l7020:	
  4572  1158  1FA3               	btfss	___flge@ff1+3,7
  4573  1159  297E               	goto	l7024
  4574  115A  3000               	movlw	0
  4575  115B  00A8               	movwf	??___flge
  4576  115C  3000               	movlw	0
  4577  115D  00A9               	movwf	??___flge+1
  4578  115E  3000               	movlw	0
  4579  115F  00AA               	movwf	??___flge+2
  4580  1160  3080               	movlw	128
  4581  1161  00AB               	movwf	??___flge+3
  4582  1162  0820               	movf	___flge@ff1,w
  4583  1163  02A8               	subwf	??___flge,f
  4584  1164  0821               	movf	___flge@ff1+1,w
  4585  1165  1C03               	skipc
  4586  1166  0F21               	incfsz	___flge@ff1+1,w
  4587  1167  2969               	goto	u7551
  4588  1168  296A               	goto	u7552
  4589  1169                     u7551:	
  4590  1169  02A9               	subwf	??___flge+1,f
  4591  116A                     u7552:	
  4592  116A  0822               	movf	___flge@ff1+2,w
  4593  116B  1C03               	skipc
  4594  116C  0F22               	incfsz	___flge@ff1+2,w
  4595  116D  296F               	goto	u7553
  4596  116E  2970               	goto	u7554
  4597  116F                     u7553:	
  4598  116F  02AA               	subwf	??___flge+2,f
  4599  1170                     u7554:	
  4600  1170  0823               	movf	___flge@ff1+3,w
  4601  1171  1C03               	skipc
  4602  1172  0F23               	incfsz	___flge@ff1+3,w
  4603  1173  2975               	goto	u7555
  4604  1174  2976               	goto	u7556
  4605  1175                     u7555:	
  4606  1175  02AB               	subwf	??___flge+3,f
  4607  1176                     u7556:	
  4608  1176  082B               	movf	??___flge+3,w
  4609  1177  00A3               	movwf	___flge@ff1+3
  4610  1178  082A               	movf	??___flge+2,w
  4611  1179  00A2               	movwf	___flge@ff1+2
  4612  117A  0829               	movf	??___flge+1,w
  4613  117B  00A1               	movwf	___flge@ff1+1
  4614  117C  0828               	movf	??___flge,w
  4615  117D  00A0               	movwf	___flge@ff1
  4616  117E                     l7024:	
  4617  117E  1FA7               	btfss	___flge@ff2+3,7
  4618  117F  29A4               	goto	l1164
  4619  1180  3000               	movlw	0
  4620  1181  00A8               	movwf	??___flge
  4621  1182  3000               	movlw	0
  4622  1183  00A9               	movwf	??___flge+1
  4623  1184  3000               	movlw	0
  4624  1185  00AA               	movwf	??___flge+2
  4625  1186  3080               	movlw	128
  4626  1187  00AB               	movwf	??___flge+3
  4627  1188  0824               	movf	___flge@ff2,w
  4628  1189  02A8               	subwf	??___flge,f
  4629  118A  0825               	movf	___flge@ff2+1,w
  4630  118B  1C03               	skipc
  4631  118C  0F25               	incfsz	___flge@ff2+1,w
  4632  118D  298F               	goto	u7571
  4633  118E  2990               	goto	u7572
  4634  118F                     u7571:	
  4635  118F  02A9               	subwf	??___flge+1,f
  4636  1190                     u7572:	
  4637  1190  0826               	movf	___flge@ff2+2,w
  4638  1191  1C03               	skipc
  4639  1192  0F26               	incfsz	___flge@ff2+2,w
  4640  1193  2995               	goto	u7573
  4641  1194  2996               	goto	u7574
  4642  1195                     u7573:	
  4643  1195  02AA               	subwf	??___flge+2,f
  4644  1196                     u7574:	
  4645  1196  0827               	movf	___flge@ff2+3,w
  4646  1197  1C03               	skipc
  4647  1198  0F27               	incfsz	___flge@ff2+3,w
  4648  1199  299B               	goto	u7575
  4649  119A  299C               	goto	u7576
  4650  119B                     u7575:	
  4651  119B  02AB               	subwf	??___flge+3,f
  4652  119C                     u7576:	
  4653  119C  082B               	movf	??___flge+3,w
  4654  119D  00A7               	movwf	___flge@ff2+3
  4655  119E  082A               	movf	??___flge+2,w
  4656  119F  00A6               	movwf	___flge@ff2+2
  4657  11A0  0829               	movf	??___flge+1,w
  4658  11A1  00A5               	movwf	___flge@ff2+1
  4659  11A2  0828               	movf	??___flge,w
  4660  11A3  00A4               	movwf	___flge@ff2
  4661  11A4                     l1164:	
  4662  11A4  3080               	movlw	128
  4663  11A5  06A3               	xorwf	___flge@ff1+3,f
  4664  11A6  3080               	movlw	128
  4665  11A7  06A7               	xorwf	___flge@ff2+3,f
  4666  11A8  0827               	movf	___flge@ff2+3,w
  4667  11A9  0223               	subwf	___flge@ff1+3,w
  4668  11AA  1D03               	skipz
  4669  11AB  0008               	return
  4670  11AC  0826               	movf	___flge@ff2+2,w
  4671  11AD  0222               	subwf	___flge@ff1+2,w
  4672  11AE  1D03               	skipz
  4673  11AF  0008               	return
  4674  11B0  0825               	movf	___flge@ff2+1,w
  4675  11B1  0221               	subwf	___flge@ff1+1,w
  4676  11B2  1D03               	skipz
  4677  11B3  0008               	return
  4678  11B4  0824               	movf	___flge@ff2,w
  4679  11B5  0220               	subwf	___flge@ff1,w
  4680  11B6  0008               	return
  4681  11B7                     __end_of___flge:	
  4682                           
  4683                           	psect	text6
  4684  099B                     __ptext6:	
  4685 ;; *************** function ___fldiv *****************
  4686 ;; Defined at:
  4687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  a               4   33[BANK0 ] unsigned char 
  4690 ;;  b               4   37[BANK0 ] unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  grs             4   53[BANK0 ] unsigned long 
  4693 ;;  rem             4   46[BANK0 ] unsigned long 
  4694 ;;  new_exp         2   51[BANK0 ] int 
  4695 ;;  aexp            1   58[BANK0 ] unsigned char 
  4696 ;;  bexp            1   57[BANK0 ] unsigned char 
  4697 ;;  sign            1   50[BANK0 ] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4   33[BANK0 ] unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, btemp+1
  4702 ;; Tracked objects:
  4703 ;;		On entry : 300/0
  4704 ;;		On exit  : 300/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       8       0       0       0
  4708 ;;      Locals:         0      13       0       0       0
  4709 ;;      Temps:          0       5       0       0       0
  4710 ;;      Totals:         0      26       0       0       0
  4711 ;;Total ram usage:       26 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_MediaPlacaVaccum
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function ___fldiv
  4723  099B                     ___fldiv:	
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4727  099B  0848               	movf	___fldiv@b+3,w
  4728  099C  3980               	andlw	128
  4729  099D  00C9               	movwf	??___fldiv
  4730  099E  0849               	movf	??___fldiv,w
  4731  099F  00D2               	movwf	___fldiv@sign
  4732  09A0  0848               	movf	___fldiv@b+3,w
  4733  09A1  00C9               	movwf	??___fldiv
  4734  09A2  0749               	addwf	??___fldiv,w
  4735  09A3  00CA               	movwf	??___fldiv+1
  4736  09A4  084A               	movf	??___fldiv+1,w
  4737  09A5  00D9               	movwf	___fldiv@bexp
  4738  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4739  09A7  1459               	bsf	___fldiv@bexp,0
  4740  09A8  0859               	movf	___fldiv@bexp,w
  4741  09A9  1903               	btfsc	3,2
  4742  09AA  29B9               	goto	l7058
  4743  09AB  0A59               	incf	___fldiv@bexp,w
  4744  09AC  1D03               	btfss	3,2
  4745  09AD  29B6               	goto	l7054
  4746  09AE  3000               	movlw	0
  4747  09AF  00C8               	movwf	___fldiv@b+3
  4748  09B0  3000               	movlw	0
  4749  09B1  00C7               	movwf	___fldiv@b+2
  4750  09B2  3000               	movlw	0
  4751  09B3  00C6               	movwf	___fldiv@b+1
  4752  09B4  3000               	movlw	0
  4753  09B5  00C5               	movwf	___fldiv@b
  4754  09B6                     l7054:	
  4755  09B6  17C7               	bsf	___fldiv@b+2,7
  4756  09B7  01C8               	clrf	___fldiv@b+3
  4757  09B8  29C1               	goto	l7060
  4758  09B9                     l7058:	
  4759  09B9  3000               	movlw	0
  4760  09BA  00C8               	movwf	___fldiv@b+3
  4761  09BB  3000               	movlw	0
  4762  09BC  00C7               	movwf	___fldiv@b+2
  4763  09BD  3000               	movlw	0
  4764  09BE  00C6               	movwf	___fldiv@b+1
  4765  09BF  3000               	movlw	0
  4766  09C0  00C5               	movwf	___fldiv@b
  4767  09C1                     l7060:	
  4768  09C1  0844               	movf	___fldiv@a+3,w
  4769  09C2  3980               	andlw	128
  4770  09C3  00C9               	movwf	??___fldiv
  4771  09C4  0849               	movf	??___fldiv,w
  4772  09C5  06D2               	xorwf	___fldiv@sign,f
  4773  09C6  0844               	movf	___fldiv@a+3,w
  4774  09C7  00C9               	movwf	??___fldiv
  4775  09C8  0749               	addwf	??___fldiv,w
  4776  09C9  00CA               	movwf	??___fldiv+1
  4777  09CA  084A               	movf	??___fldiv+1,w
  4778  09CB  00DA               	movwf	___fldiv@aexp
  4779  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4780  09CD  145A               	bsf	___fldiv@aexp,0
  4781  09CE  085A               	movf	___fldiv@aexp,w
  4782  09CF  1903               	btfsc	3,2
  4783  09D0  29DF               	goto	l7078
  4784  09D1  0A5A               	incf	___fldiv@aexp,w
  4785  09D2  1D03               	btfss	3,2
  4786  09D3  29DC               	goto	l7074
  4787  09D4  3000               	movlw	0
  4788  09D5  00C4               	movwf	___fldiv@a+3
  4789  09D6  3000               	movlw	0
  4790  09D7  00C3               	movwf	___fldiv@a+2
  4791  09D8  3000               	movlw	0
  4792  09D9  00C2               	movwf	___fldiv@a+1
  4793  09DA  3000               	movlw	0
  4794  09DB  00C1               	movwf	___fldiv@a
  4795  09DC                     l7074:	
  4796  09DC  17C3               	bsf	___fldiv@a+2,7
  4797  09DD  01C4               	clrf	___fldiv@a+3
  4798  09DE  29E7               	goto	l1336
  4799  09DF                     l7078:	
  4800  09DF  3000               	movlw	0
  4801  09E0  00C4               	movwf	___fldiv@a+3
  4802  09E1  3000               	movlw	0
  4803  09E2  00C3               	movwf	___fldiv@a+2
  4804  09E3  3000               	movlw	0
  4805  09E4  00C2               	movwf	___fldiv@a+1
  4806  09E5  3000               	movlw	0
  4807  09E6  00C1               	movwf	___fldiv@a
  4808  09E7                     l1336:	
  4809  09E7  0844               	movf	___fldiv@a+3,w
  4810  09E8  0443               	iorwf	___fldiv@a+2,w
  4811  09E9  0442               	iorwf	___fldiv@a+1,w
  4812  09EA  0441               	iorwf	___fldiv@a,w
  4813  09EB  1D03               	skipz
  4814  09EC  2A06               	goto	l7088
  4815  09ED  3000               	movlw	0
  4816  09EE  00C8               	movwf	___fldiv@b+3
  4817  09EF  3000               	movlw	0
  4818  09F0  00C7               	movwf	___fldiv@b+2
  4819  09F1  3000               	movlw	0
  4820  09F2  00C6               	movwf	___fldiv@b+1
  4821  09F3  3000               	movlw	0
  4822  09F4  00C5               	movwf	___fldiv@b
  4823  09F5  3080               	movlw	128
  4824  09F6  04C7               	iorwf	___fldiv@b+2,f
  4825  09F7  307F               	movlw	127
  4826  09F8  04C8               	iorwf	___fldiv@b+3,f
  4827  09F9                     L5:	
  4828  09F9  0852               	movf	___fldiv@sign,w
  4829  09FA  00C9               	movwf	??___fldiv
  4830  09FB  0849               	movf	??___fldiv,w
  4831  09FC  04C8               	iorwf	___fldiv@b+3,f
  4832  09FD  0848               	movf	___fldiv@b+3,w
  4833  09FE  00C4               	movwf	?___fldiv+3
  4834  09FF  0847               	movf	___fldiv@b+2,w
  4835  0A00  00C3               	movwf	?___fldiv+2
  4836  0A01  0846               	movf	___fldiv@b+1,w
  4837  0A02  00C2               	movwf	?___fldiv+1
  4838  0A03  0845               	movf	___fldiv@b,w
  4839  0A04  00C1               	movwf	?___fldiv
  4840  0A05  0008               	return
  4841  0A06                     l7088:	
  4842  0A06  0859               	movf	___fldiv@bexp,w
  4843  0A07  1D03               	btfss	3,2
  4844  0A08  2A12               	goto	l7094
  4845  0A09  3000               	movlw	0
  4846  0A0A  00C4               	movwf	?___fldiv+3
  4847  0A0B  3000               	movlw	0
  4848  0A0C  00C3               	movwf	?___fldiv+2
  4849  0A0D  3000               	movlw	0
  4850  0A0E  00C2               	movwf	?___fldiv+1
  4851  0A0F  3000               	movlw	0
  4852  0A10  00C1               	movwf	?___fldiv
  4853  0A11  0008               	return
  4854  0A12                     l7094:	
  4855  0A12  0859               	movf	___fldiv@bexp,w
  4856  0A13  00C9               	movwf	??___fldiv
  4857  0A14  01CA               	clrf	??___fldiv+1
  4858  0A15  084A               	movf	??___fldiv+1,w
  4859  0A16  00CC               	movwf	??___fldiv+3
  4860  0A17  085A               	movf	___fldiv@aexp,w
  4861  0A18  0249               	subwf	??___fldiv,w
  4862  0A19  00CB               	movwf	??___fldiv+2
  4863  0A1A  1C03               	skipc
  4864  0A1B  03CC               	decf	??___fldiv+3,f
  4865  0A1C  084B               	movf	??___fldiv+2,w
  4866  0A1D  3E7F               	addlw	127
  4867  0A1E  00D3               	movwf	___fldiv@new_exp
  4868  0A1F  084C               	movf	??___fldiv+3,w
  4869  0A20  1803               	skipnc
  4870  0A21  3E01               	addlw	1
  4871  0A22  3E00               	addlw	0
  4872  0A23  00D4               	movwf	___fldiv@new_exp+1
  4873  0A24  0848               	movf	___fldiv@b+3,w
  4874  0A25  00D1               	movwf	___fldiv@rem+3
  4875  0A26  0847               	movf	___fldiv@b+2,w
  4876  0A27  00D0               	movwf	___fldiv@rem+2
  4877  0A28  0846               	movf	___fldiv@b+1,w
  4878  0A29  00CF               	movwf	___fldiv@rem+1
  4879  0A2A  0845               	movf	___fldiv@b,w
  4880  0A2B  00CE               	movwf	___fldiv@rem
  4881  0A2C  3000               	movlw	0
  4882  0A2D  00C8               	movwf	___fldiv@b+3
  4883  0A2E  3000               	movlw	0
  4884  0A2F  00C7               	movwf	___fldiv@b+2
  4885  0A30  3000               	movlw	0
  4886  0A31  00C6               	movwf	___fldiv@b+1
  4887  0A32  3000               	movlw	0
  4888  0A33  00C5               	movwf	___fldiv@b
  4889  0A34  3000               	movlw	0
  4890  0A35  00D8               	movwf	___fldiv@grs+3
  4891  0A36  3000               	movlw	0
  4892  0A37  00D7               	movwf	___fldiv@grs+2
  4893  0A38  3000               	movlw	0
  4894  0A39  00D6               	movwf	___fldiv@grs+1
  4895  0A3A  3000               	movlw	0
  4896  0A3B  00D5               	movwf	___fldiv@grs
  4897  0A3C  01DA               	clrf	___fldiv@aexp
  4898  0A3D                     l7122:	
  4899  0A3D  301A               	movlw	26
  4900  0A3E  025A               	subwf	___fldiv@aexp,w
  4901  0A3F  1803               	btfsc	3,0
  4902  0A40  2A85               	goto	l7124
  4903  0A41  085A               	movf	___fldiv@aexp,w
  4904  0A42  1903               	btfsc	3,2
  4905  0A43  2A61               	goto	l7114
  4906  0A44  3001               	movlw	1
  4907  0A45  00C9               	movwf	??___fldiv
  4908  0A46                     u7685:	
  4909  0A46  1003               	clrc
  4910  0A47  0DCE               	rlf	___fldiv@rem,f
  4911  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4912  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4913  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4914  0A4B  0BC9               	decfsz	??___fldiv,f
  4915  0A4C  2A46               	goto	u7685
  4916  0A4D  3001               	movlw	1
  4917  0A4E  00C9               	movwf	??___fldiv
  4918  0A4F                     u7695:	
  4919  0A4F  1003               	clrc
  4920  0A50  0DC5               	rlf	___fldiv@b,f
  4921  0A51  0DC6               	rlf	___fldiv@b+1,f
  4922  0A52  0DC7               	rlf	___fldiv@b+2,f
  4923  0A53  0DC8               	rlf	___fldiv@b+3,f
  4924  0A54  0BC9               	decfsz	??___fldiv,f
  4925  0A55  2A4F               	goto	u7695
  4926  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4927  0A57  1445               	bsf	___fldiv@b,0
  4928  0A58  3001               	movlw	1
  4929  0A59  00C9               	movwf	??___fldiv
  4930  0A5A                     u7715:	
  4931  0A5A  1003               	clrc
  4932  0A5B  0DD5               	rlf	___fldiv@grs,f
  4933  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4934  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4935  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4936  0A5F  0BC9               	decfsz	??___fldiv,f
  4937  0A60  2A5A               	goto	u7715
  4938  0A61                     l7114:	
  4939  0A61  0844               	movf	___fldiv@a+3,w
  4940  0A62  0251               	subwf	___fldiv@rem+3,w
  4941  0A63  1D03               	skipz
  4942  0A64  2A6F               	goto	u7725
  4943  0A65  0843               	movf	___fldiv@a+2,w
  4944  0A66  0250               	subwf	___fldiv@rem+2,w
  4945  0A67  1D03               	skipz
  4946  0A68  2A6F               	goto	u7725
  4947  0A69  0842               	movf	___fldiv@a+1,w
  4948  0A6A  024F               	subwf	___fldiv@rem+1,w
  4949  0A6B  1D03               	skipz
  4950  0A6C  2A6F               	goto	u7725
  4951  0A6D  0841               	movf	___fldiv@a,w
  4952  0A6E  024E               	subwf	___fldiv@rem,w
  4953  0A6F                     u7725:	
  4954  0A6F  1C03               	skipc
  4955  0A70  2A80               	goto	l7120
  4956  0A71  1758               	bsf	___fldiv@grs+3,6
  4957  0A72  0841               	movf	___fldiv@a,w
  4958  0A73  02CE               	subwf	___fldiv@rem,f
  4959  0A74  0842               	movf	___fldiv@a+1,w
  4960  0A75  1C03               	skipc
  4961  0A76  0F42               	incfsz	___fldiv@a+1,w
  4962  0A77  02CF               	subwf	___fldiv@rem+1,f
  4963  0A78  0843               	movf	___fldiv@a+2,w
  4964  0A79  1C03               	skipc
  4965  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4966  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4967  0A7C  0844               	movf	___fldiv@a+3,w
  4968  0A7D  1C03               	skipc
  4969  0A7E  0F44               	incfsz	___fldiv@a+3,w
  4970  0A7F  02D1               	subwf	___fldiv@rem+3,f
  4971  0A80                     l7120:	
  4972  0A80  3001               	movlw	1
  4973  0A81  00C9               	movwf	??___fldiv
  4974  0A82  0849               	movf	??___fldiv,w
  4975  0A83  07DA               	addwf	___fldiv@aexp,f
  4976  0A84  2A3D               	goto	l7122
  4977  0A85                     l7124:	
  4978  0A85  0851               	movf	___fldiv@rem+3,w
  4979  0A86  0450               	iorwf	___fldiv@rem+2,w
  4980  0A87  044F               	iorwf	___fldiv@rem+1,w
  4981  0A88  044E               	iorwf	___fldiv@rem,w
  4982  0A89  1D03               	btfss	3,2
  4983  0A8A  1455               	bsf	___fldiv@grs,0
  4984  0A8B                     l7138:	
  4985  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  4986  0A8C  2AA8               	goto	l7140
  4987  0A8D  3001               	movlw	1
  4988  0A8E  00C9               	movwf	??___fldiv
  4989  0A8F                     u7755:	
  4990  0A8F  1003               	clrc
  4991  0A90  0DC5               	rlf	___fldiv@b,f
  4992  0A91  0DC6               	rlf	___fldiv@b+1,f
  4993  0A92  0DC7               	rlf	___fldiv@b+2,f
  4994  0A93  0DC8               	rlf	___fldiv@b+3,f
  4995  0A94  0BC9               	decfsz	??___fldiv,f
  4996  0A95  2A8F               	goto	u7755
  4997  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  4998  0A97  1445               	bsf	___fldiv@b,0
  4999  0A98  3001               	movlw	1
  5000  0A99  00C9               	movwf	??___fldiv
  5001  0A9A                     u7775:	
  5002  0A9A  1003               	clrc
  5003  0A9B  0DD5               	rlf	___fldiv@grs,f
  5004  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5005  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5006  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5007  0A9F  0BC9               	decfsz	??___fldiv,f
  5008  0AA0  2A9A               	goto	u7775
  5009  0AA1  30FF               	movlw	255
  5010  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5011  0AA3  1803               	skipnc
  5012  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5013  0AA5  30FF               	movlw	255
  5014  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5015  0AA7  2A8B               	goto	l7138
  5016  0AA8                     l7140:	
  5017  0AA8  01DA               	clrf	___fldiv@aexp
  5018  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5019  0AAA  2AC1               	goto	l7150
  5020  0AAB  30FF               	movlw	255
  5021  0AAC  0555               	andwf	___fldiv@grs,w
  5022  0AAD  00C9               	movwf	??___fldiv
  5023  0AAE  30FF               	movlw	255
  5024  0AAF  0556               	andwf	___fldiv@grs+1,w
  5025  0AB0  00CA               	movwf	??___fldiv+1
  5026  0AB1  30FF               	movlw	255
  5027  0AB2  0557               	andwf	___fldiv@grs+2,w
  5028  0AB3  00CB               	movwf	??___fldiv+2
  5029  0AB4  307F               	movlw	127
  5030  0AB5  0558               	andwf	___fldiv@grs+3,w
  5031  0AB6  00CC               	movwf	??___fldiv+3
  5032  0AB7  084C               	movf	??___fldiv+3,w
  5033  0AB8  044B               	iorwf	??___fldiv+2,w
  5034  0AB9  044A               	iorwf	??___fldiv+1,w
  5035  0ABA  0449               	iorwf	??___fldiv,w
  5036  0ABB  1903               	skipnz
  5037  0ABC  1845               	btfsc	___fldiv@b,0
  5038  0ABD  2ABF               	goto	l7146
  5039  0ABE  2AC1               	goto	l7150
  5040  0ABF                     l7146:	
  5041  0ABF  01DA               	clrf	___fldiv@aexp
  5042  0AC0  0ADA               	incf	___fldiv@aexp,f
  5043  0AC1                     l7150:	
  5044  0AC1  085A               	movf	___fldiv@aexp,w
  5045  0AC2  1903               	btfsc	3,2
  5046  0AC3  2AF3               	goto	l7160
  5047  0AC4  3001               	movlw	1
  5048  0AC5  07C5               	addwf	___fldiv@b,f
  5049  0AC6  3000               	movlw	0
  5050  0AC7  1803               	skipnc
  5051  0AC8  3001               	movlw	1
  5052  0AC9  07C6               	addwf	___fldiv@b+1,f
  5053  0ACA  3000               	movlw	0
  5054  0ACB  1803               	skipnc
  5055  0ACC  3001               	movlw	1
  5056  0ACD  07C7               	addwf	___fldiv@b+2,f
  5057  0ACE  3000               	movlw	0
  5058  0ACF  1803               	skipnc
  5059  0AD0  3001               	movlw	1
  5060  0AD1  07C8               	addwf	___fldiv@b+3,f
  5061  0AD2  1C48               	btfss	___fldiv@b+3,0
  5062  0AD3  2AF3               	goto	l7160
  5063  0AD4  0845               	movf	___fldiv@b,w
  5064  0AD5  00C9               	movwf	??___fldiv
  5065  0AD6  0846               	movf	___fldiv@b+1,w
  5066  0AD7  00CA               	movwf	??___fldiv+1
  5067  0AD8  0847               	movf	___fldiv@b+2,w
  5068  0AD9  00CB               	movwf	??___fldiv+2
  5069  0ADA  0848               	movf	___fldiv@b+3,w
  5070  0ADB  00CC               	movwf	??___fldiv+3
  5071  0ADC  3001               	movlw	1
  5072  0ADD  00CD               	movwf	??___fldiv+4
  5073  0ADE                     u7845:	
  5074  0ADE  0D4C               	rlf	??___fldiv+3,w
  5075  0ADF  0CCC               	rrf	??___fldiv+3,f
  5076  0AE0  0CCB               	rrf	??___fldiv+2,f
  5077  0AE1  0CCA               	rrf	??___fldiv+1,f
  5078  0AE2  0CC9               	rrf	??___fldiv,f
  5079  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5080  0AE4  2ADE               	goto	u7845
  5081  0AE5  084C               	movf	??___fldiv+3,w
  5082  0AE6  00C8               	movwf	___fldiv@b+3
  5083  0AE7  084B               	movf	??___fldiv+2,w
  5084  0AE8  00C7               	movwf	___fldiv@b+2
  5085  0AE9  084A               	movf	??___fldiv+1,w
  5086  0AEA  00C6               	movwf	___fldiv@b+1
  5087  0AEB  0849               	movf	??___fldiv,w
  5088  0AEC  00C5               	movwf	___fldiv@b
  5089  0AED  3001               	movlw	1
  5090  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5091  0AEF  1803               	skipnc
  5092  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5093  0AF1  3000               	movlw	0
  5094  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5095  0AF3                     l7160:	
  5096  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5097  0AF4  3A80               	xorlw	128
  5098  0AF5  00FF               	movwf	127
  5099  0AF6  3080               	movlw	128
  5100  0AF7  027F               	subwf	127,w
  5101  0AF8  1D03               	skipz
  5102  0AF9  2AFC               	goto	u7855
  5103  0AFA  30FF               	movlw	255
  5104  0AFB  0253               	subwf	___fldiv@new_exp,w
  5105  0AFC                     u7855:	
  5106  0AFC  1C03               	skipc
  5107  0AFD  2B0C               	goto	l7164
  5108  0AFE  30FF               	movlw	255
  5109  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0B01  00D3               	movwf	___fldiv@new_exp
  5112  0B02  3000               	movlw	0
  5113  0B03  00D4               	movwf	___fldiv@new_exp+1
  5114  0B04  3000               	movlw	0
  5115  0B05  00C8               	movwf	___fldiv@b+3
  5116  0B06  3000               	movlw	0
  5117  0B07  00C7               	movwf	___fldiv@b+2
  5118  0B08  3000               	movlw	0
  5119  0B09  00C6               	movwf	___fldiv@b+1
  5120  0B0A  3000               	movlw	0
  5121  0B0B  00C5               	movwf	___fldiv@b
  5122  0B0C                     l7164:	
  5123  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5126  0B0F  3A80               	xorlw	128
  5127  0B10  00FF               	movwf	127
  5128  0B11  3080               	movlw	128
  5129  0B12  027F               	subwf	127,w
  5130  0B13  1D03               	skipz
  5131  0B14  2B17               	goto	u7865
  5132  0B15  3001               	movlw	1
  5133  0B16  0253               	subwf	___fldiv@new_exp,w
  5134  0B17                     u7865:	
  5135  0B17  1803               	skipnc
  5136  0B18  2B26               	goto	l1358
  5137  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0B1B  01D3               	clrf	___fldiv@new_exp
  5140  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5141  0B1D  3000               	movlw	0
  5142  0B1E  00C8               	movwf	___fldiv@b+3
  5143  0B1F  3000               	movlw	0
  5144  0B20  00C7               	movwf	___fldiv@b+2
  5145  0B21  3000               	movlw	0
  5146  0B22  00C6               	movwf	___fldiv@b+1
  5147  0B23  3000               	movlw	0
  5148  0B24  00C5               	movwf	___fldiv@b
  5149  0B25  01D2               	clrf	___fldiv@sign
  5150  0B26                     l1358:	
  5151  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0B28  0853               	movf	___fldiv@new_exp,w
  5154  0B29  00C9               	movwf	??___fldiv
  5155  0B2A  0849               	movf	??___fldiv,w
  5156  0B2B  00D9               	movwf	___fldiv@bexp
  5157  0B2C  1C59               	btfss	___fldiv@bexp,0
  5158  0B2D  2B30               	goto	l7176
  5159  0B2E  17C7               	bsf	___fldiv@b+2,7
  5160  0B2F  2B34               	goto	l1360
  5161  0B30                     l7176:	
  5162  0B30  307F               	movlw	127
  5163  0B31  00C9               	movwf	??___fldiv
  5164  0B32  0849               	movf	??___fldiv,w
  5165  0B33  05C7               	andwf	___fldiv@b+2,f
  5166  0B34                     l1360:	
  5167  0B34  0859               	movf	___fldiv@bexp,w
  5168  0B35  00C9               	movwf	??___fldiv
  5169  0B36  1003               	clrc
  5170  0B37  0C49               	rrf	??___fldiv,w
  5171  0B38  00CA               	movwf	??___fldiv+1
  5172  0B39  084A               	movf	??___fldiv+1,w
  5173  0B3A  00C8               	movwf	___fldiv@b+3
  5174  0B3B  29F9               	goto	L5
  5175  0B3C                     __end_of___fldiv:	
  5176                           
  5177                           	psect	text7
  5178  199B                     __ptext7:	
  5179 ;; *************** function _Package_Usart_is_for_me *****************
  5180 ;; Defined at:
  5181 ;;		line 8 in file "protocolo.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  retorno         1    0[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      unsigned char 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 200/100
  5192 ;;		On exit  : 300/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5195 ;;      Params:         0       0       0       0       0
  5196 ;;      Locals:         0       1       0       0       0
  5197 ;;      Temps:          0       0       0       0       0
  5198 ;;      Totals:         0       1       0       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_MediaPlacaVaccum
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _Package_Usart_is_for_me
  5211  199B                     _Package_Usart_is_for_me:	
  5212                           
  5213                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5217  199B  1683               	bsf	3,5	;RP0=1, select bank1
  5218  199C  1C69               	btfss	_generic_status^(0+128),0
  5219  199D  29AD               	goto	l6954
  5220                           
  5221                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5222  199E  1703               	bsf	3,6	;RP1=1, select bank3
  5223  199F  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5224  19A0  1303               	bcf	3,6	;RP1=0, select bank1
  5225  19A1  0663               	xorwf	_Board_Number^(0+128),w
  5226  19A2  1903               	skipnz
  5227  19A3  29A8               	goto	l807
  5228  19A4  1703               	bsf	3,6	;RP1=1, select bank3
  5229  19A5  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5230  19A6  1D03               	btfss	3,2
  5231  19A7  29AD               	goto	l6954
  5232  19A8                     l807:	
  5233                           
  5234                           ;protocolo.c: 13:             retorno=1;
  5235  19A8  1283               	bcf	3,5	;RP0=0, select bank0
  5236  19A9  1303               	bcf	3,6	;RP1=0, select bank0
  5237  19AA  01A0               	clrf	Package_Usart_is_for_me@retorno
  5238  19AB  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5239  19AC  29B0               	goto	l6958
  5240  19AD                     l6954:	
  5241                           
  5242                           ;protocolo.c: 15:             retorno=0;
  5243  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  5244  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  5245  19AF  01A0               	clrf	Package_Usart_is_for_me@retorno
  5246  19B0                     l6958:	
  5247                           
  5248                           ;protocolo.c: 21:      return retorno;
  5249  19B0  0820               	movf	Package_Usart_is_for_me@retorno,w
  5250  19B1  0008               	return
  5251  19B2                     __end_of_Package_Usart_is_for_me:	
  5252                           
  5253                           	psect	text8
  5254  1E8B                     __ptext8:	
  5255 ;; *************** function _ADC_Media_10bits *****************
  5256 ;; Defined at:
  5257 ;;		line 20 in file "adc.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  canal           1    wreg     unsigned char 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  canal           1   38[BANK0 ] unsigned char 
  5262 ;;  value           2   39[BANK0 ] unsigned int 
  5263 ;;  i               1   41[BANK0 ] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  4   33[BANK0 ] float 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 300/100
  5270 ;;		On exit  : 300/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5273 ;;      Params:         0       4       0       0       0
  5274 ;;      Locals:         0       4       0       0       0
  5275 ;;      Temps:          0       1       0       0       0
  5276 ;;      Totals:         0       9       0       0       0
  5277 ;;Total ram usage:        9 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    2
  5280 ;; This function calls:
  5281 ;;		___lwdiv
  5282 ;;		___xxtofl
  5283 ;;		_captura
  5284 ;;		_my_delay_ms
  5285 ;; This function is called by:
  5286 ;;		_MediaPlacaVaccum
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _ADC_Media_10bits
  5292  1E8B                     _ADC_Media_10bits:	
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5296                           ;ADC_Media_10bits@canal stored from wreg
  5297  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  5298  1E8C  00C6               	movwf	ADC_Media_10bits@canal
  5299                           
  5300                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5301  1E8D  0846               	movf	ADC_Media_10bits@canal,w
  5302  1E8E  00C5               	movwf	??_ADC_Media_10bits
  5303  1E8F  0DC5               	rlf	??_ADC_Media_10bits,f
  5304  1E90  0DC5               	rlf	??_ADC_Media_10bits,f
  5305  1E91  081F               	movf	31,w	;volatile
  5306  1E92  0645               	xorwf	??_ADC_Media_10bits,w
  5307  1E93  39C3               	andlw	-61
  5308  1E94  0645               	xorwf	??_ADC_Media_10bits,w
  5309  1E95  009F               	movwf	31	;volatile
  5310                           
  5311                           ;adc.c: 24:       my_delay_ms(1);
  5312  1E96  3000               	movlw	0
  5313  1E97  00A3               	movwf	my_delay_ms@time+3
  5314  1E98  3000               	movlw	0
  5315  1E99  00A2               	movwf	my_delay_ms@time+2
  5316  1E9A  3000               	movlw	0
  5317  1E9B  00A1               	movwf	my_delay_ms@time+1
  5318  1E9C  3001               	movlw	1
  5319  1E9D  00A0               	movwf	my_delay_ms@time
  5320  1E9E  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5321                           
  5322                           ;adc.c: 26:       value=0;
  5323  1EA3  01C7               	clrf	ADC_Media_10bits@value
  5324  1EA4  01C8               	clrf	ADC_Media_10bits@value+1
  5325                           
  5326                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5327  1EA5  01C9               	clrf	ADC_Media_10bits@i
  5328  1EA6  0AC9               	incf	ADC_Media_10bits@i,f
  5329  1EA7                     l6936:	
  5330                           
  5331                           ;adc.c: 28:           value+=captura();
  5332  1EA7  160A  158A  20F8  160A  158A  	fcall	_captura
  5333  1EAC  0820               	movf	?_captura,w
  5334  1EAD  07C7               	addwf	ADC_Media_10bits@value,f
  5335  1EAE  1803               	skipnc
  5336  1EAF  0AC8               	incf	ADC_Media_10bits@value+1,f
  5337  1EB0  0821               	movf	?_captura+1,w
  5338  1EB1  07C8               	addwf	ADC_Media_10bits@value+1,f
  5339  1EB2  3001               	movlw	1
  5340  1EB3  00C5               	movwf	??_ADC_Media_10bits
  5341  1EB4  0845               	movf	??_ADC_Media_10bits,w
  5342  1EB5  07C9               	addwf	ADC_Media_10bits@i,f
  5343  1EB6  3033               	movlw	51
  5344  1EB7  0249               	subwf	ADC_Media_10bits@i,w
  5345  1EB8  1C03               	skipc
  5346  1EB9  2EA7               	goto	l6936
  5347                           
  5348                           ;adc.c: 29:       value/=(i-1);
  5349  1EBA  0849               	movf	ADC_Media_10bits@i,w
  5350  1EBB  3EFF               	addlw	255
  5351  1EBC  00A0               	movwf	___lwdiv@divisor
  5352  1EBD  30FF               	movlw	255
  5353  1EBE  1803               	skipnc
  5354  1EBF  3000               	movlw	0
  5355  1EC0  00A1               	movwf	___lwdiv@divisor+1
  5356  1EC1  0848               	movf	ADC_Media_10bits@value+1,w
  5357  1EC2  00A3               	movwf	___lwdiv@dividend+1
  5358  1EC3  0847               	movf	ADC_Media_10bits@value,w
  5359  1EC4  00A2               	movwf	___lwdiv@dividend
  5360  1EC5  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  5361  1ECA  0821               	movf	?___lwdiv+1,w
  5362  1ECB  00C8               	movwf	ADC_Media_10bits@value+1
  5363  1ECC  0820               	movf	?___lwdiv,w
  5364  1ECD  00C7               	movwf	ADC_Media_10bits@value
  5365                           
  5366                           ;adc.c: 30:       return value;
  5367  1ECE  0847               	movf	ADC_Media_10bits@value,w
  5368  1ECF  00B3               	movwf	___xxtofl@val
  5369  1ED0  0848               	movf	ADC_Media_10bits@value+1,w
  5370  1ED1  00B4               	movwf	___xxtofl@val+1
  5371  1ED2  01B5               	clrf	___xxtofl@val+2
  5372  1ED3  01B6               	clrf	___xxtofl@val+3
  5373  1ED4  3000               	movlw	0
  5374  1ED5  160A  118A  21B7   	fcall	___xxtofl
  5375  1ED8  0836               	movf	?___xxtofl+3,w
  5376  1ED9  00C4               	movwf	?_ADC_Media_10bits+3
  5377  1EDA  0835               	movf	?___xxtofl+2,w
  5378  1EDB  00C3               	movwf	?_ADC_Media_10bits+2
  5379  1EDC  0834               	movf	?___xxtofl+1,w
  5380  1EDD  00C2               	movwf	?_ADC_Media_10bits+1
  5381  1EDE  0833               	movf	?___xxtofl,w
  5382  1EDF  00C1               	movwf	?_ADC_Media_10bits
  5383  1EE0  0008               	return
  5384  1EE1                     __end_of_ADC_Media_10bits:	
  5385                           
  5386                           	psect	text9
  5387  11B7                     __ptext9:	
  5388 ;; *************** function ___xxtofl *****************
  5389 ;; Defined at:
  5390 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  sign            1    wreg     unsigned char 
  5393 ;;  val             4   19[BANK0 ] long 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  sign            1   27[BANK0 ] unsigned char 
  5396 ;;  arg             4   29[BANK0 ] unsigned long 
  5397 ;;  exp             1   28[BANK0 ] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4   19[BANK0 ] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 300/0
  5404 ;;		On exit  : 300/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5407 ;;      Params:         0       4       0       0       0
  5408 ;;      Locals:         0       6       0       0       0
  5409 ;;      Temps:          0       4       0       0       0
  5410 ;;      Totals:         0      14       0       0       0
  5411 ;;Total ram usage:       14 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_MediaPlacaVaccum
  5418 ;;		_ADC_Media_10bits
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function ___xxtofl
  5424  11B7                     ___xxtofl:	
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5428                           ;___xxtofl@sign stored from wreg
  5429  11B7  00BB               	movwf	___xxtofl@sign
  5430  11B8  083B               	movf	___xxtofl@sign,w
  5431  11B9  1D03               	btfss	3,2
  5432  11BA  1FB6               	btfss	___xxtofl@val+3,7
  5433  11BB  29CC               	goto	l6510
  5434  11BC  0933               	comf	___xxtofl@val,w
  5435  11BD  00BD               	movwf	___xxtofl@arg
  5436  11BE  0934               	comf	___xxtofl@val+1,w
  5437  11BF  00BE               	movwf	___xxtofl@arg+1
  5438  11C0  0935               	comf	___xxtofl@val+2,w
  5439  11C1  00BF               	movwf	___xxtofl@arg+2
  5440  11C2  0936               	comf	___xxtofl@val+3,w
  5441  11C3  00C0               	movwf	___xxtofl@arg+3
  5442  11C4  0ABD               	incf	___xxtofl@arg,f
  5443  11C5  1903               	skipnz
  5444  11C6  0ABE               	incf	___xxtofl@arg+1,f
  5445  11C7  1903               	skipnz
  5446  11C8  0ABF               	incf	___xxtofl@arg+2,f
  5447  11C9  1903               	skipnz
  5448  11CA  0AC0               	incf	___xxtofl@arg+3,f
  5449  11CB  29D4               	goto	l1414
  5450  11CC                     l6510:	
  5451  11CC  0836               	movf	___xxtofl@val+3,w
  5452  11CD  00C0               	movwf	___xxtofl@arg+3
  5453  11CE  0835               	movf	___xxtofl@val+2,w
  5454  11CF  00BF               	movwf	___xxtofl@arg+2
  5455  11D0  0834               	movf	___xxtofl@val+1,w
  5456  11D1  00BE               	movwf	___xxtofl@arg+1
  5457  11D2  0833               	movf	___xxtofl@val,w
  5458  11D3  00BD               	movwf	___xxtofl@arg
  5459  11D4                     l1414:	
  5460  11D4  0836               	movf	___xxtofl@val+3,w
  5461  11D5  0435               	iorwf	___xxtofl@val+2,w
  5462  11D6  0434               	iorwf	___xxtofl@val+1,w
  5463  11D7  0433               	iorwf	___xxtofl@val,w
  5464  11D8  1D03               	skipz
  5465  11D9  29E3               	goto	l6516
  5466  11DA  3000               	movlw	0
  5467  11DB  00B6               	movwf	?___xxtofl+3
  5468  11DC  3000               	movlw	0
  5469  11DD  00B5               	movwf	?___xxtofl+2
  5470  11DE  3000               	movlw	0
  5471  11DF  00B4               	movwf	?___xxtofl+1
  5472  11E0  3000               	movlw	0
  5473  11E1  00B3               	movwf	?___xxtofl
  5474  11E2  0008               	return
  5475  11E3                     l6516:	
  5476  11E3  3096               	movlw	150
  5477  11E4  00B7               	movwf	??___xxtofl
  5478  11E5  0837               	movf	??___xxtofl,w
  5479  11E6  00BC               	movwf	___xxtofl@exp
  5480  11E7                     l6520:	
  5481  11E7  30FE               	movlw	254
  5482  11E8  0540               	andwf	___xxtofl@arg+3,w
  5483  11E9  1903               	btfsc	3,2
  5484  11EA  2A14               	goto	l1420
  5485  11EB  3001               	movlw	1
  5486  11EC  00B7               	movwf	??___xxtofl
  5487  11ED  0837               	movf	??___xxtofl,w
  5488  11EE  07BC               	addwf	___xxtofl@exp,f
  5489  11EF  3001               	movlw	1
  5490  11F0                     u7015:	
  5491  11F0  1003               	clrc
  5492  11F1  0CC0               	rrf	___xxtofl@arg+3,f
  5493  11F2  0CBF               	rrf	___xxtofl@arg+2,f
  5494  11F3  0CBE               	rrf	___xxtofl@arg+1,f
  5495  11F4  0CBD               	rrf	___xxtofl@arg,f
  5496  11F5  3EFF               	addlw	-1
  5497  11F6  1D03               	skipz
  5498  11F7  29F0               	goto	u7015
  5499  11F8  29E7               	goto	l6520
  5500  11F9                     l6522:	
  5501  11F9  3001               	movlw	1
  5502  11FA  00B7               	movwf	??___xxtofl
  5503  11FB  0837               	movf	??___xxtofl,w
  5504  11FC  07BC               	addwf	___xxtofl@exp,f
  5505  11FD  3001               	movlw	1
  5506  11FE  07BD               	addwf	___xxtofl@arg,f
  5507  11FF  3000               	movlw	0
  5508  1200  1803               	skipnc
  5509  1201  3001               	movlw	1
  5510  1202  07BE               	addwf	___xxtofl@arg+1,f
  5511  1203  3000               	movlw	0
  5512  1204  1803               	skipnc
  5513  1205  3001               	movlw	1
  5514  1206  07BF               	addwf	___xxtofl@arg+2,f
  5515  1207  3000               	movlw	0
  5516  1208  1803               	skipnc
  5517  1209  3001               	movlw	1
  5518  120A  07C0               	addwf	___xxtofl@arg+3,f
  5519  120B  3001               	movlw	1
  5520  120C                     u7035:	
  5521  120C  1003               	clrc
  5522  120D  0CC0               	rrf	___xxtofl@arg+3,f
  5523  120E  0CBF               	rrf	___xxtofl@arg+2,f
  5524  120F  0CBE               	rrf	___xxtofl@arg+1,f
  5525  1210  0CBD               	rrf	___xxtofl@arg,f
  5526  1211  3EFF               	addlw	-1
  5527  1212  1D03               	skipz
  5528  1213  2A0C               	goto	u7035
  5529  1214                     l1420:	
  5530  1214  30FF               	movlw	255
  5531  1215  0540               	andwf	___xxtofl@arg+3,w
  5532  1216  1903               	btfsc	3,2
  5533  1217  2A28               	goto	l6530
  5534  1218  29F9               	goto	l6522
  5535  1219                     l6532:	
  5536  1219  3002               	movlw	2
  5537  121A  023C               	subwf	___xxtofl@exp,w
  5538  121B  1C03               	btfss	3,0
  5539  121C  2A2A               	goto	l1427
  5540  121D  3001               	movlw	1
  5541  121E  02BC               	subwf	___xxtofl@exp,f
  5542  121F  3001               	movlw	1
  5543  1220  00B7               	movwf	??___xxtofl
  5544  1221                     u7055:	
  5545  1221  1003               	clrc
  5546  1222  0DBD               	rlf	___xxtofl@arg,f
  5547  1223  0DBE               	rlf	___xxtofl@arg+1,f
  5548  1224  0DBF               	rlf	___xxtofl@arg+2,f
  5549  1225  0DC0               	rlf	___xxtofl@arg+3,f
  5550  1226  0BB7               	decfsz	??___xxtofl,f
  5551  1227  2A21               	goto	u7055
  5552  1228                     l6530:	
  5553  1228  1FBF               	btfss	___xxtofl@arg+2,7
  5554  1229  2A19               	goto	l6532
  5555  122A                     l1427:	
  5556  122A  183C               	btfsc	___xxtofl@exp,0
  5557  122B  2A34               	goto	l1428
  5558  122C  30FF               	movlw	255
  5559  122D  05BD               	andwf	___xxtofl@arg,f
  5560  122E  30FF               	movlw	255
  5561  122F  05BE               	andwf	___xxtofl@arg+1,f
  5562  1230  307F               	movlw	127
  5563  1231  05BF               	andwf	___xxtofl@arg+2,f
  5564  1232  30FF               	movlw	255
  5565  1233  05C0               	andwf	___xxtofl@arg+3,f
  5566  1234                     l1428:	
  5567  1234  1003               	clrc
  5568  1235  0CBC               	rrf	___xxtofl@exp,f
  5569  1236  083C               	movf	___xxtofl@exp,w
  5570  1237  00B7               	movwf	??___xxtofl
  5571  1238  01B8               	clrf	??___xxtofl+1
  5572  1239  01B9               	clrf	??___xxtofl+2
  5573  123A  01BA               	clrf	??___xxtofl+3
  5574  123B  3018               	movlw	24
  5575  123C                     u7095:	
  5576  123C  1003               	clrc
  5577  123D  0DB7               	rlf	??___xxtofl,f
  5578  123E  0DB8               	rlf	??___xxtofl+1,f
  5579  123F  0DB9               	rlf	??___xxtofl+2,f
  5580  1240  0DBA               	rlf	??___xxtofl+3,f
  5581  1241  3EFF               	addlw	-1
  5582  1242  1D03               	skipz
  5583  1243  2A3C               	goto	u7095
  5584  1244  0837               	movf	??___xxtofl,w
  5585  1245  04BD               	iorwf	___xxtofl@arg,f
  5586  1246  0838               	movf	??___xxtofl+1,w
  5587  1247  04BE               	iorwf	___xxtofl@arg+1,f
  5588  1248  0839               	movf	??___xxtofl+2,w
  5589  1249  04BF               	iorwf	___xxtofl@arg+2,f
  5590  124A  083A               	movf	??___xxtofl+3,w
  5591  124B  04C0               	iorwf	___xxtofl@arg+3,f
  5592  124C  083B               	movf	___xxtofl@sign,w
  5593  124D  1D03               	btfss	3,2
  5594  124E  1FB6               	btfss	___xxtofl@val+3,7
  5595  124F  2A51               	goto	l6544
  5596  1250  17C0               	bsf	___xxtofl@arg+3,7
  5597  1251                     l6544:	
  5598  1251  0840               	movf	___xxtofl@arg+3,w
  5599  1252  00B6               	movwf	?___xxtofl+3
  5600  1253  083F               	movf	___xxtofl@arg+2,w
  5601  1254  00B5               	movwf	?___xxtofl+2
  5602  1255  083E               	movf	___xxtofl@arg+1,w
  5603  1256  00B4               	movwf	?___xxtofl+1
  5604  1257  083D               	movf	___xxtofl@arg,w
  5605  1258  00B3               	movwf	?___xxtofl
  5606  1259  0008               	return
  5607  125A                     __end_of___xxtofl:	
  5608                           
  5609                           	psect	text10
  5610  1E4D                     __ptext10:	
  5611 ;; *************** function _ADC_Max_10Bits *****************
  5612 ;; Defined at:
  5613 ;;		line 34 in file "adc.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  canal           1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  canal           1   13[BANK0 ] unsigned char 
  5618 ;;  value           2   16[BANK0 ] unsigned int 
  5619 ;;  Temp            2   14[BANK0 ] unsigned int 
  5620 ;;  i               1   18[BANK0 ] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  2   10[BANK0 ] unsigned int 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 300/100
  5627 ;;		On exit  : 300/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5630 ;;      Params:         0       2       0       0       0
  5631 ;;      Locals:         0       6       0       0       0
  5632 ;;      Temps:          0       1       0       0       0
  5633 ;;      Totals:         0       9       0       0       0
  5634 ;;Total ram usage:        9 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    2
  5637 ;; This function calls:
  5638 ;;		_captura
  5639 ;;		_my_delay_ms
  5640 ;; This function is called by:
  5641 ;;		_MediaPlacaVaccum
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _ADC_Max_10Bits
  5647  1E4D                     _ADC_Max_10Bits:	
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5651                           ;ADC_Max_10Bits@canal stored from wreg
  5652  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
  5653  1E4E  00AD               	movwf	ADC_Max_10Bits@canal
  5654                           
  5655                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5656  1E4F  082D               	movf	ADC_Max_10Bits@canal,w
  5657  1E50  00AC               	movwf	??_ADC_Max_10Bits
  5658  1E51  0DAC               	rlf	??_ADC_Max_10Bits,f
  5659  1E52  0DAC               	rlf	??_ADC_Max_10Bits,f
  5660  1E53  081F               	movf	31,w	;volatile
  5661  1E54  062C               	xorwf	??_ADC_Max_10Bits,w
  5662  1E55  39C3               	andlw	-61
  5663  1E56  062C               	xorwf	??_ADC_Max_10Bits,w
  5664  1E57  009F               	movwf	31	;volatile
  5665                           
  5666                           ;adc.c: 39:       my_delay_ms(1);
  5667  1E58  3000               	movlw	0
  5668  1E59  00A3               	movwf	my_delay_ms@time+3
  5669  1E5A  3000               	movlw	0
  5670  1E5B  00A2               	movwf	my_delay_ms@time+2
  5671  1E5C  3000               	movlw	0
  5672  1E5D  00A1               	movwf	my_delay_ms@time+1
  5673  1E5E  3001               	movlw	1
  5674  1E5F  00A0               	movwf	my_delay_ms@time
  5675  1E60  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5676                           
  5677                           ;adc.c: 41:       value=0;
  5678  1E65  01B0               	clrf	ADC_Max_10Bits@value
  5679  1E66  01B1               	clrf	ADC_Max_10Bits@value+1
  5680                           
  5681                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5682  1E67  01B2               	clrf	ADC_Max_10Bits@i
  5683  1E68  0AB2               	incf	ADC_Max_10Bits@i,f
  5684  1E69                     l6976:	
  5685                           
  5686                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5687  1E69  160A  158A  20F8  160A  158A  	fcall	_captura
  5688  1E6E  0821               	movf	?_captura+1,w
  5689  1E6F  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5690  1E70  0820               	movf	?_captura,w
  5691  1E71  00AE               	movwf	ADC_Max_10Bits@Temp
  5692                           
  5693                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5694  1E72  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5695  1E73  0231               	subwf	ADC_Max_10Bits@value+1,w
  5696  1E74  1D03               	skipz
  5697  1E75  2E78               	goto	u7435
  5698  1E76  082E               	movf	ADC_Max_10Bits@Temp,w
  5699  1E77  0230               	subwf	ADC_Max_10Bits@value,w
  5700  1E78                     u7435:	
  5701  1E78  1803               	skipnc
  5702  1E79  2E7E               	goto	l6982
  5703  1E7A  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5704  1E7B  00B1               	movwf	ADC_Max_10Bits@value+1
  5705  1E7C  082E               	movf	ADC_Max_10Bits@Temp,w
  5706  1E7D  00B0               	movwf	ADC_Max_10Bits@value
  5707  1E7E                     l6982:	
  5708                           
  5709                           ;adc.c: 46:           }
  5710  1E7E  3001               	movlw	1
  5711  1E7F  00AC               	movwf	??_ADC_Max_10Bits
  5712  1E80  082C               	movf	??_ADC_Max_10Bits,w
  5713  1E81  07B2               	addwf	ADC_Max_10Bits@i,f
  5714  1E82  3033               	movlw	51
  5715  1E83  0232               	subwf	ADC_Max_10Bits@i,w
  5716  1E84  1C03               	skipc
  5717  1E85  2E69               	goto	l6976
  5718                           
  5719                           ;adc.c: 47:       return value;
  5720  1E86  0831               	movf	ADC_Max_10Bits@value+1,w
  5721  1E87  00AB               	movwf	?_ADC_Max_10Bits+1
  5722  1E88  0830               	movf	ADC_Max_10Bits@value,w
  5723  1E89  00AA               	movwf	?_ADC_Max_10Bits
  5724  1E8A  0008               	return
  5725  1E8B                     __end_of_ADC_Max_10Bits:	
  5726                           
  5727                           	psect	text11
  5728  1CF2                     __ptext11:	
  5729 ;; *************** function _my_delay_ms *****************
  5730 ;; Defined at:
  5731 ;;		line 5 in file "my_delay.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  time            4    0[BANK0 ] long 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  i               4    6[BANK0 ] long 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, btemp+1
  5740 ;; Tracked objects:
  5741 ;;		On entry : 300/0
  5742 ;;		On exit  : 300/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       4       0       0       0
  5746 ;;      Locals:         0       4       0       0       0
  5747 ;;      Temps:          0       2       0       0       0
  5748 ;;      Totals:         0      10       0       0       0
  5749 ;;Total ram usage:       10 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_MediaPlacaVaccum
  5756 ;;		_ADC_Media_10bits
  5757 ;;		_ADC_Max_10Bits
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _my_delay_ms
  5763  1CF2                     _my_delay_ms:	
  5764                           
  5765                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5769  1CF2  3000               	movlw	0
  5770  1CF3  00A9               	movwf	my_delay_ms@i+3
  5771  1CF4  3000               	movlw	0
  5772  1CF5  00A8               	movwf	my_delay_ms@i+2
  5773  1CF6  3000               	movlw	0
  5774  1CF7  00A7               	movwf	my_delay_ms@i+1
  5775  1CF8  3000               	movlw	0
  5776  1CF9  00A6               	movwf	my_delay_ms@i
  5777  1CFA                     l6094:	
  5778  1CFA  0829               	movf	my_delay_ms@i+3,w
  5779  1CFB  3A80               	xorlw	128
  5780  1CFC  00FF               	movwf	127
  5781  1CFD  0823               	movf	my_delay_ms@time+3,w
  5782  1CFE  3A80               	xorlw	128
  5783  1CFF  027F               	subwf	127,w
  5784  1D00  1D03               	skipz
  5785  1D01  2D0C               	goto	u6023
  5786  1D02  0822               	movf	my_delay_ms@time+2,w
  5787  1D03  0228               	subwf	my_delay_ms@i+2,w
  5788  1D04  1D03               	skipz
  5789  1D05  2D0C               	goto	u6023
  5790  1D06  0821               	movf	my_delay_ms@time+1,w
  5791  1D07  0227               	subwf	my_delay_ms@i+1,w
  5792  1D08  1D03               	skipz
  5793  1D09  2D0C               	goto	u6023
  5794  1D0A  0820               	movf	my_delay_ms@time,w
  5795  1D0B  0226               	subwf	my_delay_ms@i,w
  5796  1D0C                     u6023:	
  5797  1D0C  1803               	btfsc	3,0
  5798  1D0D  0008               	return
  5799                           
  5800                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5801  1D0E  3003               	movlw	3
  5802  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5803  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  5804  1D11  00A5               	movwf	??_my_delay_ms+1
  5805  1D12  3097               	movlw	151
  5806  1D13  00A4               	movwf	??_my_delay_ms
  5807  1D14                     u8187:	
  5808  1D14  0BA4               	decfsz	??_my_delay_ms,f
  5809  1D15  2D14               	goto	u8187
  5810  1D16  0BA5               	decfsz	??_my_delay_ms+1,f
  5811  1D17  2D14               	goto	u8187
  5812                           
  5813                           ;my_delay.c: 10:             }
  5814  1D18  3001               	movlw	1
  5815  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  5816  1D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5817  1D1B  07A6               	addwf	my_delay_ms@i,f
  5818  1D1C  3000               	movlw	0
  5819  1D1D  1803               	skipnc
  5820  1D1E  3001               	movlw	1
  5821  1D1F  07A7               	addwf	my_delay_ms@i+1,f
  5822  1D20  3000               	movlw	0
  5823  1D21  1803               	skipnc
  5824  1D22  3001               	movlw	1
  5825  1D23  07A8               	addwf	my_delay_ms@i+2,f
  5826  1D24  3000               	movlw	0
  5827  1D25  1803               	skipnc
  5828  1D26  3001               	movlw	1
  5829  1D27  07A9               	addwf	my_delay_ms@i+3,f
  5830  1D28  2CFA               	goto	l6094
  5831  1D29                     __end_of_my_delay_ms:	
  5832                           
  5833                           	psect	text12
  5834  18F8                     __ptext12:	
  5835 ;; *************** function _captura *****************
  5836 ;; Defined at:
  5837 ;;		line 123 in file "adc.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  2    0[BANK0 ] unsigned int 
  5844 ;; Registers used:
  5845 ;;		wreg
  5846 ;; Tracked objects:
  5847 ;;		On entry : 300/0
  5848 ;;		On exit  : 300/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5851 ;;      Params:         0       2       0       0       0
  5852 ;;      Locals:         0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0
  5854 ;;      Totals:         0       2       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_ADC_Media_10bits
  5862 ;;		_ADC_Max_10Bits
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function _captura
  5868  18F8                     _captura:	
  5869                           
  5870                           ;adc.c: 124:     ADCON0bits.GO=1;
  5871                           
  5872                           ;incstack = 0
  5873                           ; Regs used in _captura: [wreg]
  5874  18F8  149F               	bsf	31,1	;volatile
  5875  18F9                     l485:	
  5876                           ;adc.c: 128:           }
  5877                           
  5878                           
  5879                           ;adc.c: 125:     while(ADCON0bits.GO)
  5880  18F9  189F               	btfsc	31,1	;volatile
  5881  18FA  28F9               	goto	l485
  5882                           
  5883                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5884  18FB  081E               	movf	30,w	;volatile
  5885  18FC  00A1               	movwf	?_captura+1
  5886  18FD  1683               	bsf	3,5	;RP0=1, select bank1
  5887  18FE  081E               	movf	30,w	;volatile
  5888  18FF  1283               	bcf	3,5	;RP0=0, select bank0
  5889  1900  00A0               	movwf	?_captura
  5890  1901  0008               	return
  5891  1902                     __end_of_captura:	
  5892                           
  5893                           	psect	text13
  5894  1BF7                     __ptext13:	
  5895 ;; *************** function _I2C_Master_Init *****************
  5896 ;; Defined at:
  5897 ;;		line 8 in file "I2C.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  c               4   14[BANK0 ] const unsigned long 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      void 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0, pclath, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 300/0
  5908 ;;		On exit  : 300/100
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5911 ;;      Params:         0       4       0       0       0
  5912 ;;      Locals:         0       0       0       0       0
  5913 ;;      Temps:          0       4       0       0       0
  5914 ;;      Totals:         0       8       0       0       0
  5915 ;;Total ram usage:        8 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    2
  5918 ;; This function calls:
  5919 ;;		___lldiv
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _I2C_Master_Init
  5927  1BF7                     _I2C_Master_Init:	
  5928                           
  5929                           ;I2C.c: 8: void I2C_Master_Init(const unsigned long c);I2C.c: 9: {;I2C.c: 13:   SSPCON2 
      +                          = 0;
  5930                           
  5931                           ;incstack = 0
  5932                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5933  1BF7  1683               	bsf	3,5	;RP0=1, select bank1
  5934  1BF8  0191               	clrf	17	;volatile
  5935                           
  5936                           ;I2C.c: 14:   SSPADD = (8000000 /(4*c))-1;
  5937  1BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5938  1BFA  082E               	movf	I2C_Master_Init@c,w
  5939  1BFB  00B2               	movwf	??_I2C_Master_Init
  5940  1BFC  082F               	movf	I2C_Master_Init@c+1,w
  5941  1BFD  00B3               	movwf	??_I2C_Master_Init+1
  5942  1BFE  0830               	movf	I2C_Master_Init@c+2,w
  5943  1BFF  00B4               	movwf	??_I2C_Master_Init+2
  5944  1C00  0831               	movf	I2C_Master_Init@c+3,w
  5945  1C01  00B5               	movwf	??_I2C_Master_Init+3
  5946  1C02  3002               	movlw	2
  5947  1C03                     u7885:	
  5948  1C03  1003               	clrc
  5949  1C04  0DB2               	rlf	??_I2C_Master_Init,f
  5950  1C05  0DB3               	rlf	??_I2C_Master_Init+1,f
  5951  1C06  0DB4               	rlf	??_I2C_Master_Init+2,f
  5952  1C07  0DB5               	rlf	??_I2C_Master_Init+3,f
  5953  1C08  3EFF               	addlw	-1
  5954  1C09  1D03               	skipz
  5955  1C0A  2C03               	goto	u7885
  5956  1C0B  0835               	movf	??_I2C_Master_Init+3,w
  5957  1C0C  00A3               	movwf	___lldiv@divisor+3
  5958  1C0D  0834               	movf	??_I2C_Master_Init+2,w
  5959  1C0E  00A2               	movwf	___lldiv@divisor+2
  5960  1C0F  0833               	movf	??_I2C_Master_Init+1,w
  5961  1C10  00A1               	movwf	___lldiv@divisor+1
  5962  1C11  0832               	movf	??_I2C_Master_Init,w
  5963  1C12  00A0               	movwf	___lldiv@divisor
  5964  1C13  3000               	movlw	0
  5965  1C14  00A7               	movwf	___lldiv@dividend+3
  5966  1C15  307A               	movlw	122
  5967  1C16  00A6               	movwf	___lldiv@dividend+2
  5968  1C17  3012               	movlw	18
  5969  1C18  00A5               	movwf	___lldiv@dividend+1
  5970  1C19  3000               	movlw	0
  5971  1C1A  00A4               	movwf	___lldiv@dividend
  5972  1C1B  160A  158A  273E   	fcall	___lldiv
  5973  1C1E  0820               	movf	?___lldiv,w
  5974  1C1F  3EFF               	addlw	255
  5975  1C20  1683               	bsf	3,5	;RP0=1, select bank1
  5976  1C21  0093               	movwf	19	;volatile
  5977                           
  5978                           ;I2C.c: 15:   SSPSTAT = 0;
  5979  1C22  0194               	clrf	20	;volatile
  5980                           
  5981                           ;I2C.c: 16:   TRISCbits.TRISC3 = 1;
  5982  1C23  1587               	bsf	7,3	;volatile
  5983                           
  5984                           ;I2C.c: 17:   TRISCbits.TRISC4 = 1;
  5985  1C24  1607               	bsf	7,4	;volatile
  5986  1C25  0008               	return
  5987  1C26                     __end_of_I2C_Master_Init:	
  5988                           
  5989                           	psect	text14
  5990  1F3E                     __ptext14:	
  5991 ;; *************** function ___lldiv *****************
  5992 ;; Defined at:
  5993 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  divisor         4    0[BANK0 ] unsigned long 
  5996 ;;  dividend        4    4[BANK0 ] unsigned long 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  quotient        4    9[BANK0 ] unsigned long 
  5999 ;;  counter         1   13[BANK0 ] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  4    0[BANK0 ] unsigned long 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 300/0
  6006 ;;		On exit  : 300/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         0       8       0       0       0
  6010 ;;      Locals:         0       5       0       0       0
  6011 ;;      Temps:          0       1       0       0       0
  6012 ;;      Totals:         0      14       0       0       0
  6013 ;;Total ram usage:       14 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_I2C_Master_Init
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function ___lldiv
  6025  1F3E                     ___lldiv:	
  6026                           
  6027                           ;incstack = 0
  6028                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6029  1F3E  3000               	movlw	0
  6030  1F3F  00AC               	movwf	___lldiv@quotient+3
  6031  1F40  3000               	movlw	0
  6032  1F41  00AB               	movwf	___lldiv@quotient+2
  6033  1F42  3000               	movlw	0
  6034  1F43  00AA               	movwf	___lldiv@quotient+1
  6035  1F44  3000               	movlw	0
  6036  1F45  00A9               	movwf	___lldiv@quotient
  6037  1F46  0823               	movf	___lldiv@divisor+3,w
  6038  1F47  0422               	iorwf	___lldiv@divisor+2,w
  6039  1F48  0421               	iorwf	___lldiv@divisor+1,w
  6040  1F49  0420               	iorwf	___lldiv@divisor,w
  6041  1F4A  1903               	skipnz
  6042  1F4B  2F93               	goto	l7010
  6043  1F4C  01AD               	clrf	___lldiv@counter
  6044  1F4D  0AAD               	incf	___lldiv@counter,f
  6045  1F4E                     l6996:	
  6046  1F4E  1BA3               	btfsc	___lldiv@divisor+3,7
  6047  1F4F  2F5E               	goto	l6998
  6048  1F50  3001               	movlw	1
  6049  1F51  00A8               	movwf	??___lldiv
  6050  1F52                     u7465:	
  6051  1F52  1003               	clrc
  6052  1F53  0DA0               	rlf	___lldiv@divisor,f
  6053  1F54  0DA1               	rlf	___lldiv@divisor+1,f
  6054  1F55  0DA2               	rlf	___lldiv@divisor+2,f
  6055  1F56  0DA3               	rlf	___lldiv@divisor+3,f
  6056  1F57  0BA8               	decfsz	??___lldiv,f
  6057  1F58  2F52               	goto	u7465
  6058  1F59  3001               	movlw	1
  6059  1F5A  00A8               	movwf	??___lldiv
  6060  1F5B  0828               	movf	??___lldiv,w
  6061  1F5C  07AD               	addwf	___lldiv@counter,f
  6062  1F5D  2F4E               	goto	l6996
  6063  1F5E                     l6998:	
  6064  1F5E  3001               	movlw	1
  6065  1F5F  00A8               	movwf	??___lldiv
  6066  1F60                     u7485:	
  6067  1F60  1003               	clrc
  6068  1F61  0DA9               	rlf	___lldiv@quotient,f
  6069  1F62  0DAA               	rlf	___lldiv@quotient+1,f
  6070  1F63  0DAB               	rlf	___lldiv@quotient+2,f
  6071  1F64  0DAC               	rlf	___lldiv@quotient+3,f
  6072  1F65  0BA8               	decfsz	??___lldiv,f
  6073  1F66  2F60               	goto	u7485
  6074  1F67  0823               	movf	___lldiv@divisor+3,w
  6075  1F68  0227               	subwf	___lldiv@dividend+3,w
  6076  1F69  1D03               	skipz
  6077  1F6A  2F75               	goto	u7495
  6078  1F6B  0822               	movf	___lldiv@divisor+2,w
  6079  1F6C  0226               	subwf	___lldiv@dividend+2,w
  6080  1F6D  1D03               	skipz
  6081  1F6E  2F75               	goto	u7495
  6082  1F6F  0821               	movf	___lldiv@divisor+1,w
  6083  1F70  0225               	subwf	___lldiv@dividend+1,w
  6084  1F71  1D03               	skipz
  6085  1F72  2F75               	goto	u7495
  6086  1F73  0820               	movf	___lldiv@divisor,w
  6087  1F74  0224               	subwf	___lldiv@dividend,w
  6088  1F75                     u7495:	
  6089  1F75  1C03               	skipc
  6090  1F76  2F86               	goto	l7006
  6091  1F77  0820               	movf	___lldiv@divisor,w
  6092  1F78  02A4               	subwf	___lldiv@dividend,f
  6093  1F79  0821               	movf	___lldiv@divisor+1,w
  6094  1F7A  1C03               	skipc
  6095  1F7B  0F21               	incfsz	___lldiv@divisor+1,w
  6096  1F7C  02A5               	subwf	___lldiv@dividend+1,f
  6097  1F7D  0822               	movf	___lldiv@divisor+2,w
  6098  1F7E  1C03               	skipc
  6099  1F7F  0F22               	incfsz	___lldiv@divisor+2,w
  6100  1F80  02A6               	subwf	___lldiv@dividend+2,f
  6101  1F81  0823               	movf	___lldiv@divisor+3,w
  6102  1F82  1C03               	skipc
  6103  1F83  0F23               	incfsz	___lldiv@divisor+3,w
  6104  1F84  02A7               	subwf	___lldiv@dividend+3,f
  6105  1F85  1429               	bsf	___lldiv@quotient,0
  6106  1F86                     l7006:	
  6107  1F86  3001               	movlw	1
  6108  1F87                     u7505:	
  6109  1F87  1003               	clrc
  6110  1F88  0CA3               	rrf	___lldiv@divisor+3,f
  6111  1F89  0CA2               	rrf	___lldiv@divisor+2,f
  6112  1F8A  0CA1               	rrf	___lldiv@divisor+1,f
  6113  1F8B  0CA0               	rrf	___lldiv@divisor,f
  6114  1F8C  3EFF               	addlw	-1
  6115  1F8D  1D03               	skipz
  6116  1F8E  2F87               	goto	u7505
  6117  1F8F  3001               	movlw	1
  6118  1F90  02AD               	subwf	___lldiv@counter,f
  6119  1F91  1D03               	btfss	3,2
  6120  1F92  2F5E               	goto	l6998
  6121  1F93                     l7010:	
  6122  1F93  082C               	movf	___lldiv@quotient+3,w
  6123  1F94  00A3               	movwf	?___lldiv+3
  6124  1F95  082B               	movf	___lldiv@quotient+2,w
  6125  1F96  00A2               	movwf	?___lldiv+2
  6126  1F97  082A               	movf	___lldiv@quotient+1,w
  6127  1F98  00A1               	movwf	?___lldiv+1
  6128  1F99  0829               	movf	___lldiv@quotient,w
  6129  1F9A  00A0               	movwf	?___lldiv
  6130  1F9B  0008               	return
  6131  1F9C                     __end_of___lldiv:	
  6132                           
  6133                           	psect	text15
  6134  0036                     __ptext15:	
  6135 ;; *************** function _Decodify_Command *****************
  6136 ;; Defined at:
  6137 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;		None
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6142 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6143 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6144 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6145 ;;  add             1   32[BANK1 ] unsigned char 
  6146 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6147 ;;  OutPut          4   35[BANK1 ] float 
  6148 ;;  tempint         2   33[BANK1 ] int 
  6149 ;;  dados           2   30[BANK1 ] int 
  6150 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 300/100
  6157 ;;		On exit  : 200/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       0       0       0       0
  6161 ;;      Locals:         0       0      45       0       0
  6162 ;;      Temps:          0       4       0       0       0
  6163 ;;      Totals:         0       4      45       0       0
  6164 ;;Total ram usage:       49 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    6
  6167 ;; This function calls:
  6168 ;;		_EEPROM_24C1025_Fill_All
  6169 ;;		_EEPROM_24C1025_Read_Buffer
  6170 ;;		_EEPROM_24C1025_Read_Byte
  6171 ;;		_EEPROM_24C1025_Read_Int
  6172 ;;		_EEPROM_24C1025_Read_Str
  6173 ;;		_EEPROM_24C1025_Write_Buffer
  6174 ;;		_EEPROM_24C1025_Write_Byte
  6175 ;;		_EEPROM_24C1025_Write_Int
  6176 ;;		_EEPROM_24C1025_Write_Str
  6177 ;;		_EEPROM_Read_Byte
  6178 ;;		_EEPROM_Read_Integer
  6179 ;;		_EEPROM_Read_String
  6180 ;;		_EEPROM_Write_Byte
  6181 ;;		_EEPROM_Write_Integer
  6182 ;;		_EEPROM_Write_String
  6183 ;;		_PROCULUS_Buzzer
  6184 ;;		_PROCULUS_Show_Screen
  6185 ;;		_PROCULUS_VP_Write_String
  6186 ;;		_Save_Log
  6187 ;;		_Send_Reply_OK
  6188 ;;		_Send_To_MB
  6189 ;;		_USART_put_buffer
  6190 ;;		_USART_put_int
  6191 ;;		_USART_put_string
  6192 ;;		_USART_putc
  6193 ;;		_USART_to_Protocol
  6194 ;;		___flmul
  6195 ;;		___fltol
  6196 ;;		_itoa
  6197 ;;		_strcat
  6198 ;;		_strcpy
  6199 ;;		_strlen
  6200 ;; This function is called by:
  6201 ;;		_main
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           
  6206                           ;psect for function _Decodify_Command
  6207  0036                     _Decodify_Command:	
  6208                           
  6209                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6213  0036  30CA               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6214  0037  160A  158A  26E1  120A  118A  	fcall	_USART_to_Protocol
  6215                           
  6216                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6217  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6218  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6219  003E  0851               	movf	(_usart_protocol^(0+384)+7),w
  6220  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6221  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6222  0041  00DF               	movwf	??_Decodify_Command
  6223  0042  085F               	movf	??_Decodify_Command,w
  6224  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6225  0044  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6226                           
  6227                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6228  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6229  0046  0852               	movf	(_usart_protocol^(0+384)+8),w
  6230  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6231  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6232  0049  00DF               	movwf	??_Decodify_Command
  6233  004A  085F               	movf	??_Decodify_Command,w
  6234  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6235  004C  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6236                           
  6237                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6238  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6239  004E  0853               	movf	(_usart_protocol^(0+384)+9),w
  6240  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0051  00DF               	movwf	??_Decodify_Command
  6243  0052  085F               	movf	??_Decodify_Command,w
  6244  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6245  0054  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6246                           
  6247                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6248  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6249  0056  0854               	movf	(_usart_protocol^(0+384)+10),w
  6250  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0059  00DF               	movwf	??_Decodify_Command
  6253  005A  085F               	movf	??_Decodify_Command,w
  6254  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6255  005C  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6256                           
  6257                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6258  005D  2C62               	goto	l7536
  6259  005E                     l7332:	
  6260                           
  6261                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6262  005E  300B               	movlw	11
  6263  005F  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6264                           
  6265                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.11");
  6266  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6267  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6268  0066  00A1               	movwf	USART_put_string@vetor
  6269  0067  3080               	movlw	128
  6270  0068  00A2               	movwf	USART_put_string@vetor+1
  6271  0069  160A  158A  248A   	fcall	_USART_put_string
  6272                           
  6273                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6274  006C  0008               	return
  6275  006D                     l7336:	
  6276                           
  6277                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6278  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6279  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6280  006F  0850               	movf	(_usart_protocol^(0+384)+6),w
  6281  0070  1D03               	btfss	3,2
  6282  0071  287B               	goto	l7340
  6283                           
  6284                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6285  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6286  0073  0850               	movf	(_Tensao1+3)^(0+128),w
  6287  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6288  0075  084F               	movf	(_Tensao1+2)^(0+128),w
  6289  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6290  0077  084E               	movf	(_Tensao1+1)^(0+128),w
  6291  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6292  0079  084D               	movf	_Tensao1^(0+128),w
  6293  007A  2883               	goto	L6
  6294  007B                     l7340:	
  6295                           
  6296                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6297  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6298  007C  0854               	movf	(_Vaccum0+3)^(0+128),w
  6299  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6300  007E  0853               	movf	(_Vaccum0+2)^(0+128),w
  6301  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6302  0080  0852               	movf	(_Vaccum0+1)^(0+128),w
  6303  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6304  0082  0851               	movf	_Vaccum0^(0+128),w
  6305  0083                     L6:	
  6306  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6307                           
  6308                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6309  0084  3041               	movlw	65
  6310  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6311  0086  00AC               	movwf	___flmul@b+3
  6312  0087  3020               	movlw	32
  6313  0088  00AB               	movwf	___flmul@b+2
  6314  0089  3000               	movlw	0
  6315  008A  00AA               	movwf	___flmul@b+1
  6316  008B  3000               	movlw	0
  6317  008C  00A9               	movwf	___flmul@b
  6318  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6319  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6320  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0090  00B0               	movwf	___flmul@a+3
  6322  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6323  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6324  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0094  00AF               	movwf	___flmul@a+2
  6326  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6327  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6328  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0098  00AE               	movwf	___flmul@a+1
  6330  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6331  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6332  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6333  009C  00AD               	movwf	___flmul@a
  6334  009D  120A  118A  24BB  120A  118A  	fcall	___flmul
  6335  00A2  082C               	movf	?___flmul+3,w
  6336  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6337  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6338  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6339  00A6  082B               	movf	?___flmul+2,w
  6340  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6341  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6342  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6343  00AA  082A               	movf	?___flmul+1,w
  6344  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6345  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6346  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6347  00AE  0829               	movf	?___flmul,w
  6348  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6349  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6350                           
  6351                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6352  00B1  138B               	bcf	11,7	;volatile
  6353                           
  6354                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6355  00B2  3002               	movlw	2
  6356  00B3  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6357                           
  6358                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6359  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6360  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6361  00BA  00C6               	movwf	___fltol@f1+3
  6362  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6363  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6364  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6365  00BE  00C5               	movwf	___fltol@f1+2
  6366  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6367  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6368  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6369  00C2  00C4               	movwf	___fltol@f1+1
  6370  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6371  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6372  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6373  00C6  00C3               	movwf	___fltol@f1
  6374  00C7  160A  118A  2042  120A  118A  	fcall	___fltol
  6375  00CC  0844               	movf	?___fltol+1,w
  6376  00CD  00CF               	movwf	USART_put_int@value+1
  6377  00CE  0843               	movf	?___fltol,w
  6378  00CF  00CE               	movwf	USART_put_int@value
  6379  00D0  160A  158A  216E   	fcall	_USART_put_int
  6380                           
  6381                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6382  00D3  178B               	bsf	11,7	;volatile
  6383                           
  6384                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6385  00D4  0008               	return
  6386  00D5                     l7352:	
  6387                           
  6388                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6389  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6390  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6391  00D7  0850               	movf	(_usart_protocol^(0+384)+6),w
  6392  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6393  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6394  00DA  00DF               	movwf	??_Decodify_Command
  6395  00DB  085F               	movf	??_Decodify_Command,w
  6396  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6397  00DD  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6398                           
  6399                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6400  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  6401  00DF  0851               	movf	(_usart_protocol^(0+384)+7),w
  6402  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  6403  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  6404  00E2  00DF               	movwf	??_Decodify_Command
  6405  00E3  085F               	movf	??_Decodify_Command,w
  6406  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6407  00E5  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6408                           
  6409                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6410  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  6411  00E7  0852               	movf	(_usart_protocol^(0+384)+8),w
  6412  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  6413  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  6414  00EA  00DF               	movwf	??_Decodify_Command
  6415  00EB  085F               	movf	??_Decodify_Command,w
  6416  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6417  00ED  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6418                           
  6419                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6420  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6421  00EF  0853               	movf	(_usart_protocol^(0+384)+9),w
  6422  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6423  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6424  00F2  00DF               	movwf	??_Decodify_Command
  6425  00F3  085F               	movf	??_Decodify_Command,w
  6426  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6427  00F5  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6428                           
  6429                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6430  00F6  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6431  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6432  00F8  00DB               	movwf	Save_Log@add_datalog+3
  6433  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  6434  00FA  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6435  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6436  00FC  00DA               	movwf	Save_Log@add_datalog+2
  6437  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  6438  00FE  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6439  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0100  00D9               	movwf	Save_Log@add_datalog+1
  6441  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0102  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6443  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0104  00D8               	movwf	Save_Log@add_datalog
  6445  0105  160A  118A  20AD   	fcall	_Save_Log
  6446                           
  6447                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6448  0108  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6449  0109  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6450                           
  6451                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6452  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6453  010B  01DD               	clrf	_milisegundo^(0+128)	;volatile
  6454  010C  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6455                           
  6456                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6457  010D  0008               	return
  6458  010E                     l7360:	
  6459                           
  6460                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6461  010E  3002               	movlw	2
  6462  010F  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6463                           
  6464                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6465  0114  3001               	movlw	1
  6466  0115  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0116  00CE               	movwf	USART_put_int@value
  6468  0117  3000               	movlw	0
  6469  0118  00CF               	movwf	USART_put_int@value+1
  6470  0119  160A  158A  216E   	fcall	_USART_put_int
  6471                           
  6472                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6473  011C  0008               	return
  6474  011D                     l7364:	
  6475                           
  6476                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6477  011D  1683               	bsf	3,5	;RP0=1, select bank3
  6478  011E  1703               	bsf	3,6	;RP1=1, select bank3
  6479  011F  0851               	movf	(_usart_protocol^(0+384)+7),w
  6480  0120  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0121  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0122  00DF               	movwf	??_Decodify_Command
  6483  0123  085F               	movf	??_Decodify_Command,w
  6484  0124  00A0               	movwf	EEPROM_Write_Byte@dado
  6485  0125  1683               	bsf	3,5	;RP0=1, select bank3
  6486  0126  1703               	bsf	3,6	;RP1=1, select bank3
  6487  0127  0850               	movf	(_usart_protocol^(0+384)+6),w
  6488  0128  160A  158A  2599  120A  118A  	fcall	_EEPROM_Write_Byte
  6489  012D                     L7:	
  6490                           
  6491                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6492  012D  3003               	movlw	3
  6493  012E  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6494                           
  6495                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6496  0133  120A  118A  27F7   	fcall	_Send_Reply_OK
  6497                           
  6498                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6499  0136  0008               	return
  6500  0137                     l7368:	
  6501                           
  6502                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6503  0137  1683               	bsf	3,5	;RP0=1, select bank3
  6504  0138  1703               	bsf	3,6	;RP1=1, select bank3
  6505  0139  0850               	movf	(_usart_protocol^(0+384)+6),w
  6506  013A  160A  158A  22BE  120A  118A  	fcall	_EEPROM_Read_Byte
  6507  013F  1303               	bcf	3,6	;RP1=0, select bank0
  6508  0140  00DF               	movwf	??_Decodify_Command
  6509  0141  085F               	movf	??_Decodify_Command,w
  6510  0142  1683               	bsf	3,5	;RP0=1, select bank1
  6511  0143  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6512                           
  6513                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6514  0144  3001               	movlw	1
  6515  0145  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6516                           
  6517                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6518  014A  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6519  014B  160A  158A  2133   	fcall	_USART_putc
  6520                           
  6521                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6522  014E  0008               	return
  6523  014F                     l7374:	
  6524                           
  6525                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6526  014F  1683               	bsf	3,5	;RP0=1, select bank3
  6527  0150  1703               	bsf	3,6	;RP1=1, select bank3
  6528  0151  0850               	movf	(_usart_protocol^(0+384)+6),w
  6529  0152  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0153  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0154  00DF               	movwf	??_Decodify_Command
  6532  0155  085F               	movf	??_Decodify_Command,w
  6533  0156  1683               	bsf	3,5	;RP0=1, select bank1
  6534  0157  00C0               	movwf	Decodify_Command@add^(0+128)
  6535                           
  6536                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6537  0158  1703               	bsf	3,6	;RP1=1, select bank3
  6538  0159  0852               	movf	(_usart_protocol^(0+384)+8),w
  6539  015A  1283               	bcf	3,5	;RP0=0, select bank0
  6540  015B  1303               	bcf	3,6	;RP1=0, select bank0
  6541  015C  00DF               	movwf	??_Decodify_Command
  6542  015D  01E0               	clrf	??_Decodify_Command+1
  6543  015E  1683               	bsf	3,5	;RP0=1, select bank3
  6544  015F  1703               	bsf	3,6	;RP1=1, select bank3
  6545  0160  0851               	movf	(_usart_protocol^(0+384)+7),w
  6546  0161  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0162  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0163  00E1               	movwf	??_Decodify_Command+2
  6549  0164  01E2               	clrf	??_Decodify_Command+3
  6550  0165  0861               	movf	??_Decodify_Command+2,w
  6551  0166  00E2               	movwf	??_Decodify_Command+3
  6552  0167  01E1               	clrf	??_Decodify_Command+2
  6553  0168  085F               	movf	??_Decodify_Command,w
  6554  0169  0461               	iorwf	??_Decodify_Command+2,w
  6555  016A  1683               	bsf	3,5	;RP0=1, select bank1
  6556  016B  00BE               	movwf	Decodify_Command@dados^(0+128)
  6557  016C  1283               	bcf	3,5	;RP0=0, select bank0
  6558  016D  0860               	movf	??_Decodify_Command+1,w
  6559  016E  0462               	iorwf	??_Decodify_Command+3,w
  6560  016F  1683               	bsf	3,5	;RP0=1, select bank1
  6561  0170  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6562                           
  6563                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6564  0171  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6565  0172  1283               	bcf	3,5	;RP0=0, select bank0
  6566  0173  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6567  0174  1683               	bsf	3,5	;RP0=1, select bank1
  6568  0175  083E               	movf	Decodify_Command@dados^(0+128),w
  6569  0176  1283               	bcf	3,5	;RP0=0, select bank0
  6570  0177  00A5               	movwf	EEPROM_Write_Integer@dado
  6571  0178  1683               	bsf	3,5	;RP0=1, select bank1
  6572  0179  0840               	movf	Decodify_Command@add^(0+128),w
  6573  017A  160A  158A  2426  120A  118A  	fcall	_EEPROM_Write_Integer
  6574  017F  292D               	goto	L7
  6575  0180                     l7384:	
  6576                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6577                           
  6578                           
  6579                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6580  0180  1683               	bsf	3,5	;RP0=1, select bank3
  6581  0181  1703               	bsf	3,6	;RP1=1, select bank3
  6582  0182  0850               	movf	(_usart_protocol^(0+384)+6),w
  6583  0183  160A  158A  2376  120A  118A  	fcall	_EEPROM_Read_Integer
  6584  0188  0824               	movf	?_EEPROM_Read_Integer+1,w
  6585  0189  1683               	bsf	3,5	;RP0=1, select bank1
  6586  018A  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6587  018B  1283               	bcf	3,5	;RP0=0, select bank0
  6588  018C  0823               	movf	?_EEPROM_Read_Integer,w
  6589  018D                     L8:	
  6590  018D  1683               	bsf	3,5	;RP0=1, select bank1
  6591  018E  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6592                           
  6593                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6594  018F  3002               	movlw	2
  6595  0190  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6596                           
  6597                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6598  0195  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6599  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6600  0197  00CF               	movwf	USART_put_int@value+1
  6601  0198  1683               	bsf	3,5	;RP0=1, select bank1
  6602  0199  0841               	movf	Decodify_Command@tempint^(0+128),w
  6603  019A  1283               	bcf	3,5	;RP0=0, select bank0
  6604  019B  00CE               	movwf	USART_put_int@value
  6605  019C  160A  158A  216E   	fcall	_USART_put_int
  6606                           
  6607                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6608  019F  0008               	return
  6609  01A0                     l7390:	
  6610                           
  6611                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6612  01A0  30D1               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6613  01A1  00DF               	movwf	??_Decodify_Command
  6614  01A2  085F               	movf	??_Decodify_Command,w
  6615  01A3  00A5               	movwf	EEPROM_Write_String@dado
  6616  01A4  1683               	bsf	3,5	;RP0=1, select bank3
  6617  01A5  1703               	bsf	3,6	;RP1=1, select bank3
  6618  01A6  0850               	movf	(_usart_protocol^(0+384)+6),w
  6619  01A7  160A  158A  23A0  120A  118A  	fcall	_EEPROM_Write_String
  6620  01AC  292D               	goto	L7
  6621  01AD                     l7396:	
  6622                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6623                           
  6624                           
  6625                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6626  01AD  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6627  01AE  00DF               	movwf	??_Decodify_Command
  6628  01AF  085F               	movf	??_Decodify_Command,w
  6629  01B0  00A3               	movwf	EEPROM_Read_String@dado
  6630  01B1  1683               	bsf	3,5	;RP0=1, select bank3
  6631  01B2  1703               	bsf	3,6	;RP1=1, select bank3
  6632  01B3  0850               	movf	(_usart_protocol^(0+384)+6),w
  6633  01B4  160A  158A  225D  120A  118A  	fcall	_EEPROM_Read_String
  6634                           
  6635                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6636  01B9  3010               	movlw	16
  6637  01BA                     L9:	
  6638  01BA  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6639                           
  6640                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6641  01BF  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6642  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  6643  01C1  00A1               	movwf	USART_put_string@vetor
  6644  01C2  3001               	movlw	1
  6645  01C3  00A2               	movwf	USART_put_string@vetor+1
  6646  01C4  160A  158A  248A   	fcall	_USART_put_string
  6647                           
  6648                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6649  01C7  0008               	return
  6650  01C8                     l7402:	
  6651                           
  6652                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6653  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  6654  01C9  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6655  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  6656  01CB  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6657  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  6658  01CD  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6659  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  6660  01CF  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6661  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  6662  01D1  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6663  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6664  01D3  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6665  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  6666  01D5  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6667  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  6668  01D7  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6669  01D8  1683               	bsf	3,5	;RP0=1, select bank3
  6670  01D9  1703               	bsf	3,6	;RP1=1, select bank3
  6671  01DA  0855               	movf	(_usart_protocol^(0+384)+11),w
  6672  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6673  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6674  01DD  00DF               	movwf	??_Decodify_Command
  6675  01DE  085F               	movf	??_Decodify_Command,w
  6676  01DF  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6677  01E0  1683               	bsf	3,5	;RP0=1, select bank3
  6678  01E1  1703               	bsf	3,6	;RP1=1, select bank3
  6679  01E2  0850               	movf	(_usart_protocol^(0+384)+6),w
  6680  01E3  160A  158A  2158  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6681  01E8  292D               	goto	L7
  6682  01E9                     l7408:	
  6683                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6684                           
  6685                           
  6686                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6687  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  6688  01EA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6689  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  6690  01EC  00BB               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6691  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  6692  01EE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6693  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  6694  01F0  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6695  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  6696  01F2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6697  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  6698  01F4  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6699  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  6700  01F6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6701  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  6702  01F8  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6703  01F9  1683               	bsf	3,5	;RP0=1, select bank3
  6704  01FA  1703               	bsf	3,6	;RP1=1, select bank3
  6705  01FB  0850               	movf	(_usart_protocol^(0+384)+6),w
  6706  01FC  160A  158A  21B2  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6707  0201  00DF               	movwf	??_Decodify_Command
  6708  0202  085F               	movf	??_Decodify_Command,w
  6709  0203  1683               	bsf	3,5	;RP0=1, select bank1
  6710  0204  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6711                           
  6712                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6713  0205  3001               	movlw	1
  6714  0206  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6715                           
  6716                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6717  020B  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6718  020C  160A  158A  2133   	fcall	_USART_putc
  6719                           
  6720                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6721  020F  0008               	return
  6722  0210                     l7414:	
  6723                           
  6724                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6725  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6726  0211  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6727  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6728  0213  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6729  0214  1683               	bsf	3,5	;RP0=1, select bank1
  6730  0215  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6731  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0217  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6733  0218  1683               	bsf	3,5	;RP0=1, select bank1
  6734  0219  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6735  021A  1283               	bcf	3,5	;RP0=0, select bank0
  6736  021B  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6737  021C  1683               	bsf	3,5	;RP0=1, select bank1
  6738  021D  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6739  021E  1283               	bcf	3,5	;RP0=0, select bank0
  6740  021F  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6741  0220  1683               	bsf	3,5	;RP0=1, select bank3
  6742  0221  1703               	bsf	3,6	;RP1=1, select bank3
  6743  0222  0856               	movf	(_usart_protocol^(0+384)+12),w
  6744  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6745  0224  1303               	bcf	3,6	;RP1=0, select bank0
  6746  0225  00DF               	movwf	??_Decodify_Command
  6747  0226  01E0               	clrf	??_Decodify_Command+1
  6748  0227  1683               	bsf	3,5	;RP0=1, select bank3
  6749  0228  1703               	bsf	3,6	;RP1=1, select bank3
  6750  0229  0855               	movf	(_usart_protocol^(0+384)+11),w
  6751  022A  1283               	bcf	3,5	;RP0=0, select bank0
  6752  022B  1303               	bcf	3,6	;RP1=0, select bank0
  6753  022C  00E1               	movwf	??_Decodify_Command+2
  6754  022D  01E2               	clrf	??_Decodify_Command+3
  6755  022E  0861               	movf	??_Decodify_Command+2,w
  6756  022F  00E2               	movwf	??_Decodify_Command+3
  6757  0230  01E1               	clrf	??_Decodify_Command+2
  6758  0231  085F               	movf	??_Decodify_Command,w
  6759  0232  0461               	iorwf	??_Decodify_Command+2,w
  6760  0233  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6761  0234  0860               	movf	??_Decodify_Command+1,w
  6762  0235  0462               	iorwf	??_Decodify_Command+3,w
  6763  0236  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6764  0237  1683               	bsf	3,5	;RP0=1, select bank3
  6765  0238  1703               	bsf	3,6	;RP1=1, select bank3
  6766  0239  0850               	movf	(_usart_protocol^(0+384)+6),w
  6767  023A  160A  158A  223D  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6768  023F  292D               	goto	L7
  6769  0240                     l7420:	
  6770                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6771                           
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6774  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6775  0241  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6776  0242  1283               	bcf	3,5	;RP0=0, select bank0
  6777  0243  00BB               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6778  0244  1683               	bsf	3,5	;RP0=1, select bank1
  6779  0245  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6780  0246  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0247  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6782  0248  1683               	bsf	3,5	;RP0=1, select bank1
  6783  0249  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6784  024A  1283               	bcf	3,5	;RP0=0, select bank0
  6785  024B  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6786  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6787  024D  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6788  024E  1283               	bcf	3,5	;RP0=0, select bank0
  6789  024F  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6790  0250  1683               	bsf	3,5	;RP0=1, select bank3
  6791  0251  1703               	bsf	3,6	;RP1=1, select bank3
  6792  0252  0850               	movf	(_usart_protocol^(0+384)+6),w
  6793  0253  160A  158A  2326  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6794  0258  0839               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6795  0259  1683               	bsf	3,5	;RP0=1, select bank1
  6796  025A  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6797  025B  1283               	bcf	3,5	;RP0=0, select bank0
  6798  025C  0838               	movf	?_EEPROM_24C1025_Read_Int,w
  6799  025D  298D               	goto	L8
  6800  025E                     l7426:	
  6801                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6802                           
  6803                           
  6804                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6805  025E  1683               	bsf	3,5	;RP0=1, select bank3
  6806  025F  1703               	bsf	3,6	;RP1=1, select bank3
  6807  0260  0855               	movf	(_usart_protocol^(0+384)+11),w
  6808  0261  1283               	bcf	3,5	;RP0=0, select bank0
  6809  0262  1303               	bcf	3,6	;RP1=0, select bank0
  6810  0263  00DF               	movwf	??_Decodify_Command
  6811  0264  085F               	movf	??_Decodify_Command,w
  6812  0265  1683               	bsf	3,5	;RP0=1, select bank1
  6813  0266  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  6814                           
  6815                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6816  0267  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6817  0268  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0269  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6819  026A  1683               	bsf	3,5	;RP0=1, select bank1
  6820  026B  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6821  026C  1283               	bcf	3,5	;RP0=0, select bank0
  6822  026D  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6823  026E  1683               	bsf	3,5	;RP0=1, select bank1
  6824  026F  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6825  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6826  0271  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6827  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6828  0273  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6829  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6830  0275  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6831  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6832  0277  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6833  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6834  0279  00DF               	movwf	??_Decodify_Command
  6835  027A  085F               	movf	??_Decodify_Command,w
  6836  027B  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6837  027C  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6838  027D  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6839  027E  3001               	movlw	1
  6840  027F  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6841  0280  1683               	bsf	3,5	;RP0=1, select bank3
  6842  0281  1703               	bsf	3,6	;RP1=1, select bank3
  6843  0282  0850               	movf	(_usart_protocol^(0+384)+6),w
  6844  0283  120A  158A  2023  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6845                           
  6846                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6847  0288  1683               	bsf	3,5	;RP0=1, select bank1
  6848  0289  1303               	bcf	3,6	;RP1=0, select bank1
  6849  028A  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6850  028B  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  6851                           
  6852                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6853  0290  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6854  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6855  0292  00DF               	movwf	??_Decodify_Command
  6856  0293  01E0               	clrf	??_Decodify_Command+1
  6857  0294  085F               	movf	??_Decodify_Command,w
  6858  0295  00A1               	movwf	USART_put_buffer@size
  6859  0296  0860               	movf	??_Decodify_Command+1,w
  6860  0297  00A2               	movwf	USART_put_buffer@size+1
  6861  0298  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6862  0299  160A  158A  2302   	fcall	_USART_put_buffer
  6863                           
  6864                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6865  029C  0008               	return
  6866  029D                     l7434:	
  6867                           
  6868                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6869  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6870  029E  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6871  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6872  02A0  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6873  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  6874  02A2  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6875  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6876  02A4  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6877  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6878  02A6  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6879  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  6880  02A8  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6881  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  6882  02AA  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6883  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  6884  02AC  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6885  02AD  1683               	bsf	3,5	;RP0=1, select bank3
  6886  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  6887  02AF  0855               	movf	(_usart_protocol^(0+384)+11),w
  6888  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  6889  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  6890  02B2  00DF               	movwf	??_Decodify_Command
  6891  02B3  085F               	movf	??_Decodify_Command,w
  6892  02B4  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6893  02B5  30D6               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6894  02B6  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6895  02B7  3001               	movlw	1
  6896  02B8  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6897  02B9  1683               	bsf	3,5	;RP0=1, select bank3
  6898  02BA  1703               	bsf	3,6	;RP1=1, select bank3
  6899  02BB  0850               	movf	(_usart_protocol^(0+384)+6),w
  6900  02BC  160A  118A  2527  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6901  02C1  292D               	goto	L7
  6902  02C2                     l7440:	
  6903                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  6904                           
  6905                           
  6906                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6907  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  6908  02C3  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6909  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  6910  02C5  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6911  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6912  02C7  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6913  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  6914  02C9  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6915  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  6916  02CB  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6917  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  6918  02CD  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6919  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  6920  02CF  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6921  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  6922  02D1  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6923  02D2  30D5               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6924  02D3  00DF               	movwf	??_Decodify_Command
  6925  02D4  085F               	movf	??_Decodify_Command,w
  6926  02D5  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6927  02D6  1683               	bsf	3,5	;RP0=1, select bank3
  6928  02D7  1703               	bsf	3,6	;RP1=1, select bank3
  6929  02D8  0850               	movf	(_usart_protocol^(0+384)+6),w
  6930  02D9  160A  118A  2434  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6931  02DE  292D               	goto	L7
  6932  02DF                     l7446:	
  6933                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  6934                           
  6935                           
  6936                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6937  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6938  02E0  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6939  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  6940  02E2  00AD               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6941  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  6942  02E4  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6943  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  6944  02E6  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6945  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  6946  02E8  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6947  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  6948  02EA  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6949  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  6950  02EC  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6951  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  6952  02EE  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6953  02EF  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6954  02F0  00DF               	movwf	??_Decodify_Command
  6955  02F1  085F               	movf	??_Decodify_Command,w
  6956  02F2  00AE               	movwf	EEPROM_24C1025_Read_Str@texto
  6957  02F3  1683               	bsf	3,5	;RP0=1, select bank3
  6958  02F4  1703               	bsf	3,6	;RP1=1, select bank3
  6959  02F5  0850               	movf	(_usart_protocol^(0+384)+6),w
  6960  02F6  160A  118A  268F  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6961                           
  6962                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  6963  02FB  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6964  02FC  160A  158A  21CB  120A  118A  	fcall	_strlen
  6965  0301  0820               	movf	?_strlen,w
  6966  0302  29BA               	goto	L9
  6967  0303                     l7452:	
  6968                           
  6969                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6970  0303  1683               	bsf	3,5	;RP0=1, select bank3
  6971  0304  1703               	bsf	3,6	;RP1=1, select bank3
  6972  0305  0851               	movf	(_usart_protocol^(0+384)+7),w
  6973  0306  1283               	bcf	3,5	;RP0=0, select bank0
  6974  0307  1303               	bcf	3,6	;RP1=0, select bank0
  6975  0308  00DF               	movwf	??_Decodify_Command
  6976  0309  01E0               	clrf	??_Decodify_Command+1
  6977  030A  085F               	movf	??_Decodify_Command,w
  6978  030B  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6979  030C  0860               	movf	??_Decodify_Command+1,w
  6980  030D  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6981  030E  1683               	bsf	3,5	;RP0=1, select bank3
  6982  030F  1703               	bsf	3,6	;RP1=1, select bank3
  6983  0310  0850               	movf	(_usart_protocol^(0+384)+6),w
  6984  0311  160A  118A  2003  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6985  0316  292D               	goto	L7
  6986  0317                     l7458:	
  6987                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  6988                           
  6989                           
  6990                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  6991  0317  1683               	bsf	3,5	;RP0=1, select bank1
  6992  0318  0866               	movf	_hora^(0+128),w	;volatile
  6993  0319  1283               	bcf	3,5	;RP0=0, select bank0
  6994  031A  00DF               	movwf	??_Decodify_Command
  6995  031B  01E0               	clrf	??_Decodify_Command+1
  6996  031C  085F               	movf	??_Decodify_Command,w
  6997  031D  00B1               	movwf	itoa@val
  6998  031E  0860               	movf	??_Decodify_Command+1,w
  6999  031F  00B2               	movwf	itoa@val+1
  7000  0320  300A               	movlw	10
  7001  0321  00B3               	movwf	itoa@base
  7002  0322  3000               	movlw	0
  7003  0323  00B4               	movwf	itoa@base+1
  7004  0324  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7005  0325  160A  158A  227D  120A  118A  	fcall	_itoa
  7006                           
  7007                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7008  032A  1683               	bsf	3,5	;RP0=1, select bank1
  7009  032B  0865               	movf	_minuto^(0+128),w	;volatile
  7010  032C  1283               	bcf	3,5	;RP0=0, select bank0
  7011  032D  00DF               	movwf	??_Decodify_Command
  7012  032E  01E0               	clrf	??_Decodify_Command+1
  7013  032F  085F               	movf	??_Decodify_Command,w
  7014  0330  00B1               	movwf	itoa@val
  7015  0331  0860               	movf	??_Decodify_Command+1,w
  7016  0332  00B2               	movwf	itoa@val+1
  7017  0333  300A               	movlw	10
  7018  0334  00B3               	movwf	itoa@base
  7019  0335  3000               	movlw	0
  7020  0336  00B4               	movwf	itoa@base+1
  7021  0337  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7022  0338  160A  158A  227D  120A  118A  	fcall	_itoa
  7023                           
  7024                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7025  033D  1683               	bsf	3,5	;RP0=1, select bank1
  7026  033E  0867               	movf	_segundo^(0+128),w	;volatile
  7027  033F  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0340  00DF               	movwf	??_Decodify_Command
  7029  0341  01E0               	clrf	??_Decodify_Command+1
  7030  0342  085F               	movf	??_Decodify_Command,w
  7031  0343  00B1               	movwf	itoa@val
  7032  0344  0860               	movf	??_Decodify_Command+1,w
  7033  0345  00B2               	movwf	itoa@val+1
  7034  0346  300A               	movlw	10
  7035  0347  00B3               	movwf	itoa@base
  7036  0348  3000               	movlw	0
  7037  0349  00B4               	movwf	itoa@base+1
  7038  034A  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7039  034B  160A  158A  227D  120A  118A  	fcall	_itoa
  7040                           
  7041                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7042  0350  304D               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7043  0351  00DF               	movwf	??_Decodify_Command
  7044  0352  085F               	movf	??_Decodify_Command,w
  7045  0353  00A0               	movwf	strcpy@from
  7046  0354  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7047  0355  160A  158A  2201  120A  118A  	fcall	_strcpy
  7048                           
  7049                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7050  035A  1683               	bsf	3,5	;RP0=1, select bank1
  7051  035B  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7052  035C  1D03               	btfss	3,2
  7053  035D  2B6B               	goto	l7466
  7054                           
  7055                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7056  035E  304C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7057  035F  1283               	bcf	3,5	;RP0=0, select bank0
  7058  0360  00A0               	movwf	strcat@from
  7059  0361  3080               	movlw	128
  7060  0362  00A1               	movwf	strcat@from+1
  7061  0363  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7062  0364  160A  158A  23CB  120A  118A  	fcall	_strcat
  7063                           
  7064                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7065  0369  1683               	bsf	3,5	;RP0=1, select bank1
  7066  036A  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7067  036B                     l7466:	
  7068                           
  7069                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7070  036B  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7071  036C  1283               	bcf	3,5	;RP0=0, select bank0
  7072  036D  00A0               	movwf	strcat@from
  7073  036E  3000               	movlw	0
  7074  036F  00A1               	movwf	strcat@from+1
  7075  0370  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7076  0371  160A  158A  23CB  120A  118A  	fcall	_strcat
  7077                           
  7078                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7079  0376  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7080  0377  00A0               	movwf	strcat@from
  7081  0378  3080               	movlw	128
  7082  0379  00A1               	movwf	strcat@from+1
  7083  037A  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7084  037B  160A  158A  23CB  120A  118A  	fcall	_strcat
  7085                           
  7086                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7087  0380  1683               	bsf	3,5	;RP0=1, select bank1
  7088  0381  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7089  0382  1D03               	btfss	3,2
  7090  0383  2B91               	goto	l7476
  7091                           
  7092                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7093  0384  304C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7094  0385  1283               	bcf	3,5	;RP0=0, select bank0
  7095  0386  00A0               	movwf	strcat@from
  7096  0387  3080               	movlw	128
  7097  0388  00A1               	movwf	strcat@from+1
  7098  0389  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7099  038A  160A  158A  23CB  120A  118A  	fcall	_strcat
  7100                           
  7101                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7102  038F  1683               	bsf	3,5	;RP0=1, select bank1
  7103  0390  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7104  0391                     l7476:	
  7105                           
  7106                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7107  0391  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7108  0392  1283               	bcf	3,5	;RP0=0, select bank0
  7109  0393  00A0               	movwf	strcat@from
  7110  0394  3000               	movlw	0
  7111  0395  00A1               	movwf	strcat@from+1
  7112  0396  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7113  0397  160A  158A  23CB  120A  118A  	fcall	_strcat
  7114                           
  7115                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7116  039C  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7117  039D  00A0               	movwf	strcat@from
  7118  039E  3080               	movlw	128
  7119  039F  00A1               	movwf	strcat@from+1
  7120  03A0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7121  03A1  160A  158A  23CB  120A  118A  	fcall	_strcat
  7122                           
  7123                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7124  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  7125  03A7  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7126  03A8  1D03               	btfss	3,2
  7127  03A9  2BB7               	goto	l7486
  7128                           
  7129                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7130  03AA  304C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7131  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  7132  03AC  00A0               	movwf	strcat@from
  7133  03AD  3080               	movlw	128
  7134  03AE  00A1               	movwf	strcat@from+1
  7135  03AF  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7136  03B0  160A  158A  23CB  120A  118A  	fcall	_strcat
  7137                           
  7138                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7139  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  7140  03B6  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7141  03B7                     l7486:	
  7142                           
  7143                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7144  03B7  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7145  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  7146  03B9  00A0               	movwf	strcat@from
  7147  03BA  3000               	movlw	0
  7148  03BB  00A1               	movwf	strcat@from+1
  7149  03BC  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7150  03BD  160A  158A  23CB  120A  118A  	fcall	_strcat
  7151                           
  7152                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7153  03C2  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7154  03C3  160A  158A  21CB  120A  118A  	fcall	_strlen
  7155  03C8  0820               	movf	?_strlen,w
  7156  03C9  160A  158A  234E  120A  118A  	fcall	_Send_To_MB
  7157                           
  7158                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7159  03CE  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7160  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  7161  03D0  00A1               	movwf	USART_put_string@vetor
  7162  03D1  3001               	movlw	1
  7163  03D2  00A2               	movwf	USART_put_string@vetor+1
  7164  03D3  160A  158A  248A  120A  118A  	fcall	_USART_put_string
  7165                           
  7166                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7167  03D8  3000               	movlw	0
  7168  03D9  160A  158A  2133   	fcall	_USART_putc
  7169                           
  7170                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7171  03DC  0008               	return
  7172  03DD                     l7494:	
  7173                           
  7174                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7175  03DD  1683               	bsf	3,5	;RP0=1, select bank3
  7176  03DE  1703               	bsf	3,6	;RP1=1, select bank3
  7177  03DF  0850               	movf	(_usart_protocol^(0+384)+6),w
  7178  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  7179  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  7180  03E2  00DF               	movwf	??_Decodify_Command
  7181  03E3  085F               	movf	??_Decodify_Command,w
  7182  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  7183  03E5  00E6               	movwf	_hora^(0+128)	;volatile
  7184                           
  7185                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7186  03E6  1703               	bsf	3,6	;RP1=1, select bank3
  7187  03E7  0851               	movf	(_usart_protocol^(0+384)+7),w
  7188  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  7189  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  7190  03EA  00DF               	movwf	??_Decodify_Command
  7191  03EB  085F               	movf	??_Decodify_Command,w
  7192  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  7193  03ED  00E5               	movwf	_minuto^(0+128)	;volatile
  7194                           
  7195                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7196  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  7197  03EF  0852               	movf	(_usart_protocol^(0+384)+8),w
  7198  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  7199  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  7200  03F2  00DF               	movwf	??_Decodify_Command
  7201  03F3  085F               	movf	??_Decodify_Command,w
  7202  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  7203  03F5  00E7               	movwf	_segundo^(0+128)	;volatile
  7204  03F6  292D               	goto	L7
  7205  03F7                     l7500:	
  7206                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7207                           
  7208                           
  7209                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7210  03F7  1683               	bsf	3,5	;RP0=1, select bank3
  7211  03F8  1703               	bsf	3,6	;RP1=1, select bank3
  7212  03F9  0850               	movf	(_usart_protocol^(0+384)+6),w
  7213  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  7214  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  7215  03FC  00DF               	movwf	??_Decodify_Command
  7216  03FD  01E0               	clrf	??_Decodify_Command+1
  7217  03FE  085F               	movf	??_Decodify_Command,w
  7218  03FF  00D6               	movwf	PROCULUS_Show_Screen@screen
  7219  0400  0860               	movf	??_Decodify_Command+1,w
  7220  0401  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7221  0402  160A  158A  2143  120A  118A  	fcall	_PROCULUS_Show_Screen
  7222  0407  292D               	goto	L7
  7223  0408                     l7506:	
  7224                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7225                           
  7226                           
  7227                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7228  0408  1683               	bsf	3,5	;RP0=1, select bank3
  7229  0409  1703               	bsf	3,6	;RP1=1, select bank3
  7230  040A  0850               	movf	(_usart_protocol^(0+384)+6),w
  7231  040B  1283               	bcf	3,5	;RP0=0, select bank0
  7232  040C  1303               	bcf	3,6	;RP1=0, select bank0
  7233  040D  00DF               	movwf	??_Decodify_Command
  7234  040E  01E0               	clrf	??_Decodify_Command+1
  7235  040F  085F               	movf	??_Decodify_Command,w
  7236  0410  00E0               	movwf	??_Decodify_Command+1
  7237  0411  01DF               	clrf	??_Decodify_Command
  7238  0412  1683               	bsf	3,5	;RP0=1, select bank3
  7239  0413  1703               	bsf	3,6	;RP1=1, select bank3
  7240  0414  0851               	movf	(_usart_protocol^(0+384)+7),w
  7241  0415  1283               	bcf	3,5	;RP0=0, select bank0
  7242  0416  1303               	bcf	3,6	;RP1=0, select bank0
  7243  0417  075F               	addwf	??_Decodify_Command,w
  7244  0418  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7245  0419  3000               	movlw	0
  7246  041A  1803               	skipnc
  7247  041B  3001               	movlw	1
  7248  041C  0760               	addwf	??_Decodify_Command+1,w
  7249  041D  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7250  041E  160A  158A  22E0  120A  118A  	fcall	_PROCULUS_Buzzer
  7251  0423  292D               	goto	L7
  7252  0424                     l7512:	
  7253                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7254                           
  7255                           
  7256                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7257  0424  1683               	bsf	3,5	;RP0=1, select bank3
  7258  0425  1703               	bsf	3,6	;RP1=1, select bank3
  7259  0426  0850               	movf	(_usart_protocol^(0+384)+6),w
  7260  0427  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0428  1303               	bcf	3,6	;RP1=0, select bank0
  7262  0429  00DF               	movwf	??_Decodify_Command
  7263  042A  01E0               	clrf	??_Decodify_Command+1
  7264  042B  085F               	movf	??_Decodify_Command,w
  7265  042C  00E0               	movwf	??_Decodify_Command+1
  7266  042D  01DF               	clrf	??_Decodify_Command
  7267  042E  1683               	bsf	3,5	;RP0=1, select bank3
  7268  042F  1703               	bsf	3,6	;RP1=1, select bank3
  7269  0430  0851               	movf	(_usart_protocol^(0+384)+7),w
  7270  0431  1283               	bcf	3,5	;RP0=0, select bank0
  7271  0432  1303               	bcf	3,6	;RP1=0, select bank0
  7272  0433  075F               	addwf	??_Decodify_Command,w
  7273  0434  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7274  0435  3000               	movlw	0
  7275  0436  1803               	skipnc
  7276  0437  3001               	movlw	1
  7277  0438  0760               	addwf	??_Decodify_Command+1,w
  7278  0439  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7279  043A  30D2               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7280  043B  00E1               	movwf	??_Decodify_Command+2
  7281  043C  0861               	movf	??_Decodify_Command+2,w
  7282  043D  00DC               	movwf	PROCULUS_VP_Write_String@text
  7283  043E  160A  158A  2184  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7284  0443  292D               	goto	L7
  7285  0444                     l7518:	
  7286                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7287                           
  7288                           
  7289                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7290  0444  1683               	bsf	3,5	;RP0=1, select bank3
  7291  0445  1703               	bsf	3,6	;RP1=1, select bank3
  7292  0446  0850               	movf	(_usart_protocol^(0+384)+6),w
  7293  0447  1D03               	btfss	3,2
  7294  0448  2C54               	goto	l7524
  7295                           
  7296                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7297  0449  0851               	movf	(_usart_protocol^(0+384)+7),w
  7298  044A  1D03               	btfss	3,2
  7299  044B  2C50               	goto	l417
  7300                           
  7301                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7302  044C  1283               	bcf	3,5	;RP0=0, select bank0
  7303  044D  1303               	bcf	3,6	;RP1=0, select bank0
  7304  044E  1007               	bcf	7,0	;volatile
  7305  044F  292D               	goto	L7
  7306  0450                     l417:	
  7307                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7308                           
  7309                           
  7310                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7311  0450  1283               	bcf	3,5	;RP0=0, select bank0
  7312  0451  1303               	bcf	3,6	;RP1=0, select bank0
  7313  0452  1407               	bsf	7,0	;volatile
  7314  0453  292D               	goto	L7
  7315  0454                     l7524:	
  7316  0454  0350               	decf	(_usart_protocol^(0+384)+6),w
  7317  0455  1D03               	btfss	3,2
  7318  0456  292D               	goto	L7
  7319                           
  7320                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7321  0457  0851               	movf	(_usart_protocol^(0+384)+7),w
  7322  0458  1D03               	btfss	3,2
  7323  0459  2C5E               	goto	l421
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7326  045A  1283               	bcf	3,5	;RP0=0, select bank0
  7327  045B  1303               	bcf	3,6	;RP1=0, select bank0
  7328  045C  1087               	bcf	7,1	;volatile
  7329  045D  292D               	goto	L7
  7330  045E                     l421:	
  7331                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7332                           
  7333                           
  7334                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7335  045E  1283               	bcf	3,5	;RP0=0, select bank0
  7336  045F  1303               	bcf	3,6	;RP1=0, select bank0
  7337  0460  1487               	bsf	7,1	;volatile
  7338  0461  292D               	goto	L7
  7339  0462                     l7536:	
  7340                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7341                           
  7342  0462  1703               	bsf	3,6	;RP1=1, select bank3
  7343  0463  084E               	movf	(_usart_protocol^(0+384)+4),w
  7344  0464  1283               	bcf	3,5	;RP0=0, select bank0
  7345  0465  1303               	bcf	3,6	;RP1=0, select bank0
  7346  0466  00DF               	movwf	??_Decodify_Command
  7347  0467  01E0               	clrf	??_Decodify_Command+1
  7348                           
  7349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7350                           ; Switch size 1, requested type "simple"
  7351                           ; Number of cases is 1, Range of values is 0 to 0
  7352                           ; switch strategies available:
  7353                           ; Name         Instructions Cycles
  7354                           ; simple_byte            4     3 (average)
  7355                           ; direct_byte           11     8 (fixed)
  7356                           ; jumptable            260     6 (fixed)
  7357                           ;	Chosen strategy is simple_byte
  7358  0468  0860               	movf	??_Decodify_Command+1,w
  7359  0469  3A00               	xorlw	0	; case 0
  7360  046A  1903               	skipnz
  7361  046B  2C6D               	goto	l7694
  7362  046C  2CBA               	goto	l423
  7363  046D                     l7694:	
  7364                           
  7365                           ; Switch size 1, requested type "simple"
  7366                           ; Number of cases is 25, Range of values is 2 to 65
  7367                           ; switch strategies available:
  7368                           ; Name         Instructions Cycles
  7369                           ; simple_byte           76    39 (average)
  7370                           ; direct_byte          203    11 (fixed)
  7371                           ; jumptable            263     9 (fixed)
  7372                           ;	Chosen strategy is simple_byte
  7373  046D  085F               	movf	??_Decodify_Command,w
  7374  046E  3A02               	xorlw	2	; case 2
  7375  046F  1903               	skipnz
  7376  0470  28D5               	goto	l7352
  7377  0471  3A01               	xorlw	1	; case 3
  7378  0472  1903               	skipnz
  7379  0473  290E               	goto	l7360
  7380  0474  3A0B               	xorlw	11	; case 8
  7381  0475  1903               	skipnz
  7382  0476  291D               	goto	l7364
  7383  0477  3A01               	xorlw	1	; case 9
  7384  0478  1903               	skipnz
  7385  0479  2937               	goto	l7368
  7386  047A  3A03               	xorlw	3	; case 10
  7387  047B  1903               	skipnz
  7388  047C  294F               	goto	l7374
  7389  047D  3A01               	xorlw	1	; case 11
  7390  047E  1903               	skipnz
  7391  047F  2980               	goto	l7384
  7392  0480  3A07               	xorlw	7	; case 12
  7393  0481  1903               	skipnz
  7394  0482  29A0               	goto	l7390
  7395  0483  3A01               	xorlw	1	; case 13
  7396  0484  1903               	skipnz
  7397  0485  29AD               	goto	l7396
  7398  0486  3A1C               	xorlw	28	; case 17
  7399  0487  1903               	skipnz
  7400  0488  29C8               	goto	l7402
  7401  0489  3A03               	xorlw	3	; case 18
  7402  048A  1903               	skipnz
  7403  048B  29E9               	goto	l7408
  7404  048C  3A01               	xorlw	1	; case 19
  7405  048D  1903               	skipnz
  7406  048E  2A10               	goto	l7414
  7407  048F  3A07               	xorlw	7	; case 20
  7408  0490  1903               	skipnz
  7409  0491  2A40               	goto	l7420
  7410  0492  3A01               	xorlw	1	; case 21
  7411  0493  1903               	skipnz
  7412  0494  2AC2               	goto	l7440
  7413  0495  3A03               	xorlw	3	; case 22
  7414  0496  1903               	skipnz
  7415  0497  2ADF               	goto	l7446
  7416  0498  3A01               	xorlw	1	; case 23
  7417  0499  1903               	skipnz
  7418  049A  2A9D               	goto	l7434
  7419  049B  3A0F               	xorlw	15	; case 24
  7420  049C  1903               	skipnz
  7421  049D  2A5E               	goto	l7426
  7422  049E  3A01               	xorlw	1	; case 25
  7423  049F  1903               	skipnz
  7424  04A0  2B03               	goto	l7452
  7425  04A1  3A03               	xorlw	3	; case 26
  7426  04A2  1903               	skipnz
  7427  04A3  286D               	goto	l7336
  7428  04A4  3A38               	xorlw	56	; case 34
  7429  04A5  1903               	skipnz
  7430  04A6  2C24               	goto	l7512
  7431  04A7  3A06               	xorlw	6	; case 36
  7432  04A8  1903               	skipnz
  7433  04A9  2C08               	goto	l7506
  7434  04AA  3A01               	xorlw	1	; case 37
  7435  04AB  1903               	skipnz
  7436  04AC  2BF7               	goto	l7500
  7437  04AD  3A0B               	xorlw	11	; case 46
  7438  04AE  1903               	skipnz
  7439  04AF  2BDD               	goto	l7494
  7440  04B0  3A01               	xorlw	1	; case 47
  7441  04B1  1903               	skipnz
  7442  04B2  2B17               	goto	l7458
  7443  04B3  3A1F               	xorlw	31	; case 48
  7444  04B4  1903               	skipnz
  7445  04B5  2C44               	goto	l7518
  7446  04B6  3A71               	xorlw	113	; case 65
  7447  04B7  1903               	skipnz
  7448  04B8  285E               	goto	l7332
  7449  04B9  2CBA               	goto	l423
  7450  04BA                     l423:	
  7451  04BA  0008               	return
  7452  04BB                     __end_of_Decodify_Command:	
  7453                           
  7454                           	psect	text16
  7455  1A01                     __ptext16:	
  7456 ;; *************** function _strcpy *****************
  7457 ;; Defined at:
  7458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  to              1    wreg     PTR unsigned char 
  7461 ;;		 -> texto(16), 
  7462 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7463 ;;		 -> STR_2(1), 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7466 ;;		 -> texto(16), 
  7467 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7468 ;;		 -> texto(16), 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      PTR unsigned char 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7473 ;; Tracked objects:
  7474 ;;		On entry : B00/0
  7475 ;;		On exit  : B00/800
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7478 ;;      Params:         0       1       0       0       0
  7479 ;;      Locals:         0       2       0       0       0
  7480 ;;      Temps:          0       1       0       0       0
  7481 ;;      Totals:         0       4       0       0       0
  7482 ;;Total ram usage:        4 bytes
  7483 ;; Hardware stack levels used:    2
  7484 ;; Hardware stack levels required when called:    1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_Decodify_Command
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _strcpy
  7494  1A01                     _strcpy:	
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7498                           ;strcpy@to stored from wreg
  7499  1A01  00A2               	movwf	strcpy@to
  7500  1A02  0822               	movf	strcpy@to,w
  7501  1A03  00A1               	movwf	??_strcpy
  7502  1A04  0821               	movf	??_strcpy,w
  7503  1A05  00A3               	movwf	strcpy@cp
  7504  1A06                     l6896:	
  7505  1A06  0820               	movf	strcpy@from,w
  7506  1A07  0084               	movwf	4
  7507  1A08  160A  158A  200A  160A  158A  	fcall	stringdir
  7508  1A0D  00A1               	movwf	??_strcpy
  7509  1A0E  0823               	movf	strcpy@cp,w
  7510  1A0F  0084               	movwf	4
  7511  1A10  0821               	movf	??_strcpy,w
  7512  1A11  1783               	bsf	3,7	;select IRP bank2
  7513  1A12  0080               	movwf	0
  7514  1A13  0800               	movf	0,w
  7515  1A14  1903               	btfsc	3,2
  7516  1A15  0008               	return
  7517  1A16  3001               	movlw	1
  7518  1A17  00A1               	movwf	??_strcpy
  7519  1A18  0821               	movf	??_strcpy,w
  7520  1A19  07A3               	addwf	strcpy@cp,f
  7521  1A1A  3001               	movlw	1
  7522  1A1B  00A1               	movwf	??_strcpy
  7523  1A1C  0821               	movf	??_strcpy,w
  7524  1A1D  07A0               	addwf	strcpy@from,f
  7525  1A1E  2A06               	goto	l6896
  7526  1A1F                     __end_of_strcpy:	
  7527                           
  7528                           	psect	text17
  7529  1BCB                     __ptext17:	
  7530 ;; *************** function _strcat *****************
  7531 ;; Defined at:
  7532 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  to              1    wreg     PTR unsigned char 
  7535 ;;		 -> texto(16), 
  7536 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7537 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7538 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7541 ;;		 -> texto(16), 
  7542 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7543 ;;		 -> texto(16), 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      PTR unsigned char 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7548 ;; Tracked objects:
  7549 ;;		On entry : B00/800
  7550 ;;		On exit  : B00/800
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7553 ;;      Params:         0       2       0       0       0
  7554 ;;      Locals:         0       2       0       0       0
  7555 ;;      Temps:          0       1       0       0       0
  7556 ;;      Totals:         0       5       0       0       0
  7557 ;;Total ram usage:        5 bytes
  7558 ;; Hardware stack levels used:    2
  7559 ;; Hardware stack levels required when called:    1
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_Decodify_Command
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           
  7568                           ;psect for function _strcat
  7569  1BCB                     _strcat:	
  7570                           
  7571                           ;incstack = 0
  7572                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7573                           ;strcat@to stored from wreg
  7574  1BCB  00A4               	movwf	strcat@to
  7575  1BCC  0824               	movf	strcat@to,w
  7576  1BCD  00A2               	movwf	??_strcat
  7577  1BCE  0822               	movf	??_strcat,w
  7578  1BCF  00A3               	movwf	strcat@cp
  7579  1BD0                     l6902:	
  7580  1BD0  0823               	movf	strcat@cp,w
  7581  1BD1  0084               	movwf	4
  7582  1BD2  0800               	movf	0,w
  7583  1BD3  1903               	btfsc	3,2
  7584  1BD4  2BE4               	goto	l6908
  7585  1BD5  3001               	movlw	1
  7586  1BD6  00A2               	movwf	??_strcat
  7587  1BD7  0822               	movf	??_strcat,w
  7588  1BD8  07A3               	addwf	strcat@cp,f
  7589  1BD9  2BD0               	goto	l6902
  7590  1BDA                     l6904:	
  7591  1BDA  3001               	movlw	1
  7592  1BDB  00A2               	movwf	??_strcat
  7593  1BDC  0822               	movf	??_strcat,w
  7594  1BDD  07A3               	addwf	strcat@cp,f
  7595  1BDE  3001               	movlw	1
  7596  1BDF  07A0               	addwf	strcat@from,f
  7597  1BE0  1803               	skipnc
  7598  1BE1  0AA1               	incf	strcat@from+1,f
  7599  1BE2  3000               	movlw	0
  7600  1BE3  07A1               	addwf	strcat@from+1,f
  7601  1BE4                     l6908:	
  7602  1BE4  0821               	movf	strcat@from+1,w
  7603  1BE5  00FF               	movwf	127
  7604  1BE6  0820               	movf	strcat@from,w
  7605  1BE7  0084               	movwf	4
  7606  1BE8  160A  158A  2000  160A  158A  	fcall	stringtab
  7607  1BED  00A2               	movwf	??_strcat
  7608  1BEE  0823               	movf	strcat@cp,w
  7609  1BEF  0084               	movwf	4
  7610  1BF0  0822               	movf	??_strcat,w
  7611  1BF1  1783               	bsf	3,7	;select IRP bank2
  7612  1BF2  0080               	movwf	0
  7613  1BF3  0800               	movf	0,w
  7614  1BF4  1903               	btfsc	3,2
  7615  1BF5  0008               	return
  7616  1BF6  2BDA               	goto	l6904
  7617  1BF7                     __end_of_strcat:	
  7618                           
  7619                           	psect	text18
  7620  1A7D                     __ptext18:	
  7621 ;; *************** function _itoa *****************
  7622 ;; Defined at:
  7623 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  buf             1    wreg     PTR unsigned char 
  7626 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7627 ;;  val             2   17[BANK0 ] int 
  7628 ;;  base            2   19[BANK0 ] int 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7631 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7632 ;;  cp              1    0        PTR unsigned char 
  7633 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      PTR unsigned char 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 300/0
  7640 ;;		On exit  : B00/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7643 ;;      Params:         0       4       0       0       0
  7644 ;;      Locals:         0       2       0       0       0
  7645 ;;      Temps:          0       1       0       0       0
  7646 ;;      Totals:         0       7       0       0       0
  7647 ;;Total ram usage:        7 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:    3
  7650 ;; This function calls:
  7651 ;;		_utoa
  7652 ;; This function is called by:
  7653 ;;		_Decodify_Command
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           
  7658                           ;psect for function _itoa
  7659  1A7D                     _itoa:	
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7663                           ;itoa@buf stored from wreg
  7664  1A7D  00B7               	movwf	itoa@buf
  7665  1A7E  1FB2               	btfss	itoa@val+1,7
  7666  1A7F  2A90               	goto	l6888
  7667  1A80  302D               	movlw	45
  7668  1A81  00B5               	movwf	??_itoa
  7669  1A82  0837               	movf	itoa@buf,w
  7670  1A83  0084               	movwf	4
  7671  1A84  0835               	movf	??_itoa,w
  7672  1A85  1383               	bcf	3,7	;select IRP bank0
  7673  1A86  0080               	movwf	0
  7674  1A87  3001               	movlw	1
  7675  1A88  00B5               	movwf	??_itoa
  7676  1A89  0835               	movf	??_itoa,w
  7677  1A8A  07B7               	addwf	itoa@buf,f
  7678  1A8B  09B1               	comf	itoa@val,f
  7679  1A8C  09B2               	comf	itoa@val+1,f
  7680  1A8D  0AB1               	incf	itoa@val,f
  7681  1A8E  1903               	skipnz
  7682  1A8F  0AB2               	incf	itoa@val+1,f
  7683  1A90                     l6888:	
  7684  1A90  0832               	movf	itoa@val+1,w
  7685  1A91  00A9               	movwf	utoa@val+1
  7686  1A92  0831               	movf	itoa@val,w
  7687  1A93  00A8               	movwf	utoa@val
  7688  1A94  0834               	movf	itoa@base+1,w
  7689  1A95  00AB               	movwf	utoa@base+1
  7690  1A96  0833               	movf	itoa@base,w
  7691  1A97  00AA               	movwf	utoa@base
  7692  1A98  0837               	movf	itoa@buf,w
  7693  1A99  160A  158A  279C   	fcall	_utoa
  7694  1A9C  0008               	return
  7695  1A9D                     __end_of_itoa:	
  7696                           
  7697                           	psect	text19
  7698  1F9C                     __ptext19:	
  7699 ;; *************** function _utoa *****************
  7700 ;; Defined at:
  7701 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  buf             1    wreg     PTR unsigned char 
  7704 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7705 ;;  val             2    8[BANK0 ] unsigned int 
  7706 ;;  base            2   10[BANK0 ] int 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7709 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7710 ;;  v               2   13[BANK0 ] unsigned int 
  7711 ;;  c               1   15[BANK0 ] unsigned char 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      PTR unsigned char 
  7714 ;; Registers used:
  7715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 300/0
  7718 ;;		On exit  : B00/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7721 ;;      Params:         0       4       0       0       0
  7722 ;;      Locals:         0       4       0       0       0
  7723 ;;      Temps:          0       1       0       0       0
  7724 ;;      Totals:         0       9       0       0       0
  7725 ;;Total ram usage:        9 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    2
  7728 ;; This function calls:
  7729 ;;		___lwdiv
  7730 ;;		___lwmod
  7731 ;; This function is called by:
  7732 ;;		_itoa
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function _utoa
  7738  1F9C                     _utoa:	
  7739                           
  7740                           ;incstack = 0
  7741                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7742                           ;utoa@buf stored from wreg
  7743  1F9C  00B0               	movwf	utoa@buf
  7744  1F9D  0829               	movf	utoa@val+1,w
  7745  1F9E  00AE               	movwf	utoa@v+1
  7746  1F9F  0828               	movf	utoa@val,w
  7747  1FA0  00AD               	movwf	utoa@v
  7748  1FA1                     l6550:	
  7749  1FA1  082B               	movf	utoa@base+1,w
  7750  1FA2  00A1               	movwf	___lwdiv@divisor+1
  7751  1FA3  082A               	movf	utoa@base,w
  7752  1FA4  00A0               	movwf	___lwdiv@divisor
  7753  1FA5  082E               	movf	utoa@v+1,w
  7754  1FA6  00A3               	movwf	___lwdiv@dividend+1
  7755  1FA7  082D               	movf	utoa@v,w
  7756  1FA8  00A2               	movwf	___lwdiv@dividend
  7757  1FA9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7758  1FAE  0821               	movf	?___lwdiv+1,w
  7759  1FAF  00AE               	movwf	utoa@v+1
  7760  1FB0  0820               	movf	?___lwdiv,w
  7761  1FB1  00AD               	movwf	utoa@v
  7762  1FB2  3001               	movlw	1
  7763  1FB3  00AC               	movwf	??_utoa
  7764  1FB4  082C               	movf	??_utoa,w
  7765  1FB5  07B0               	addwf	utoa@buf,f
  7766  1FB6  082D               	movf	utoa@v,w
  7767  1FB7  042E               	iorwf	utoa@v+1,w
  7768  1FB8  1D03               	btfss	3,2
  7769  1FB9  2FA1               	goto	l6550
  7770  1FBA  0830               	movf	utoa@buf,w
  7771  1FBB  0084               	movwf	4
  7772  1FBC  1383               	bcf	3,7	;select IRP bank0
  7773  1FBD  0180               	clrf	0
  7774  1FBE  3001               	movlw	1
  7775  1FBF  02B0               	subwf	utoa@buf,f
  7776  1FC0                     l6560:	
  7777  1FC0  082B               	movf	utoa@base+1,w
  7778  1FC1  00A1               	movwf	___lwmod@divisor+1
  7779  1FC2  082A               	movf	utoa@base,w
  7780  1FC3  00A0               	movwf	___lwmod@divisor
  7781  1FC4  0829               	movf	utoa@val+1,w
  7782  1FC5  00A3               	movwf	___lwmod@dividend+1
  7783  1FC6  0828               	movf	utoa@val,w
  7784  1FC7  00A2               	movwf	___lwmod@dividend
  7785  1FC8  160A  158A  2458  160A  158A  	fcall	___lwmod
  7786  1FCD  0820               	movf	?___lwmod,w
  7787  1FCE  00AC               	movwf	??_utoa
  7788  1FCF  082C               	movf	??_utoa,w
  7789  1FD0  00AF               	movwf	utoa@c
  7790  1FD1  082B               	movf	utoa@base+1,w
  7791  1FD2  00A1               	movwf	___lwdiv@divisor+1
  7792  1FD3  082A               	movf	utoa@base,w
  7793  1FD4  00A0               	movwf	___lwdiv@divisor
  7794  1FD5  0829               	movf	utoa@val+1,w
  7795  1FD6  00A3               	movwf	___lwdiv@dividend+1
  7796  1FD7  0828               	movf	utoa@val,w
  7797  1FD8  00A2               	movwf	___lwdiv@dividend
  7798  1FD9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7799  1FDE  0821               	movf	?___lwdiv+1,w
  7800  1FDF  00A9               	movwf	utoa@val+1
  7801  1FE0  0820               	movf	?___lwdiv,w
  7802  1FE1  00A8               	movwf	utoa@val
  7803  1FE2  300A               	movlw	10
  7804  1FE3  022F               	subwf	utoa@c,w
  7805  1FE4  1C03               	skipc
  7806  1FE5  2FEA               	goto	l1441
  7807  1FE6  3007               	movlw	7
  7808  1FE7  00AC               	movwf	??_utoa
  7809  1FE8  082C               	movf	??_utoa,w
  7810  1FE9  07AF               	addwf	utoa@c,f
  7811  1FEA                     l1441:	
  7812  1FEA  3030               	movlw	48
  7813  1FEB  00AC               	movwf	??_utoa
  7814  1FEC  082C               	movf	??_utoa,w
  7815  1FED  07AF               	addwf	utoa@c,f
  7816  1FEE  082F               	movf	utoa@c,w
  7817  1FEF  00AC               	movwf	??_utoa
  7818  1FF0  0830               	movf	utoa@buf,w
  7819  1FF1  0084               	movwf	4
  7820  1FF2  082C               	movf	??_utoa,w
  7821  1FF3  1383               	bcf	3,7	;select IRP bank0
  7822  1FF4  0080               	movwf	0
  7823  1FF5  3001               	movlw	1
  7824  1FF6  02B0               	subwf	utoa@buf,f
  7825  1FF7  0828               	movf	utoa@val,w
  7826  1FF8  0429               	iorwf	utoa@val+1,w
  7827  1FF9  1D03               	btfss	3,2
  7828  1FFA  2FC0               	goto	l6560
  7829                           
  7830                           ;	Return value of _utoa is never used
  7831  1FFB  3001               	movlw	1
  7832  1FFC  00AC               	movwf	??_utoa
  7833  1FFD  082C               	movf	??_utoa,w
  7834  1FFE  07B0               	addwf	utoa@buf,f
  7835  1FFF  0008               	return
  7836  2000                     __end_of_utoa:	
  7837                           
  7838                           	psect	text20
  7839  1C58                     __ptext20:	
  7840 ;; *************** function ___lwmod *****************
  7841 ;; Defined at:
  7842 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  divisor         2    0[BANK0 ] unsigned int 
  7845 ;;  dividend        2    2[BANK0 ] unsigned int 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  counter         1    5[BANK0 ] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  2    0[BANK0 ] unsigned int 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 300/0
  7854 ;;		On exit  : 300/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7857 ;;      Params:         0       4       0       0       0
  7858 ;;      Locals:         0       1       0       0       0
  7859 ;;      Temps:          0       1       0       0       0
  7860 ;;      Totals:         0       6       0       0       0
  7861 ;;Total ram usage:        6 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_utoa
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           
  7872                           ;psect for function ___lwmod
  7873  1C58                     ___lwmod:	
  7874                           
  7875                           ;incstack = 0
  7876                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7877  1C58  0820               	movf	___lwmod@divisor,w
  7878  1C59  0421               	iorwf	___lwmod@divisor+1,w
  7879  1C5A  1903               	btfsc	3,2
  7880  1C5B  2C85               	goto	l5916
  7881  1C5C  01A5               	clrf	___lwmod@counter
  7882  1C5D  0AA5               	incf	___lwmod@counter,f
  7883  1C5E                     l5906:	
  7884  1C5E  1BA1               	btfsc	___lwmod@divisor+1,7
  7885  1C5F  2C6C               	goto	l5908
  7886  1C60  3001               	movlw	1
  7887  1C61                     u5825:	
  7888  1C61  1003               	clrc
  7889  1C62  0DA0               	rlf	___lwmod@divisor,f
  7890  1C63  0DA1               	rlf	___lwmod@divisor+1,f
  7891  1C64  3EFF               	addlw	-1
  7892  1C65  1D03               	skipz
  7893  1C66  2C61               	goto	u5825
  7894  1C67  3001               	movlw	1
  7895  1C68  00A4               	movwf	??___lwmod
  7896  1C69  0824               	movf	??___lwmod,w
  7897  1C6A  07A5               	addwf	___lwmod@counter,f
  7898  1C6B  2C5E               	goto	l5906
  7899  1C6C                     l5908:	
  7900  1C6C  0821               	movf	___lwmod@divisor+1,w
  7901  1C6D  0223               	subwf	___lwmod@dividend+1,w
  7902  1C6E  1D03               	skipz
  7903  1C6F  2C72               	goto	u5845
  7904  1C70  0820               	movf	___lwmod@divisor,w
  7905  1C71  0222               	subwf	___lwmod@dividend,w
  7906  1C72                     u5845:	
  7907  1C72  1C03               	skipc
  7908  1C73  2C7A               	goto	l5912
  7909  1C74  0820               	movf	___lwmod@divisor,w
  7910  1C75  02A2               	subwf	___lwmod@dividend,f
  7911  1C76  0821               	movf	___lwmod@divisor+1,w
  7912  1C77  1C03               	skipc
  7913  1C78  03A3               	decf	___lwmod@dividend+1,f
  7914  1C79  02A3               	subwf	___lwmod@dividend+1,f
  7915  1C7A                     l5912:	
  7916  1C7A  3001               	movlw	1
  7917  1C7B                     u5855:	
  7918  1C7B  1003               	clrc
  7919  1C7C  0CA1               	rrf	___lwmod@divisor+1,f
  7920  1C7D  0CA0               	rrf	___lwmod@divisor,f
  7921  1C7E  3EFF               	addlw	-1
  7922  1C7F  1D03               	skipz
  7923  1C80  2C7B               	goto	u5855
  7924  1C81  3001               	movlw	1
  7925  1C82  02A5               	subwf	___lwmod@counter,f
  7926  1C83  1D03               	btfss	3,2
  7927  1C84  2C6C               	goto	l5908
  7928  1C85                     l5916:	
  7929  1C85  0823               	movf	___lwmod@dividend+1,w
  7930  1C86  00A1               	movwf	?___lwmod+1
  7931  1C87  0822               	movf	___lwmod@dividend,w
  7932  1C88  00A0               	movwf	?___lwmod
  7933  1C89  0008               	return
  7934  1C8A                     __end_of___lwmod:	
  7935                           
  7936                           	psect	text21
  7937  1EE1                     __ptext21:	
  7938 ;; *************** function _USART_to_Protocol *****************
  7939 ;; Defined at:
  7940 ;;		line 77 in file "usart.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  usart_protoc    1    wreg     PTR struct .
  7943 ;;		 -> usart_protocol(16), 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7946 ;;		 -> usart_protocol(16), 
  7947 ;;  i               2    2[BANK0 ] int 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 300/100
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7957 ;;      Params:         0       0       0       0       0
  7958 ;;      Locals:         0       3       0       0       0
  7959 ;;      Temps:          0       2       0       0       0
  7960 ;;      Totals:         0       5       0       0       0
  7961 ;;Total ram usage:        5 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    1
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_Decodify_Command
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _USART_to_Protocol
  7973  1EE1                     _USART_to_Protocol:	
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7977                           ;USART_to_Protocol@usart_protocol stored from wreg
  7978  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  7979  1EE2  00A4               	movwf	USART_to_Protocol@usart_protocol
  7980                           
  7981                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7982  1EE3  0824               	movf	USART_to_Protocol@usart_protocol,w
  7983  1EE4  0084               	movwf	4
  7984  1EE5  1683               	bsf	3,5	;RP0=1, select bank3
  7985  1EE6  1703               	bsf	3,6	;RP1=1, select bank3
  7986  1EE7  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  7987  1EE8  1783               	bsf	3,7	;select IRP bank2
  7988  1EE9  0080               	movwf	0
  7989  1EEA  0A84               	incf	4,f
  7990  1EEB  0810               	movf	_usart_buffer^(0+384),w	;volatile
  7991  1EEC  0080               	movwf	0
  7992                           
  7993                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7994  1EED  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  7995  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  7996  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
  7997  1EF0  00A0               	movwf	??_USART_to_Protocol
  7998  1EF1  0824               	movf	USART_to_Protocol@usart_protocol,w
  7999  1EF2  3E02               	addlw	2
  8000  1EF3  0084               	movwf	4
  8001  1EF4  0820               	movf	??_USART_to_Protocol,w
  8002  1EF5  0080               	movwf	0
  8003                           
  8004                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8005  1EF6  1683               	bsf	3,5	;RP0=1, select bank3
  8006  1EF7  1703               	bsf	3,6	;RP1=1, select bank3
  8007  1EF8  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8008  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  8009  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  8010  1EFB  00A0               	movwf	??_USART_to_Protocol
  8011  1EFC  0824               	movf	USART_to_Protocol@usart_protocol,w
  8012  1EFD  3E03               	addlw	3
  8013  1EFE  0084               	movwf	4
  8014  1EFF  0820               	movf	??_USART_to_Protocol,w
  8015  1F00  0080               	movwf	0
  8016                           
  8017                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8018  1F01  1683               	bsf	3,5	;RP0=1, select bank3
  8019  1F02  1703               	bsf	3,6	;RP1=1, select bank3
  8020  1F03  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8021  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  8022  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  8023  1F06  00A0               	movwf	??_USART_to_Protocol
  8024  1F07  0824               	movf	USART_to_Protocol@usart_protocol,w
  8025  1F08  3E04               	addlw	4
  8026  1F09  0084               	movwf	4
  8027  1F0A  0820               	movf	??_USART_to_Protocol,w
  8028  1F0B  0080               	movwf	0
  8029                           
  8030                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8031  1F0C  1683               	bsf	3,5	;RP0=1, select bank3
  8032  1F0D  1703               	bsf	3,6	;RP1=1, select bank3
  8033  1F0E  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8034  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1F10  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1F11  00A0               	movwf	??_USART_to_Protocol
  8037  1F12  0824               	movf	USART_to_Protocol@usart_protocol,w
  8038  1F13  3E05               	addlw	5
  8039  1F14  0084               	movwf	4
  8040  1F15  0820               	movf	??_USART_to_Protocol,w
  8041  1F16  0080               	movwf	0
  8042                           
  8043                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8044  1F17  01A2               	clrf	USART_to_Protocol@i
  8045  1F18  01A3               	clrf	USART_to_Protocol@i+1
  8046  1F19                     l6836:	
  8047  1F19  0824               	movf	USART_to_Protocol@usart_protocol,w
  8048  1F1A  3E05               	addlw	5
  8049  1F1B  0084               	movwf	4
  8050  1F1C  0823               	movf	USART_to_Protocol@i+1,w
  8051  1F1D  3A80               	xorlw	128
  8052  1F1E  00A0               	movwf	??_USART_to_Protocol
  8053  1F1F  3080               	movlw	128
  8054  1F20  0220               	subwf	??_USART_to_Protocol,w
  8055  1F21  1D03               	skipz
  8056  1F22  2F25               	goto	u7315
  8057  1F23  0800               	movf	0,w
  8058  1F24  0222               	subwf	USART_to_Protocol@i,w
  8059  1F25                     u7315:	
  8060  1F25  1803               	btfsc	3,0
  8061  1F26  0008               	return
  8062                           
  8063                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8064  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  8065  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  8066  1F29  0822               	movf	USART_to_Protocol@i,w
  8067  1F2A  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8068  1F2B  0084               	movwf	4
  8069  1F2C  1783               	bsf	3,7	;select IRP bank3
  8070  1F2D  0800               	movf	0,w
  8071  1F2E  00A0               	movwf	??_USART_to_Protocol
  8072  1F2F  0822               	movf	USART_to_Protocol@i,w
  8073  1F30  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8074  1F31  00A1               	movwf	??_USART_to_Protocol+1
  8075  1F32  0821               	movf	??_USART_to_Protocol+1,w
  8076  1F33  3E06               	addlw	6
  8077  1F34  0084               	movwf	4
  8078  1F35  0820               	movf	??_USART_to_Protocol,w
  8079  1F36  0080               	movwf	0
  8080  1F37  3001               	movlw	1
  8081  1F38  07A2               	addwf	USART_to_Protocol@i,f
  8082  1F39  1803               	skipnc
  8083  1F3A  0AA3               	incf	USART_to_Protocol@i+1,f
  8084  1F3B  3000               	movlw	0
  8085  1F3C  07A3               	addwf	USART_to_Protocol@i+1,f
  8086  1F3D  2F19               	goto	l6836
  8087  1F3E                     __end_of_USART_to_Protocol:	
  8088                           
  8089                           	psect	text22
  8090  1B02                     __ptext22:	
  8091 ;; *************** function _USART_put_buffer *****************
  8092 ;; Defined at:
  8093 ;;		line 99 in file "usart.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  vetor           1    wreg     PTR unsigned char 
  8096 ;;		 -> buffer(32), 
  8097 ;;  size            2    1[BANK0 ] unsigned int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8100 ;;		 -> buffer(32), 
  8101 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8102 ;;		 -> USART_put_buffer@vetor(1), 
  8103 ;;  loop            1    6[BANK0 ] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 300/0
  8110 ;;		On exit  : 300/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         0       2       0       0       0
  8114 ;;      Locals:         0       3       0       0       0
  8115 ;;      Temps:          0       2       0       0       0
  8116 ;;      Totals:         0       7       0       0       0
  8117 ;;Total ram usage:        7 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		_USART_putc
  8122 ;; This function is called by:
  8123 ;;		_Decodify_Command
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _USART_put_buffer
  8129  1B02                     _USART_put_buffer:	
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8133                           ;USART_put_buffer@vetor stored from wreg
  8134  1B02  00A5               	movwf	USART_put_buffer@vetor
  8135                           
  8136                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8137  1B03  01A6               	clrf	USART_put_buffer@loop
  8138                           
  8139                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8140  1B04  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8141  1B05  00A3               	movwf	??_USART_put_buffer
  8142  1B06  0823               	movf	??_USART_put_buffer,w
  8143  1B07  00A7               	movwf	USART_put_buffer@ptr
  8144  1B08                     l6876:	
  8145                           ;usart.c: 105:     while(loop<size)
  8146                           
  8147                           
  8148                           ;usart.c: 105:     while(loop<size)
  8149  1B08  0826               	movf	USART_put_buffer@loop,w
  8150  1B09  00A3               	movwf	??_USART_put_buffer
  8151  1B0A  01A4               	clrf	??_USART_put_buffer+1
  8152  1B0B  0822               	movf	USART_put_buffer@size+1,w
  8153  1B0C  0224               	subwf	??_USART_put_buffer+1,w
  8154  1B0D  1D03               	skipz
  8155  1B0E  2B11               	goto	u7345
  8156  1B0F  0821               	movf	USART_put_buffer@size,w
  8157  1B10  0223               	subwf	??_USART_put_buffer,w
  8158  1B11                     u7345:	
  8159  1B11  1803               	btfsc	3,0
  8160  1B12  0008               	return
  8161                           
  8162                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8163  1B13  0827               	movf	USART_put_buffer@ptr,w
  8164  1B14  0084               	movwf	4
  8165  1B15  1383               	bcf	3,7	;select IRP bank0
  8166  1B16  0800               	movf	0,w
  8167  1B17  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8168                           
  8169                           ;usart.c: 108:         ptr++;
  8170  1B1C  3001               	movlw	1
  8171  1B1D  1283               	bcf	3,5	;RP0=0, select bank0
  8172  1B1E  00A3               	movwf	??_USART_put_buffer
  8173  1B1F  0823               	movf	??_USART_put_buffer,w
  8174  1B20  07A7               	addwf	USART_put_buffer@ptr,f
  8175                           
  8176                           ;usart.c: 109:         loop++;
  8177  1B21  3001               	movlw	1
  8178  1B22  00A3               	movwf	??_USART_put_buffer
  8179  1B23  0823               	movf	??_USART_put_buffer,w
  8180  1B24  07A6               	addwf	USART_put_buffer@loop,f
  8181  1B25  2B08               	goto	l6876
  8182  1B26                     __end_of_USART_put_buffer:	
  8183                           
  8184                           	psect	text23
  8185  1B4E                     __ptext23:	
  8186 ;; *************** function _Send_To_MB *****************
  8187 ;; Defined at:
  8188 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  size            1    wreg     unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  size            1    1[BANK0 ] unsigned char 
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0, pclath, cstack
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 300/100
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8202 ;;      Params:         0       0       0       0       0
  8203 ;;      Locals:         0       1       0       0       0
  8204 ;;      Temps:          0       0       0       0       0
  8205 ;;      Totals:         0       1       0       0       0
  8206 ;;Total ram usage:        1 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    2
  8209 ;; This function calls:
  8210 ;;		_USART_putc
  8211 ;; This function is called by:
  8212 ;;		_Decodify_Command
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           
  8217                           ;psect for function _Send_To_MB
  8218  1B4E                     _Send_To_MB:	
  8219                           
  8220                           ;incstack = 0
  8221                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8222                           ;Send_To_MB@size stored from wreg
  8223  1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  8224  1B4F  1303               	bcf	3,6	;RP1=0, select bank0
  8225  1B50  00A1               	movwf	Send_To_MB@size
  8226                           
  8227                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8228  1B51  30AA               	movlw	170
  8229  1B52  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8230                           
  8231                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8232  1B57  30BB               	movlw	187
  8233  1B58  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8234                           
  8235                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8236  1B5D  0863               	movf	_Board_Number^(0+128),w
  8237  1B5E  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8238                           
  8239                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8240  1B63  3000               	movlw	0
  8241  1B64  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8242                           
  8243                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8244  1B69  1703               	bsf	3,6	;RP1=1, select bank3
  8245  1B6A  084E               	movf	(_usart_protocol^(0+384)+4),w
  8246  1B6B  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8247                           
  8248                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8249  1B70  1283               	bcf	3,5	;RP0=0, select bank0
  8250  1B71  0821               	movf	Send_To_MB@size,w
  8251  1B72  160A  158A  2133   	fcall	_USART_putc
  8252  1B75  0008               	return
  8253  1B76                     __end_of_Send_To_MB:	
  8254                           
  8255                           	psect	text24
  8256  07F7                     __ptext24:	
  8257 ;; *************** function _Send_Reply_OK *****************
  8258 ;; Defined at:
  8259 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 300/100
  8270 ;;		On exit  : 300/100
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8273 ;;      Params:         0       0       0       0       0
  8274 ;;      Locals:         0       0       0       0       0
  8275 ;;      Temps:          0       0       0       0       0
  8276 ;;      Totals:         0       0       0       0       0
  8277 ;;Total ram usage:        0 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    3
  8280 ;; This function calls:
  8281 ;;		_USART_put_string
  8282 ;; This function is called by:
  8283 ;;		_Decodify_Command
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           
  8288                           ;psect for function _Send_Reply_OK
  8289  07F7                     _Send_Reply_OK:	
  8290                           
  8291                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  8292                           
  8293                           ;incstack = 0
  8294                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8295  07F7  3049               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8296  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  8297  07F9  00A1               	movwf	USART_put_string@vetor
  8298  07FA  3080               	movlw	128
  8299  07FB  00A2               	movwf	USART_put_string@vetor+1
  8300  07FC  160A  158A  248A   	fcall	_USART_put_string
  8301  07FF  0008               	return
  8302  0800                     __end_of_Send_Reply_OK:	
  8303                           
  8304                           	psect	text25
  8305  1C8A                     __ptext25:	
  8306 ;; *************** function _USART_put_string *****************
  8307 ;; Defined at:
  8308 ;;		line 168 in file "usart.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8311 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8314 ;;		 -> STR_8(3), texto(16), STR_1(8), 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 300/0
  8321 ;;		On exit  : 300/100
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8324 ;;      Params:         0       2       0       0       0
  8325 ;;      Locals:         0       2       0       0       0
  8326 ;;      Temps:          0       0       0       0       0
  8327 ;;      Totals:         0       4       0       0       0
  8328 ;;Total ram usage:        4 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    2
  8331 ;; This function calls:
  8332 ;;		_USART_putc
  8333 ;; This function is called by:
  8334 ;;		_Decodify_Command
  8335 ;;		_Send_Reply_OK
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           
  8340                           ;psect for function _USART_put_string
  8341  1C8A                     _USART_put_string:	
  8342                           
  8343                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8347  1C8A  0821               	movf	USART_put_string@vetor,w
  8348  1C8B  00A3               	movwf	USART_put_string@ptr
  8349  1C8C  0822               	movf	USART_put_string@vetor+1,w
  8350  1C8D  00A4               	movwf	USART_put_string@ptr+1
  8351  1C8E                     l6038:	
  8352                           ;usart.c: 172:     while(*(ptr)){
  8353                           
  8354                           
  8355                           ;usart.c: 172:     while(*(ptr)){
  8356  1C8E  0824               	movf	USART_put_string@ptr+1,w
  8357  1C8F  00FF               	movwf	127
  8358  1C90  0823               	movf	USART_put_string@ptr,w
  8359  1C91  0084               	movwf	4
  8360  1C92  160A  158A  2000  160A  158A  	fcall	stringtab
  8361  1C97  3A00               	xorlw	0
  8362  1C98  1903               	btfsc	3,2
  8363  1C99  2CB0               	goto	l6040
  8364                           
  8365                           ;usart.c: 173:         USART_putc(*(ptr));
  8366  1C9A  0824               	movf	USART_put_string@ptr+1,w
  8367  1C9B  00FF               	movwf	127
  8368  1C9C  0823               	movf	USART_put_string@ptr,w
  8369  1C9D  0084               	movwf	4
  8370  1C9E  160A  158A  2000  160A  158A  	fcall	stringtab
  8371  1CA3  160A  158A  2133  160A  158A  	fcall	_USART_putc
  8372                           
  8373                           ;usart.c: 174:         ptr++;
  8374  1CA8  3001               	movlw	1
  8375  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
  8376  1CAA  07A3               	addwf	USART_put_string@ptr,f
  8377  1CAB  1803               	skipnc
  8378  1CAC  0AA4               	incf	USART_put_string@ptr+1,f
  8379  1CAD  3000               	movlw	0
  8380  1CAE  07A4               	addwf	USART_put_string@ptr+1,f
  8381  1CAF  2C8E               	goto	l6038
  8382  1CB0                     l6040:	
  8383                           
  8384                           ;usart.c: 176:     USART_putc(*(ptr));
  8385  1CB0  0824               	movf	USART_put_string@ptr+1,w
  8386  1CB1  00FF               	movwf	127
  8387  1CB2  0823               	movf	USART_put_string@ptr,w
  8388  1CB3  0084               	movwf	4
  8389  1CB4  160A  158A  2000  160A  158A  	fcall	stringtab
  8390  1CB9  160A  158A  2133   	fcall	_USART_putc
  8391  1CBC  0008               	return
  8392  1CBD                     __end_of_USART_put_string:	
  8393                           
  8394                           	psect	text26
  8395  10AD                     __ptext26:	
  8396 ;; *************** function _Save_Log *****************
  8397 ;; Defined at:
  8398 ;;		line 1018 in file "SlaveLiofilizadorVer1.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 300/0
  8409 ;;		On exit  : 300/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8412 ;;      Params:         0       4       0       0       0
  8413 ;;      Locals:         0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0
  8415 ;;      Totals:         0       4       0       0       0
  8416 ;;Total ram usage:        4 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    5
  8419 ;; This function calls:
  8420 ;;		_EEPROM_24C1025_Write_Int
  8421 ;;		___flmul
  8422 ;;		___fltol
  8423 ;; This function is called by:
  8424 ;;		_Decodify_Command
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _Save_Log
  8430  10AD                     _Save_Log:	
  8431                           
  8432                           ;SlaveLiofilizadorVer1.c: 1019:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Tensao1*10.0));
  8433                           
  8434                           ;incstack = 0
  8435                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8436  10AD  085B               	movf	Save_Log@add_datalog+3,w
  8437  10AE  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8438  10AF  085A               	movf	Save_Log@add_datalog+2,w
  8439  10B0  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8440  10B1  0859               	movf	Save_Log@add_datalog+1,w
  8441  10B2  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8442  10B3  0858               	movf	Save_Log@add_datalog,w
  8443  10B4  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8444  10B5  1683               	bsf	3,5	;RP0=1, select bank1
  8445  10B6  0850               	movf	(_Tensao1+3)^(0+128),w
  8446  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  8447  10B8  00B0               	movwf	___flmul@a+3
  8448  10B9  1683               	bsf	3,5	;RP0=1, select bank1
  8449  10BA  084F               	movf	(_Tensao1+2)^(0+128),w
  8450  10BB  1283               	bcf	3,5	;RP0=0, select bank0
  8451  10BC  00AF               	movwf	___flmul@a+2
  8452  10BD  1683               	bsf	3,5	;RP0=1, select bank1
  8453  10BE  084E               	movf	(_Tensao1+1)^(0+128),w
  8454  10BF  1283               	bcf	3,5	;RP0=0, select bank0
  8455  10C0  00AE               	movwf	___flmul@a+1
  8456  10C1  1683               	bsf	3,5	;RP0=1, select bank1
  8457  10C2  084D               	movf	_Tensao1^(0+128),w
  8458  10C3  1283               	bcf	3,5	;RP0=0, select bank0
  8459  10C4  00AD               	movwf	___flmul@a
  8460  10C5  3041               	movlw	65
  8461  10C6  00AC               	movwf	___flmul@b+3
  8462  10C7  3020               	movlw	32
  8463  10C8  00AB               	movwf	___flmul@b+2
  8464  10C9  3000               	movlw	0
  8465  10CA  00AA               	movwf	___flmul@b+1
  8466  10CB  3000               	movlw	0
  8467  10CC  00A9               	movwf	___flmul@b
  8468  10CD  120A  118A  24BB  160A  118A  	fcall	___flmul
  8469  10D2  082C               	movf	?___flmul+3,w
  8470  10D3  00C6               	movwf	___fltol@f1+3
  8471  10D4  082B               	movf	?___flmul+2,w
  8472  10D5  00C5               	movwf	___fltol@f1+2
  8473  10D6  082A               	movf	?___flmul+1,w
  8474  10D7  00C4               	movwf	___fltol@f1+1
  8475  10D8  0829               	movf	?___flmul,w
  8476  10D9  00C3               	movwf	___fltol@f1
  8477  10DA  160A  118A  2042  160A  118A  	fcall	___fltol
  8478  10DF  0844               	movf	?___fltol+1,w
  8479  10E0  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8480  10E1  0843               	movf	?___fltol,w
  8481  10E2  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8482  10E3  3000               	movlw	0
  8483  10E4  160A  158A  223D  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8484                           
  8485                           ;SlaveLiofilizadorVer1.c: 1020:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Vaccum0*10.0));
  8486  10E9  085B               	movf	Save_Log@add_datalog+3,w
  8487  10EA  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8488  10EB  085A               	movf	Save_Log@add_datalog+2,w
  8489  10EC  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8490  10ED  0859               	movf	Save_Log@add_datalog+1,w
  8491  10EE  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8492  10EF  0858               	movf	Save_Log@add_datalog,w
  8493  10F0  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8494  10F1  1683               	bsf	3,5	;RP0=1, select bank1
  8495  10F2  0854               	movf	(_Vaccum0+3)^(0+128),w
  8496  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  8497  10F4  00B0               	movwf	___flmul@a+3
  8498  10F5  1683               	bsf	3,5	;RP0=1, select bank1
  8499  10F6  0853               	movf	(_Vaccum0+2)^(0+128),w
  8500  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  8501  10F8  00AF               	movwf	___flmul@a+2
  8502  10F9  1683               	bsf	3,5	;RP0=1, select bank1
  8503  10FA  0852               	movf	(_Vaccum0+1)^(0+128),w
  8504  10FB  1283               	bcf	3,5	;RP0=0, select bank0
  8505  10FC  00AE               	movwf	___flmul@a+1
  8506  10FD  1683               	bsf	3,5	;RP0=1, select bank1
  8507  10FE  0851               	movf	_Vaccum0^(0+128),w
  8508  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  8509  1100  00AD               	movwf	___flmul@a
  8510  1101  3041               	movlw	65
  8511  1102  00AC               	movwf	___flmul@b+3
  8512  1103  3020               	movlw	32
  8513  1104  00AB               	movwf	___flmul@b+2
  8514  1105  3000               	movlw	0
  8515  1106  00AA               	movwf	___flmul@b+1
  8516  1107  3000               	movlw	0
  8517  1108  00A9               	movwf	___flmul@b
  8518  1109  120A  118A  24BB  160A  118A  	fcall	___flmul
  8519  110E  082C               	movf	?___flmul+3,w
  8520  110F  00C6               	movwf	___fltol@f1+3
  8521  1110  082B               	movf	?___flmul+2,w
  8522  1111  00C5               	movwf	___fltol@f1+2
  8523  1112  082A               	movf	?___flmul+1,w
  8524  1113  00C4               	movwf	___fltol@f1+1
  8525  1114  0829               	movf	?___flmul,w
  8526  1115  00C3               	movwf	___fltol@f1
  8527  1116  160A  118A  2042  160A  118A  	fcall	___fltol
  8528  111B  0844               	movf	?___fltol+1,w
  8529  111C  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8530  111D  0843               	movf	?___fltol,w
  8531  111E  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8532  111F  3001               	movlw	1
  8533  1120  160A  158A  223D   	fcall	_EEPROM_24C1025_Write_Int
  8534  1123  0008               	return
  8535  1124                     __end_of_Save_Log:	
  8536                           
  8537                           	psect	text27
  8538  1042                     __ptext27:	
  8539 ;; *************** function ___fltol *****************
  8540 ;; Defined at:
  8541 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  f1              4   35[BANK0 ] void 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  exp1            1   45[BANK0 ] unsigned char 
  8546 ;;  sign1           1   44[BANK0 ] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  4   35[BANK0 ] long 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0
  8551 ;; Tracked objects:
  8552 ;;		On entry : 300/0
  8553 ;;		On exit  : 300/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8556 ;;      Params:         0       4       0       0       0
  8557 ;;      Locals:         0       2       0       0       0
  8558 ;;      Temps:          0       5       0       0       0
  8559 ;;      Totals:         0      11       0       0       0
  8560 ;;Total ram usage:       11 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    1
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		_Decodify_Command
  8567 ;;		_Save_Log
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function ___fltol
  8573  1042                     ___fltol:	
  8574                           
  8575                           ;incstack = 0
  8576                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8577  1042  1003               	clrc
  8578  1043  0D45               	rlf	___fltol@f1+2,w
  8579  1044  0D46               	rlf	___fltol@f1+3,w
  8580  1045  00C7               	movwf	??___fltol
  8581  1046  0847               	movf	??___fltol,w
  8582  1047  00CD               	movwf	___fltol@exp1
  8583  1048  084D               	movf	___fltol@exp1,w
  8584  1049  1D03               	btfss	3,2
  8585  104A  2854               	goto	l6140
  8586  104B                     l6136:	
  8587  104B  3000               	movlw	0
  8588  104C  00C6               	movwf	?___fltol+3
  8589  104D  3000               	movlw	0
  8590  104E  00C5               	movwf	?___fltol+2
  8591  104F  3000               	movlw	0
  8592  1050  00C4               	movwf	?___fltol+1
  8593  1051  3000               	movlw	0
  8594  1052  00C3               	movwf	?___fltol
  8595  1053  0008               	return
  8596  1054                     l6140:	
  8597  1054  0843               	movf	___fltol@f1,w
  8598  1055  00C7               	movwf	??___fltol
  8599  1056  0844               	movf	___fltol@f1+1,w
  8600  1057  00C8               	movwf	??___fltol+1
  8601  1058  0845               	movf	___fltol@f1+2,w
  8602  1059  00C9               	movwf	??___fltol+2
  8603  105A  0846               	movf	___fltol@f1+3,w
  8604  105B  00CA               	movwf	??___fltol+3
  8605  105C  301F               	movlw	31
  8606  105D                     u6075:	
  8607  105D  1003               	clrc
  8608  105E  0CCA               	rrf	??___fltol+3,f
  8609  105F  0CC9               	rrf	??___fltol+2,f
  8610  1060  0CC8               	rrf	??___fltol+1,f
  8611  1061  0CC7               	rrf	??___fltol,f
  8612  1062  3EFF               	addlw	-1
  8613  1063  1D03               	skipz
  8614  1064  285D               	goto	u6075
  8615  1065  0847               	movf	??___fltol,w
  8616  1066  00CB               	movwf	??___fltol+4
  8617  1067  084B               	movf	??___fltol+4,w
  8618  1068  00CC               	movwf	___fltol@sign1
  8619  1069  17C5               	bsf	___fltol@f1+2,7
  8620  106A  30FF               	movlw	255
  8621  106B  05C3               	andwf	___fltol@f1,f
  8622  106C  30FF               	movlw	255
  8623  106D  05C4               	andwf	___fltol@f1+1,f
  8624  106E  30FF               	movlw	255
  8625  106F  05C5               	andwf	___fltol@f1+2,f
  8626  1070  3000               	movlw	0
  8627  1071  05C6               	andwf	___fltol@f1+3,f
  8628  1072  3096               	movlw	150
  8629  1073  02CD               	subwf	___fltol@exp1,f
  8630  1074  1FCD               	btfss	___fltol@exp1,7
  8631  1075  288B               	goto	l6158
  8632  1076  084D               	movf	___fltol@exp1,w
  8633  1077  3A80               	xorlw	128
  8634  1078  3E97               	addlw	151
  8635  1079  1C03               	btfss	3,0
  8636  107A  284B               	goto	l6136
  8637  107B                     l6156:	
  8638  107B  3001               	movlw	1
  8639  107C                     u6105:	
  8640  107C  1003               	clrc
  8641  107D  0CC6               	rrf	___fltol@f1+3,f
  8642  107E  0CC5               	rrf	___fltol@f1+2,f
  8643  107F  0CC4               	rrf	___fltol@f1+1,f
  8644  1080  0CC3               	rrf	___fltol@f1,f
  8645  1081  3EFF               	addlw	-1
  8646  1082  1D03               	skipz
  8647  1083  287C               	goto	u6105
  8648  1084  3001               	movlw	1
  8649  1085  00C7               	movwf	??___fltol
  8650  1086  0847               	movf	??___fltol,w
  8651  1087  07CD               	addwf	___fltol@exp1,f
  8652  1088  1903               	btfsc	3,2
  8653  1089  289E               	goto	l6166
  8654  108A  287B               	goto	l6156
  8655  108B                     l6158:	
  8656  108B  3020               	movlw	32
  8657  108C  024D               	subwf	___fltol@exp1,w
  8658  108D  1803               	btfsc	3,0
  8659  108E  284B               	goto	l6136
  8660  108F                     l1180:	
  8661  108F  084D               	movf	___fltol@exp1,w
  8662  1090  1903               	btfsc	3,2
  8663  1091  289E               	goto	l6166
  8664  1092  3001               	movlw	1
  8665  1093  00C7               	movwf	??___fltol
  8666  1094                     u6135:	
  8667  1094  1003               	clrc
  8668  1095  0DC3               	rlf	___fltol@f1,f
  8669  1096  0DC4               	rlf	___fltol@f1+1,f
  8670  1097  0DC5               	rlf	___fltol@f1+2,f
  8671  1098  0DC6               	rlf	___fltol@f1+3,f
  8672  1099  0BC7               	decfsz	??___fltol,f
  8673  109A  2894               	goto	u6135
  8674  109B  3001               	movlw	1
  8675  109C  02CD               	subwf	___fltol@exp1,f
  8676  109D  288F               	goto	l1180
  8677  109E                     l6166:	
  8678  109E  084C               	movf	___fltol@sign1,w
  8679  109F  1903               	btfsc	3,2
  8680  10A0  0008               	return
  8681  10A1  09C3               	comf	___fltol@f1,f
  8682  10A2  09C4               	comf	___fltol@f1+1,f
  8683  10A3  09C5               	comf	___fltol@f1+2,f
  8684  10A4  09C6               	comf	___fltol@f1+3,f
  8685  10A5  0AC3               	incf	___fltol@f1,f
  8686  10A6  1903               	skipnz
  8687  10A7  0AC4               	incf	___fltol@f1+1,f
  8688  10A8  1903               	skipnz
  8689  10A9  0AC5               	incf	___fltol@f1+2,f
  8690  10AA  1903               	skipnz
  8691  10AB  0AC6               	incf	___fltol@f1+3,f
  8692  10AC  0008               	return
  8693  10AD                     __end_of___fltol:	
  8694                           
  8695                           	psect	text28
  8696  04BB                     __ptext28:	
  8697 ;; *************** function ___flmul *****************
  8698 ;; Defined at:
  8699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  b               4    9[BANK0 ] long 
  8702 ;;  a               4   13[BANK0 ] long 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  prod            4   29[BANK0 ] struct .
  8705 ;;  grs             4   25[BANK0 ] unsigned long 
  8706 ;;  temp            2   33[BANK0 ] struct .
  8707 ;;  bexp            1   24[BANK0 ] unsigned char 
  8708 ;;  aexp            1   23[BANK0 ] unsigned char 
  8709 ;;  sign            1   22[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  4    9[BANK0 ] unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 300/0
  8716 ;;		On exit  : 300/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8719 ;;      Params:         0       8       0       0       0
  8720 ;;      Locals:         0      13       0       0       0
  8721 ;;      Temps:          0       5       0       0       0
  8722 ;;      Totals:         0      26       0       0       0
  8723 ;;Total ram usage:       26 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    2
  8726 ;; This function calls:
  8727 ;;		__Umul8_16
  8728 ;; This function is called by:
  8729 ;;		_Decodify_Command
  8730 ;;		_MediaPlacaVaccum
  8731 ;;		_Save_Log
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function ___flmul
  8737  04BB                     ___flmul:	
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8741  04BB  082C               	movf	___flmul@b+3,w
  8742  04BC  3980               	andlw	128
  8743  04BD  00B1               	movwf	??___flmul
  8744  04BE  0831               	movf	??___flmul,w
  8745  04BF  00B6               	movwf	___flmul@sign
  8746  04C0  082C               	movf	___flmul@b+3,w
  8747  04C1  00B1               	movwf	??___flmul
  8748  04C2  0731               	addwf	??___flmul,w
  8749  04C3  00B2               	movwf	??___flmul+1
  8750  04C4  0832               	movf	??___flmul+1,w
  8751  04C5  00B8               	movwf	___flmul@bexp
  8752  04C6  1BAB               	btfsc	___flmul@b+2,7
  8753  04C7  1438               	bsf	___flmul@bexp,0
  8754  04C8  0838               	movf	___flmul@bexp,w
  8755  04C9  1903               	btfsc	3,2
  8756  04CA  2CD8               	goto	l6380
  8757  04CB  0A38               	incf	___flmul@bexp,w
  8758  04CC  1D03               	btfss	3,2
  8759  04CD  2CD6               	goto	l6378
  8760  04CE  3000               	movlw	0
  8761  04CF  00AC               	movwf	___flmul@b+3
  8762  04D0  3000               	movlw	0
  8763  04D1  00AB               	movwf	___flmul@b+2
  8764  04D2  3000               	movlw	0
  8765  04D3  00AA               	movwf	___flmul@b+1
  8766  04D4  3000               	movlw	0
  8767  04D5  00A9               	movwf	___flmul@b
  8768  04D6                     l6378:	
  8769  04D6  17AB               	bsf	___flmul@b+2,7
  8770  04D7  2CE0               	goto	l6382
  8771  04D8                     l6380:	
  8772  04D8  3000               	movlw	0
  8773  04D9  00AC               	movwf	___flmul@b+3
  8774  04DA  3000               	movlw	0
  8775  04DB  00AB               	movwf	___flmul@b+2
  8776  04DC  3000               	movlw	0
  8777  04DD  00AA               	movwf	___flmul@b+1
  8778  04DE  3000               	movlw	0
  8779  04DF  00A9               	movwf	___flmul@b
  8780  04E0                     l6382:	
  8781  04E0  0830               	movf	___flmul@a+3,w
  8782  04E1  3980               	andlw	128
  8783  04E2  00B1               	movwf	??___flmul
  8784  04E3  0831               	movf	??___flmul,w
  8785  04E4  06B6               	xorwf	___flmul@sign,f
  8786  04E5  0830               	movf	___flmul@a+3,w
  8787  04E6  00B1               	movwf	??___flmul
  8788  04E7  0731               	addwf	??___flmul,w
  8789  04E8  00B2               	movwf	??___flmul+1
  8790  04E9  0832               	movf	??___flmul+1,w
  8791  04EA  00B7               	movwf	___flmul@aexp
  8792  04EB  1BAF               	btfsc	___flmul@a+2,7
  8793  04EC  1437               	bsf	___flmul@aexp,0
  8794  04ED  0837               	movf	___flmul@aexp,w
  8795  04EE  1903               	btfsc	3,2
  8796  04EF  2CFD               	goto	l6398
  8797  04F0  0A37               	incf	___flmul@aexp,w
  8798  04F1  1D03               	btfss	3,2
  8799  04F2  2CFB               	goto	l6396
  8800  04F3  3000               	movlw	0
  8801  04F4  00B0               	movwf	___flmul@a+3
  8802  04F5  3000               	movlw	0
  8803  04F6  00AF               	movwf	___flmul@a+2
  8804  04F7  3000               	movlw	0
  8805  04F8  00AE               	movwf	___flmul@a+1
  8806  04F9  3000               	movlw	0
  8807  04FA  00AD               	movwf	___flmul@a
  8808  04FB                     l6396:	
  8809  04FB  17AF               	bsf	___flmul@a+2,7
  8810  04FC  2D05               	goto	l6400
  8811  04FD                     l6398:	
  8812  04FD  3000               	movlw	0
  8813  04FE  00B0               	movwf	___flmul@a+3
  8814  04FF  3000               	movlw	0
  8815  0500  00AF               	movwf	___flmul@a+2
  8816  0501  3000               	movlw	0
  8817  0502  00AE               	movwf	___flmul@a+1
  8818  0503  3000               	movlw	0
  8819  0504  00AD               	movwf	___flmul@a
  8820  0505                     l6400:	
  8821  0505  0837               	movf	___flmul@aexp,w
  8822  0506  1D03               	btfss	3,2
  8823  0507  0838               	movf	___flmul@bexp,w
  8824  0508  1D03               	btfss	3,2
  8825  0509  2D13               	goto	l6408
  8826  050A  3000               	movlw	0
  8827  050B  00AC               	movwf	?___flmul+3
  8828  050C  3000               	movlw	0
  8829  050D  00AB               	movwf	?___flmul+2
  8830  050E  3000               	movlw	0
  8831  050F  00AA               	movwf	?___flmul+1
  8832  0510  3000               	movlw	0
  8833  0511  00A9               	movwf	?___flmul
  8834  0512  0008               	return
  8835  0513                     l6408:	
  8836  0513  0829               	movf	___flmul@b,w
  8837  0514  00B1               	movwf	??___flmul
  8838  0515  0831               	movf	??___flmul,w
  8839  0516  00A0               	movwf	__Umul8_16@multiplicand
  8840  0517  082F               	movf	___flmul@a+2,w
  8841  0518  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  8842  051D  0821               	movf	?__Umul8_16+1,w
  8843  051E  00C2               	movwf	___flmul@temp+1
  8844  051F  0820               	movf	?__Umul8_16,w
  8845  0520  00C1               	movwf	___flmul@temp
  8846  0521  0841               	movf	___flmul@temp,w
  8847  0522  00B1               	movwf	??___flmul
  8848  0523  01B2               	clrf	??___flmul+1
  8849  0524  01B3               	clrf	??___flmul+2
  8850  0525  01B4               	clrf	??___flmul+3
  8851  0526  0834               	movf	??___flmul+3,w
  8852  0527  00BC               	movwf	___flmul@grs+3
  8853  0528  0833               	movf	??___flmul+2,w
  8854  0529  00BB               	movwf	___flmul@grs+2
  8855  052A  0832               	movf	??___flmul+1,w
  8856  052B  00BA               	movwf	___flmul@grs+1
  8857  052C  0831               	movf	??___flmul,w
  8858  052D  00B9               	movwf	___flmul@grs
  8859  052E  0842               	movf	___flmul@temp+1,w
  8860  052F  00B1               	movwf	??___flmul
  8861  0530  01B2               	clrf	??___flmul+1
  8862  0531  01B3               	clrf	??___flmul+2
  8863  0532  01B4               	clrf	??___flmul+3
  8864  0533  0834               	movf	??___flmul+3,w
  8865  0534  00C0               	movwf	___flmul@prod+3
  8866  0535  0833               	movf	??___flmul+2,w
  8867  0536  00BF               	movwf	___flmul@prod+2
  8868  0537  0832               	movf	??___flmul+1,w
  8869  0538  00BE               	movwf	___flmul@prod+1
  8870  0539  0831               	movf	??___flmul,w
  8871  053A  00BD               	movwf	___flmul@prod
  8872  053B  082A               	movf	___flmul@b+1,w
  8873  053C  00B1               	movwf	??___flmul
  8874  053D  0831               	movf	??___flmul,w
  8875  053E  00A0               	movwf	__Umul8_16@multiplicand
  8876  053F  082E               	movf	___flmul@a+1,w
  8877  0540  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  8878  0545  0821               	movf	?__Umul8_16+1,w
  8879  0546  00C2               	movwf	___flmul@temp+1
  8880  0547  0820               	movf	?__Umul8_16,w
  8881  0548  00C1               	movwf	___flmul@temp
  8882  0549  0841               	movf	___flmul@temp,w
  8883  054A  00B1               	movwf	??___flmul
  8884  054B  01B2               	clrf	??___flmul+1
  8885  054C  01B3               	clrf	??___flmul+2
  8886  054D  01B4               	clrf	??___flmul+3
  8887  054E  0831               	movf	??___flmul,w
  8888  054F  07B9               	addwf	___flmul@grs,f
  8889  0550  0832               	movf	??___flmul+1,w
  8890  0551  1103               	clrz
  8891  0552  1803               	skipnc
  8892  0553  3E01               	addlw	1
  8893  0554  1D03               	btfss	3,2
  8894  0555  07BA               	addwf	___flmul@grs+1,f
  8895  0556  0833               	movf	??___flmul+2,w
  8896  0557  1103               	clrz
  8897  0558  1803               	skipnc
  8898  0559  3E01               	addlw	1
  8899  055A  1D03               	btfss	3,2
  8900  055B  07BB               	addwf	___flmul@grs+2,f
  8901  055C  0834               	movf	??___flmul+3,w
  8902  055D  1103               	clrz
  8903  055E  1803               	skipnc
  8904  055F  3E01               	addlw	1
  8905  0560  1D03               	btfss	3,2
  8906  0561  07BC               	addwf	___flmul@grs+3,f
  8907  0562  0842               	movf	___flmul@temp+1,w
  8908  0563  00B1               	movwf	??___flmul
  8909  0564  01B2               	clrf	??___flmul+1
  8910  0565  01B3               	clrf	??___flmul+2
  8911  0566  01B4               	clrf	??___flmul+3
  8912  0567  0831               	movf	??___flmul,w
  8913  0568  07BD               	addwf	___flmul@prod,f
  8914  0569  0832               	movf	??___flmul+1,w
  8915  056A  1103               	clrz
  8916  056B  1803               	skipnc
  8917  056C  3E01               	addlw	1
  8918  056D  1D03               	btfss	3,2
  8919  056E  07BE               	addwf	___flmul@prod+1,f
  8920  056F  0833               	movf	??___flmul+2,w
  8921  0570  1103               	clrz
  8922  0571  1803               	skipnc
  8923  0572  3E01               	addlw	1
  8924  0573  1D03               	btfss	3,2
  8925  0574  07BF               	addwf	___flmul@prod+2,f
  8926  0575  0834               	movf	??___flmul+3,w
  8927  0576  1103               	clrz
  8928  0577  1803               	skipnc
  8929  0578  3E01               	addlw	1
  8930  0579  1D03               	btfss	3,2
  8931  057A  07C0               	addwf	___flmul@prod+3,f
  8932  057B  082B               	movf	___flmul@b+2,w
  8933  057C  00B1               	movwf	??___flmul
  8934  057D  0831               	movf	??___flmul,w
  8935  057E  00A0               	movwf	__Umul8_16@multiplicand
  8936  057F  082D               	movf	___flmul@a,w
  8937  0580  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  8938  0585  0821               	movf	?__Umul8_16+1,w
  8939  0586  00C2               	movwf	___flmul@temp+1
  8940  0587  0820               	movf	?__Umul8_16,w
  8941  0588  00C1               	movwf	___flmul@temp
  8942  0589  0841               	movf	___flmul@temp,w
  8943  058A  00B1               	movwf	??___flmul
  8944  058B  01B2               	clrf	??___flmul+1
  8945  058C  01B3               	clrf	??___flmul+2
  8946  058D  01B4               	clrf	??___flmul+3
  8947  058E  0831               	movf	??___flmul,w
  8948  058F  07B9               	addwf	___flmul@grs,f
  8949  0590  0832               	movf	??___flmul+1,w
  8950  0591  1103               	clrz
  8951  0592  1803               	skipnc
  8952  0593  3E01               	addlw	1
  8953  0594  1D03               	btfss	3,2
  8954  0595  07BA               	addwf	___flmul@grs+1,f
  8955  0596  0833               	movf	??___flmul+2,w
  8956  0597  1103               	clrz
  8957  0598  1803               	skipnc
  8958  0599  3E01               	addlw	1
  8959  059A  1D03               	btfss	3,2
  8960  059B  07BB               	addwf	___flmul@grs+2,f
  8961  059C  0834               	movf	??___flmul+3,w
  8962  059D  1103               	clrz
  8963  059E  1803               	skipnc
  8964  059F  3E01               	addlw	1
  8965  05A0  1D03               	btfss	3,2
  8966  05A1  07BC               	addwf	___flmul@grs+3,f
  8967  05A2  0842               	movf	___flmul@temp+1,w
  8968  05A3  00B1               	movwf	??___flmul
  8969  05A4  01B2               	clrf	??___flmul+1
  8970  05A5  01B3               	clrf	??___flmul+2
  8971  05A6  01B4               	clrf	??___flmul+3
  8972  05A7  0831               	movf	??___flmul,w
  8973  05A8  07BD               	addwf	___flmul@prod,f
  8974  05A9  0832               	movf	??___flmul+1,w
  8975  05AA  1103               	clrz
  8976  05AB  1803               	skipnc
  8977  05AC  3E01               	addlw	1
  8978  05AD  1D03               	btfss	3,2
  8979  05AE  07BE               	addwf	___flmul@prod+1,f
  8980  05AF  0833               	movf	??___flmul+2,w
  8981  05B0  1103               	clrz
  8982  05B1  1803               	skipnc
  8983  05B2  3E01               	addlw	1
  8984  05B3  1D03               	btfss	3,2
  8985  05B4  07BF               	addwf	___flmul@prod+2,f
  8986  05B5  0834               	movf	??___flmul+3,w
  8987  05B6  1103               	clrz
  8988  05B7  1803               	skipnc
  8989  05B8  3E01               	addlw	1
  8990  05B9  1D03               	btfss	3,2
  8991  05BA  07C0               	addwf	___flmul@prod+3,f
  8992  05BB  3008               	movlw	8
  8993  05BC  00B1               	movwf	??___flmul
  8994  05BD                     u6745:	
  8995  05BD  1003               	clrc
  8996  05BE  0DB9               	rlf	___flmul@grs,f
  8997  05BF  0DBA               	rlf	___flmul@grs+1,f
  8998  05C0  0DBB               	rlf	___flmul@grs+2,f
  8999  05C1  0DBC               	rlf	___flmul@grs+3,f
  9000  05C2  0BB1               	decfsz	??___flmul,f
  9001  05C3  2DBD               	goto	u6745
  9002  05C4  082A               	movf	___flmul@b+1,w
  9003  05C5  00B1               	movwf	??___flmul
  9004  05C6  0831               	movf	??___flmul,w
  9005  05C7  00A0               	movwf	__Umul8_16@multiplicand
  9006  05C8  082D               	movf	___flmul@a,w
  9007  05C9  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9008  05CE  0821               	movf	?__Umul8_16+1,w
  9009  05CF  00C2               	movwf	___flmul@temp+1
  9010  05D0  0820               	movf	?__Umul8_16,w
  9011  05D1  00C1               	movwf	___flmul@temp
  9012  05D2  0841               	movf	___flmul@temp,w
  9013  05D3  00B1               	movwf	??___flmul
  9014  05D4  0842               	movf	___flmul@temp+1,w
  9015  05D5  00B2               	movwf	??___flmul+1
  9016  05D6  01B3               	clrf	??___flmul+2
  9017  05D7  01B4               	clrf	??___flmul+3
  9018  05D8  0831               	movf	??___flmul,w
  9019  05D9  07B9               	addwf	___flmul@grs,f
  9020  05DA  0832               	movf	??___flmul+1,w
  9021  05DB  1103               	clrz
  9022  05DC  1803               	skipnc
  9023  05DD  3E01               	addlw	1
  9024  05DE  1D03               	btfss	3,2
  9025  05DF  07BA               	addwf	___flmul@grs+1,f
  9026  05E0  0833               	movf	??___flmul+2,w
  9027  05E1  1103               	clrz
  9028  05E2  1803               	skipnc
  9029  05E3  3E01               	addlw	1
  9030  05E4  1D03               	btfss	3,2
  9031  05E5  07BB               	addwf	___flmul@grs+2,f
  9032  05E6  0834               	movf	??___flmul+3,w
  9033  05E7  1103               	clrz
  9034  05E8  1803               	skipnc
  9035  05E9  3E01               	addlw	1
  9036  05EA  1D03               	btfss	3,2
  9037  05EB  07BC               	addwf	___flmul@grs+3,f
  9038  05EC  0829               	movf	___flmul@b,w
  9039  05ED  00B1               	movwf	??___flmul
  9040  05EE  0831               	movf	??___flmul,w
  9041  05EF  00A0               	movwf	__Umul8_16@multiplicand
  9042  05F0  082E               	movf	___flmul@a+1,w
  9043  05F1  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9044  05F6  0821               	movf	?__Umul8_16+1,w
  9045  05F7  00C2               	movwf	___flmul@temp+1
  9046  05F8  0820               	movf	?__Umul8_16,w
  9047  05F9  00C1               	movwf	___flmul@temp
  9048  05FA  0841               	movf	___flmul@temp,w
  9049  05FB  00B1               	movwf	??___flmul
  9050  05FC  0842               	movf	___flmul@temp+1,w
  9051  05FD  00B2               	movwf	??___flmul+1
  9052  05FE  01B3               	clrf	??___flmul+2
  9053  05FF  01B4               	clrf	??___flmul+3
  9054  0600  0831               	movf	??___flmul,w
  9055  0601  07B9               	addwf	___flmul@grs,f
  9056  0602  0832               	movf	??___flmul+1,w
  9057  0603  1103               	clrz
  9058  0604  1803               	skipnc
  9059  0605  3E01               	addlw	1
  9060  0606  1D03               	btfss	3,2
  9061  0607  07BA               	addwf	___flmul@grs+1,f
  9062  0608  0833               	movf	??___flmul+2,w
  9063  0609  1103               	clrz
  9064  060A  1803               	skipnc
  9065  060B  3E01               	addlw	1
  9066  060C  1D03               	btfss	3,2
  9067  060D  07BB               	addwf	___flmul@grs+2,f
  9068  060E  0834               	movf	??___flmul+3,w
  9069  060F  1103               	clrz
  9070  0610  1803               	skipnc
  9071  0611  3E01               	addlw	1
  9072  0612  1D03               	btfss	3,2
  9073  0613  07BC               	addwf	___flmul@grs+3,f
  9074  0614  3008               	movlw	8
  9075  0615  00B1               	movwf	??___flmul
  9076  0616                     u6775:	
  9077  0616  1003               	clrc
  9078  0617  0DB9               	rlf	___flmul@grs,f
  9079  0618  0DBA               	rlf	___flmul@grs+1,f
  9080  0619  0DBB               	rlf	___flmul@grs+2,f
  9081  061A  0DBC               	rlf	___flmul@grs+3,f
  9082  061B  0BB1               	decfsz	??___flmul,f
  9083  061C  2E16               	goto	u6775
  9084  061D  0829               	movf	___flmul@b,w
  9085  061E  00B1               	movwf	??___flmul
  9086  061F  0831               	movf	??___flmul,w
  9087  0620  00A0               	movwf	__Umul8_16@multiplicand
  9088  0621  082D               	movf	___flmul@a,w
  9089  0622  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9090  0627  0821               	movf	?__Umul8_16+1,w
  9091  0628  00C2               	movwf	___flmul@temp+1
  9092  0629  0820               	movf	?__Umul8_16,w
  9093  062A  00C1               	movwf	___flmul@temp
  9094  062B  0841               	movf	___flmul@temp,w
  9095  062C  00B1               	movwf	??___flmul
  9096  062D  0842               	movf	___flmul@temp+1,w
  9097  062E  00B2               	movwf	??___flmul+1
  9098  062F  01B3               	clrf	??___flmul+2
  9099  0630  01B4               	clrf	??___flmul+3
  9100  0631  0831               	movf	??___flmul,w
  9101  0632  07B9               	addwf	___flmul@grs,f
  9102  0633  0832               	movf	??___flmul+1,w
  9103  0634  1103               	clrz
  9104  0635  1803               	skipnc
  9105  0636  3E01               	addlw	1
  9106  0637  1D03               	btfss	3,2
  9107  0638  07BA               	addwf	___flmul@grs+1,f
  9108  0639  0833               	movf	??___flmul+2,w
  9109  063A  1103               	clrz
  9110  063B  1803               	skipnc
  9111  063C  3E01               	addlw	1
  9112  063D  1D03               	btfss	3,2
  9113  063E  07BB               	addwf	___flmul@grs+2,f
  9114  063F  0834               	movf	??___flmul+3,w
  9115  0640  1103               	clrz
  9116  0641  1803               	skipnc
  9117  0642  3E01               	addlw	1
  9118  0643  1D03               	btfss	3,2
  9119  0644  07BC               	addwf	___flmul@grs+3,f
  9120  0645  082A               	movf	___flmul@b+1,w
  9121  0646  00B1               	movwf	??___flmul
  9122  0647  0831               	movf	??___flmul,w
  9123  0648  00A0               	movwf	__Umul8_16@multiplicand
  9124  0649  082F               	movf	___flmul@a+2,w
  9125  064A  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9126  064F  0821               	movf	?__Umul8_16+1,w
  9127  0650  00C2               	movwf	___flmul@temp+1
  9128  0651  0820               	movf	?__Umul8_16,w
  9129  0652  00C1               	movwf	___flmul@temp
  9130  0653  0841               	movf	___flmul@temp,w
  9131  0654  00B1               	movwf	??___flmul
  9132  0655  0842               	movf	___flmul@temp+1,w
  9133  0656  00B2               	movwf	??___flmul+1
  9134  0657  01B3               	clrf	??___flmul+2
  9135  0658  01B4               	clrf	??___flmul+3
  9136  0659  0831               	movf	??___flmul,w
  9137  065A  07BD               	addwf	___flmul@prod,f
  9138  065B  0832               	movf	??___flmul+1,w
  9139  065C  1103               	clrz
  9140  065D  1803               	skipnc
  9141  065E  3E01               	addlw	1
  9142  065F  1D03               	btfss	3,2
  9143  0660  07BE               	addwf	___flmul@prod+1,f
  9144  0661  0833               	movf	??___flmul+2,w
  9145  0662  1103               	clrz
  9146  0663  1803               	skipnc
  9147  0664  3E01               	addlw	1
  9148  0665  1D03               	btfss	3,2
  9149  0666  07BF               	addwf	___flmul@prod+2,f
  9150  0667  0834               	movf	??___flmul+3,w
  9151  0668  1103               	clrz
  9152  0669  1803               	skipnc
  9153  066A  3E01               	addlw	1
  9154  066B  1D03               	btfss	3,2
  9155  066C  07C0               	addwf	___flmul@prod+3,f
  9156  066D  082B               	movf	___flmul@b+2,w
  9157  066E  00B1               	movwf	??___flmul
  9158  066F  0831               	movf	??___flmul,w
  9159  0670  00A0               	movwf	__Umul8_16@multiplicand
  9160  0671  082E               	movf	___flmul@a+1,w
  9161  0672  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9162  0677  0821               	movf	?__Umul8_16+1,w
  9163  0678  00C2               	movwf	___flmul@temp+1
  9164  0679  0820               	movf	?__Umul8_16,w
  9165  067A  00C1               	movwf	___flmul@temp
  9166  067B  0841               	movf	___flmul@temp,w
  9167  067C  00B1               	movwf	??___flmul
  9168  067D  0842               	movf	___flmul@temp+1,w
  9169  067E  00B2               	movwf	??___flmul+1
  9170  067F  01B3               	clrf	??___flmul+2
  9171  0680  01B4               	clrf	??___flmul+3
  9172  0681  0831               	movf	??___flmul,w
  9173  0682  07BD               	addwf	___flmul@prod,f
  9174  0683  0832               	movf	??___flmul+1,w
  9175  0684  1103               	clrz
  9176  0685  1803               	skipnc
  9177  0686  3E01               	addlw	1
  9178  0687  1D03               	btfss	3,2
  9179  0688  07BE               	addwf	___flmul@prod+1,f
  9180  0689  0833               	movf	??___flmul+2,w
  9181  068A  1103               	clrz
  9182  068B  1803               	skipnc
  9183  068C  3E01               	addlw	1
  9184  068D  1D03               	btfss	3,2
  9185  068E  07BF               	addwf	___flmul@prod+2,f
  9186  068F  0834               	movf	??___flmul+3,w
  9187  0690  1103               	clrz
  9188  0691  1803               	skipnc
  9189  0692  3E01               	addlw	1
  9190  0693  1D03               	btfss	3,2
  9191  0694  07C0               	addwf	___flmul@prod+3,f
  9192  0695  082B               	movf	___flmul@b+2,w
  9193  0696  00B1               	movwf	??___flmul
  9194  0697  0831               	movf	??___flmul,w
  9195  0698  00A0               	movwf	__Umul8_16@multiplicand
  9196  0699  082F               	movf	___flmul@a+2,w
  9197  069A  120A  158A  2000  120A  118A  	fcall	__Umul8_16
  9198  069F  0821               	movf	?__Umul8_16+1,w
  9199  06A0  00C2               	movwf	___flmul@temp+1
  9200  06A1  0820               	movf	?__Umul8_16,w
  9201  06A2  00C1               	movwf	___flmul@temp
  9202  06A3  0841               	movf	___flmul@temp,w
  9203  06A4  00B1               	movwf	??___flmul
  9204  06A5  0842               	movf	___flmul@temp+1,w
  9205  06A6  00B2               	movwf	??___flmul+1
  9206  06A7  01B3               	clrf	??___flmul+2
  9207  06A8  01B4               	clrf	??___flmul+3
  9208  06A9  3008               	movlw	8
  9209  06AA                     u6815:	
  9210  06AA  1003               	clrc
  9211  06AB  0DB1               	rlf	??___flmul,f
  9212  06AC  0DB2               	rlf	??___flmul+1,f
  9213  06AD  0DB3               	rlf	??___flmul+2,f
  9214  06AE  0DB4               	rlf	??___flmul+3,f
  9215  06AF  3EFF               	addlw	-1
  9216  06B0  1D03               	skipz
  9217  06B1  2EAA               	goto	u6815
  9218  06B2  0831               	movf	??___flmul,w
  9219  06B3  07BD               	addwf	___flmul@prod,f
  9220  06B4  0832               	movf	??___flmul+1,w
  9221  06B5  1103               	clrz
  9222  06B6  1803               	skipnc
  9223  06B7  3E01               	addlw	1
  9224  06B8  1D03               	btfss	3,2
  9225  06B9  07BE               	addwf	___flmul@prod+1,f
  9226  06BA  0833               	movf	??___flmul+2,w
  9227  06BB  1103               	clrz
  9228  06BC  1803               	skipnc
  9229  06BD  3E01               	addlw	1
  9230  06BE  1D03               	btfss	3,2
  9231  06BF  07BF               	addwf	___flmul@prod+2,f
  9232  06C0  0834               	movf	??___flmul+3,w
  9233  06C1  1103               	clrz
  9234  06C2  1803               	skipnc
  9235  06C3  3E01               	addlw	1
  9236  06C4  1D03               	btfss	3,2
  9237  06C5  07C0               	addwf	___flmul@prod+3,f
  9238  06C6  083C               	movf	___flmul@grs+3,w
  9239  06C7  00B1               	movwf	??___flmul
  9240  06C8  01B2               	clrf	??___flmul+1
  9241  06C9  01B3               	clrf	??___flmul+2
  9242  06CA  01B4               	clrf	??___flmul+3
  9243  06CB  0831               	movf	??___flmul,w
  9244  06CC  07BD               	addwf	___flmul@prod,f
  9245  06CD  0832               	movf	??___flmul+1,w
  9246  06CE  1103               	clrz
  9247  06CF  1803               	skipnc
  9248  06D0  3E01               	addlw	1
  9249  06D1  1D03               	btfss	3,2
  9250  06D2  07BE               	addwf	___flmul@prod+1,f
  9251  06D3  0833               	movf	??___flmul+2,w
  9252  06D4  1103               	clrz
  9253  06D5  1803               	skipnc
  9254  06D6  3E01               	addlw	1
  9255  06D7  1D03               	btfss	3,2
  9256  06D8  07BF               	addwf	___flmul@prod+2,f
  9257  06D9  0834               	movf	??___flmul+3,w
  9258  06DA  1103               	clrz
  9259  06DB  1803               	skipnc
  9260  06DC  3E01               	addlw	1
  9261  06DD  1D03               	btfss	3,2
  9262  06DE  07C0               	addwf	___flmul@prod+3,f
  9263  06DF  3008               	movlw	8
  9264  06E0  00B1               	movwf	??___flmul
  9265  06E1                     u6845:	
  9266  06E1  1003               	clrc
  9267  06E2  0DB9               	rlf	___flmul@grs,f
  9268  06E3  0DBA               	rlf	___flmul@grs+1,f
  9269  06E4  0DBB               	rlf	___flmul@grs+2,f
  9270  06E5  0DBC               	rlf	___flmul@grs+3,f
  9271  06E6  0BB1               	decfsz	??___flmul,f
  9272  06E7  2EE1               	goto	u6845
  9273  06E8  0838               	movf	___flmul@bexp,w
  9274  06E9  0737               	addwf	___flmul@aexp,w
  9275  06EA  00B1               	movwf	??___flmul
  9276  06EB  01B2               	clrf	??___flmul+1
  9277  06EC  0DB2               	rlf	??___flmul+1,f
  9278  06ED  0831               	movf	??___flmul,w
  9279  06EE  3E82               	addlw	130
  9280  06EF  00C1               	movwf	___flmul@temp
  9281  06F0  0832               	movf	??___flmul+1,w
  9282  06F1  1803               	skipnc
  9283  06F2  3E01               	addlw	1
  9284  06F3  3EFF               	addlw	255
  9285  06F4  00C2               	movwf	___flmul@temp+1
  9286  06F5                     l6460:	
  9287  06F5  1BBF               	btfsc	___flmul@prod+2,7
  9288  06F6  2F12               	goto	l6462
  9289  06F7  3001               	movlw	1
  9290  06F8  00B1               	movwf	??___flmul
  9291  06F9                     u6855:	
  9292  06F9  1003               	clrc
  9293  06FA  0DBD               	rlf	___flmul@prod,f
  9294  06FB  0DBE               	rlf	___flmul@prod+1,f
  9295  06FC  0DBF               	rlf	___flmul@prod+2,f
  9296  06FD  0DC0               	rlf	___flmul@prod+3,f
  9297  06FE  0BB1               	decfsz	??___flmul,f
  9298  06FF  2EF9               	goto	u6855
  9299  0700  1BBC               	btfsc	___flmul@grs+3,7
  9300  0701  143D               	bsf	___flmul@prod,0
  9301  0702  3001               	movlw	1
  9302  0703  00B1               	movwf	??___flmul
  9303  0704                     u6875:	
  9304  0704  1003               	clrc
  9305  0705  0DB9               	rlf	___flmul@grs,f
  9306  0706  0DBA               	rlf	___flmul@grs+1,f
  9307  0707  0DBB               	rlf	___flmul@grs+2,f
  9308  0708  0DBC               	rlf	___flmul@grs+3,f
  9309  0709  0BB1               	decfsz	??___flmul,f
  9310  070A  2F04               	goto	u6875
  9311  070B  30FF               	movlw	255
  9312  070C  07C1               	addwf	___flmul@temp,f
  9313  070D  1803               	skipnc
  9314  070E  0AC2               	incf	___flmul@temp+1,f
  9315  070F  30FF               	movlw	255
  9316  0710  07C2               	addwf	___flmul@temp+1,f
  9317  0711  2EF5               	goto	l6460
  9318  0712                     l6462:	
  9319  0712  01B7               	clrf	___flmul@aexp
  9320  0713  1FBC               	btfss	___flmul@grs+3,7
  9321  0714  2F2B               	goto	l6472
  9322  0715  30FF               	movlw	255
  9323  0716  0539               	andwf	___flmul@grs,w
  9324  0717  00B1               	movwf	??___flmul
  9325  0718  30FF               	movlw	255
  9326  0719  053A               	andwf	___flmul@grs+1,w
  9327  071A  00B2               	movwf	??___flmul+1
  9328  071B  30FF               	movlw	255
  9329  071C  053B               	andwf	___flmul@grs+2,w
  9330  071D  00B3               	movwf	??___flmul+2
  9331  071E  307F               	movlw	127
  9332  071F  053C               	andwf	___flmul@grs+3,w
  9333  0720  00B4               	movwf	??___flmul+3
  9334  0721  0834               	movf	??___flmul+3,w
  9335  0722  0433               	iorwf	??___flmul+2,w
  9336  0723  0432               	iorwf	??___flmul+1,w
  9337  0724  0431               	iorwf	??___flmul,w
  9338  0725  1903               	skipnz
  9339  0726  183D               	btfsc	___flmul@prod,0
  9340  0727  2F29               	goto	l6468
  9341  0728  2F2B               	goto	l6472
  9342  0729                     l6468:	
  9343  0729  01B7               	clrf	___flmul@aexp
  9344  072A  0AB7               	incf	___flmul@aexp,f
  9345  072B                     l6472:	
  9346  072B  0837               	movf	___flmul@aexp,w
  9347  072C  1903               	btfsc	3,2
  9348  072D  2F5D               	goto	l6482
  9349  072E  3001               	movlw	1
  9350  072F  07BD               	addwf	___flmul@prod,f
  9351  0730  3000               	movlw	0
  9352  0731  1803               	skipnc
  9353  0732  3001               	movlw	1
  9354  0733  07BE               	addwf	___flmul@prod+1,f
  9355  0734  3000               	movlw	0
  9356  0735  1803               	skipnc
  9357  0736  3001               	movlw	1
  9358  0737  07BF               	addwf	___flmul@prod+2,f
  9359  0738  3000               	movlw	0
  9360  0739  1803               	skipnc
  9361  073A  3001               	movlw	1
  9362  073B  07C0               	addwf	___flmul@prod+3,f
  9363  073C  1C40               	btfss	___flmul@prod+3,0
  9364  073D  2F5D               	goto	l6482
  9365  073E  083D               	movf	___flmul@prod,w
  9366  073F  00B1               	movwf	??___flmul
  9367  0740  083E               	movf	___flmul@prod+1,w
  9368  0741  00B2               	movwf	??___flmul+1
  9369  0742  083F               	movf	___flmul@prod+2,w
  9370  0743  00B3               	movwf	??___flmul+2
  9371  0744  0840               	movf	___flmul@prod+3,w
  9372  0745  00B4               	movwf	??___flmul+3
  9373  0746  3001               	movlw	1
  9374  0747  00B5               	movwf	??___flmul+4
  9375  0748                     u6945:	
  9376  0748  0D34               	rlf	??___flmul+3,w
  9377  0749  0CB4               	rrf	??___flmul+3,f
  9378  074A  0CB3               	rrf	??___flmul+2,f
  9379  074B  0CB2               	rrf	??___flmul+1,f
  9380  074C  0CB1               	rrf	??___flmul,f
  9381  074D  0BB5               	decfsz	??___flmul+4,f
  9382  074E  2F48               	goto	u6945
  9383  074F  0834               	movf	??___flmul+3,w
  9384  0750  00C0               	movwf	___flmul@prod+3
  9385  0751  0833               	movf	??___flmul+2,w
  9386  0752  00BF               	movwf	___flmul@prod+2
  9387  0753  0832               	movf	??___flmul+1,w
  9388  0754  00BE               	movwf	___flmul@prod+1
  9389  0755  0831               	movf	??___flmul,w
  9390  0756  00BD               	movwf	___flmul@prod
  9391  0757  3001               	movlw	1
  9392  0758  07C1               	addwf	___flmul@temp,f
  9393  0759  1803               	skipnc
  9394  075A  0AC2               	incf	___flmul@temp+1,f
  9395  075B  3000               	movlw	0
  9396  075C  07C2               	addwf	___flmul@temp+1,f
  9397  075D                     l6482:	
  9398  075D  0842               	movf	___flmul@temp+1,w
  9399  075E  3A80               	xorlw	128
  9400  075F  00FF               	movwf	127
  9401  0760  3080               	movlw	128
  9402  0761  027F               	subwf	127,w
  9403  0762  1D03               	skipz
  9404  0763  2F66               	goto	u6955
  9405  0764  30FF               	movlw	255
  9406  0765  0241               	subwf	___flmul@temp,w
  9407  0766                     u6955:	
  9408  0766  1C03               	skipc
  9409  0767  2F73               	goto	l6486
  9410  0768  307F               	movlw	127
  9411  0769  1283               	bcf	3,5	;RP0=0, select bank0
  9412  076A  1303               	bcf	3,6	;RP1=0, select bank0
  9413  076B  00C0               	movwf	___flmul@prod+3
  9414  076C  3080               	movlw	128
  9415  076D  00BF               	movwf	___flmul@prod+2
  9416  076E  3000               	movlw	0
  9417  076F  00BE               	movwf	___flmul@prod+1
  9418  0770  3000               	movlw	0
  9419  0771  00BD               	movwf	___flmul@prod
  9420  0772  2FA3               	goto	l1388
  9421  0773                     l6486:	
  9422  0773  1283               	bcf	3,5	;RP0=0, select bank0
  9423  0774  1303               	bcf	3,6	;RP1=0, select bank0
  9424  0775  0842               	movf	___flmul@temp+1,w
  9425  0776  3A80               	xorlw	128
  9426  0777  00FF               	movwf	127
  9427  0778  3080               	movlw	128
  9428  0779  027F               	subwf	127,w
  9429  077A  1D03               	skipz
  9430  077B  2F7E               	goto	u6965
  9431  077C  3001               	movlw	1
  9432  077D  0241               	subwf	___flmul@temp,w
  9433  077E                     u6965:	
  9434  077E  1803               	skipnc
  9435  077F  2F8C               	goto	l6492
  9436  0780  3000               	movlw	0
  9437  0781  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0782  1303               	bcf	3,6	;RP1=0, select bank0
  9439  0783  00C0               	movwf	___flmul@prod+3
  9440  0784  3000               	movlw	0
  9441  0785  00BF               	movwf	___flmul@prod+2
  9442  0786  3000               	movlw	0
  9443  0787  00BE               	movwf	___flmul@prod+1
  9444  0788  3000               	movlw	0
  9445  0789  00BD               	movwf	___flmul@prod
  9446  078A  01B6               	clrf	___flmul@sign
  9447  078B  2FA3               	goto	l1388
  9448  078C                     l6492:	
  9449  078C  1283               	bcf	3,5	;RP0=0, select bank0
  9450  078D  1303               	bcf	3,6	;RP1=0, select bank0
  9451  078E  0841               	movf	___flmul@temp,w
  9452  078F  00B1               	movwf	??___flmul
  9453  0790  0831               	movf	??___flmul,w
  9454  0791  00B8               	movwf	___flmul@bexp
  9455  0792  30FF               	movlw	255
  9456  0793  05BD               	andwf	___flmul@prod,f
  9457  0794  30FF               	movlw	255
  9458  0795  05BE               	andwf	___flmul@prod+1,f
  9459  0796  307F               	movlw	127
  9460  0797  05BF               	andwf	___flmul@prod+2,f
  9461  0798  3000               	movlw	0
  9462  0799  05C0               	andwf	___flmul@prod+3,f
  9463  079A  1838               	btfsc	___flmul@bexp,0
  9464  079B  17BF               	bsf	___flmul@prod+2,7
  9465  079C  0838               	movf	___flmul@bexp,w
  9466  079D  00B1               	movwf	??___flmul
  9467  079E  1003               	clrc
  9468  079F  0C31               	rrf	??___flmul,w
  9469  07A0  00B2               	movwf	??___flmul+1
  9470  07A1  0832               	movf	??___flmul+1,w
  9471  07A2  00C0               	movwf	___flmul@prod+3
  9472  07A3                     l1388:	
  9473  07A3  0836               	movf	___flmul@sign,w
  9474  07A4  00B1               	movwf	??___flmul
  9475  07A5  0831               	movf	??___flmul,w
  9476  07A6  04C0               	iorwf	___flmul@prod+3,f
  9477  07A7  0840               	movf	___flmul@prod+3,w
  9478  07A8  00AC               	movwf	?___flmul+3
  9479  07A9  083F               	movf	___flmul@prod+2,w
  9480  07AA  00AB               	movwf	?___flmul+2
  9481  07AB  083E               	movf	___flmul@prod+1,w
  9482  07AC  00AA               	movwf	?___flmul+1
  9483  07AD  083D               	movf	___flmul@prod,w
  9484  07AE  00A9               	movwf	?___flmul
  9485  07AF  0008               	return
  9486  07B0                     __end_of___flmul:	
  9487                           
  9488                           	psect	text29
  9489  0800                     __ptext29:	
  9490 ;; *************** function __Umul8_16 *****************
  9491 ;; Defined at:
  9492 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  multiplier      1    wreg     unsigned char 
  9495 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9498 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9499 ;;  product         2    4[BANK0 ] unsigned int 
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  2    0[BANK0 ] unsigned int 
  9502 ;; Registers used:
  9503 ;;		wreg, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 300/0
  9506 ;;		On exit  : 300/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9509 ;;      Params:         0       2       0       0       0
  9510 ;;      Locals:         0       5       0       0       0
  9511 ;;      Temps:          0       2       0       0       0
  9512 ;;      Totals:         0       9       0       0       0
  9513 ;;Total ram usage:        9 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		___flmul
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           
  9524                           ;psect for function __Umul8_16
  9525  0800                     __Umul8_16:	
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9529                           ;__Umul8_16@multiplier stored from wreg
  9530  0800  00A8               	movwf	__Umul8_16@multiplier
  9531  0801  01A4               	clrf	__Umul8_16@product
  9532  0802  01A5               	clrf	__Umul8_16@product+1
  9533  0803  0820               	movf	__Umul8_16@multiplicand,w
  9534  0804  00A2               	movwf	??__Umul8_16
  9535  0805  01A3               	clrf	??__Umul8_16+1
  9536  0806  0822               	movf	??__Umul8_16,w
  9537  0807  00A6               	movwf	__Umul8_16@word_mpld
  9538  0808  0823               	movf	??__Umul8_16+1,w
  9539  0809  00A7               	movwf	__Umul8_16@word_mpld+1
  9540  080A                     l5924:	
  9541  080A  1C28               	btfss	__Umul8_16@multiplier,0
  9542  080B  2812               	goto	l1484
  9543  080C  0826               	movf	__Umul8_16@word_mpld,w
  9544  080D  07A4               	addwf	__Umul8_16@product,f
  9545  080E  1803               	skipnc
  9546  080F  0AA5               	incf	__Umul8_16@product+1,f
  9547  0810  0827               	movf	__Umul8_16@word_mpld+1,w
  9548  0811  07A5               	addwf	__Umul8_16@product+1,f
  9549  0812                     l1484:	
  9550  0812  3001               	movlw	1
  9551  0813                     u5885:	
  9552  0813  1003               	clrc
  9553  0814  0DA6               	rlf	__Umul8_16@word_mpld,f
  9554  0815  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9555  0816  3EFF               	addlw	-1
  9556  0817  1D03               	skipz
  9557  0818  2813               	goto	u5885
  9558  0819  1003               	clrc
  9559  081A  0CA8               	rrf	__Umul8_16@multiplier,f
  9560  081B  0828               	movf	__Umul8_16@multiplier,w
  9561  081C  1D03               	btfss	3,2
  9562  081D  280A               	goto	l5924
  9563  081E  0825               	movf	__Umul8_16@product+1,w
  9564  081F  00A1               	movwf	?__Umul8_16+1
  9565  0820  0824               	movf	__Umul8_16@product,w
  9566  0821  00A0               	movwf	?__Umul8_16
  9567  0822  0008               	return
  9568  0823                     __end_of__Umul8_16:	
  9569                           
  9570                           	psect	text30
  9571  1984                     __ptext30:	
  9572 ;; *************** function _PROCULUS_VP_Write_String *****************
  9573 ;; Defined at:
  9574 ;;		line 205 in file "proculus.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  vp              2   58[BANK0 ] unsigned int 
  9577 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9578 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  1    wreg      void 
  9583 ;; Registers used:
  9584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 300/0
  9587 ;;		On exit  : 300/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9590 ;;      Params:         0       3       0       0       0
  9591 ;;      Locals:         0       0       0       0       0
  9592 ;;      Temps:          0       1       0       0       0
  9593 ;;      Totals:         0       4       0       0       0
  9594 ;;Total ram usage:        4 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:    4
  9597 ;; This function calls:
  9598 ;;		_PROCULUS_VP_Write
  9599 ;;		_strlen
  9600 ;; This function is called by:
  9601 ;;		_Decodify_Command
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           
  9606                           ;psect for function _PROCULUS_VP_Write_String
  9607  1984                     _PROCULUS_VP_Write_String:	
  9608                           
  9609                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9610                           
  9611                           ;incstack = 0
  9612                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9613  1984  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9614  1985  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9615  1986  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9616  1987  00D2               	movwf	PROCULUS_VP_Write@vp
  9617  1988  085C               	movf	PROCULUS_VP_Write_String@text,w
  9618  1989  00D4               	movwf	PROCULUS_VP_Write@vetor
  9619  198A  3001               	movlw	1
  9620  198B  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9621  198C  085C               	movf	PROCULUS_VP_Write_String@text,w
  9622  198D  160A  158A  21CB  160A  158A  	fcall	_strlen
  9623  1992  0820               	movf	?_strlen,w
  9624  1993  3E01               	addlw	1
  9625  1994  00DD               	movwf	??_PROCULUS_VP_Write_String
  9626  1995  085D               	movf	??_PROCULUS_VP_Write_String,w
  9627  1996  00D6               	movwf	PROCULUS_VP_Write@size
  9628  1997  120A  118A  27B0   	fcall	_PROCULUS_VP_Write
  9629  199A  0008               	return
  9630  199B                     __end_of_PROCULUS_VP_Write_String:	
  9631                           
  9632                           	psect	text31
  9633  19CB                     __ptext31:	
  9634 ;; *************** function _strlen *****************
  9635 ;; Defined at:
  9636 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  s               1    wreg     PTR const unsigned char 
  9639 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9642 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9643 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9644 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  2    0[BANK0 ] unsigned int 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : B00/800
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9654 ;;      Params:         0       2       0       0       0
  9655 ;;      Locals:         0       2       0       0       0
  9656 ;;      Temps:          0       1       0       0       0
  9657 ;;      Totals:         0       5       0       0       0
  9658 ;;Total ram usage:        5 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    1
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_Decodify_Command
  9665 ;;		_PROCULUS_VP_Write_String
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           
  9670                           ;psect for function _strlen
  9671  19CB                     _strlen:	
  9672                           
  9673                           ;incstack = 0
  9674                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9675                           ;strlen@s stored from wreg
  9676  19CB  1283               	bcf	3,5	;RP0=0, select bank0
  9677  19CC  1303               	bcf	3,6	;RP1=0, select bank0
  9678  19CD  00A4               	movwf	strlen@s
  9679  19CE  0824               	movf	strlen@s,w
  9680  19CF  00A2               	movwf	??_strlen
  9681  19D0  0822               	movf	??_strlen,w
  9682  19D1  00A3               	movwf	strlen@cp
  9683  19D2                     l6084:	
  9684  19D2  0823               	movf	strlen@cp,w
  9685  19D3  0084               	movwf	4
  9686  19D4  1783               	bsf	3,7	;select IRP bank2
  9687  19D5  0800               	movf	0,w
  9688  19D6  1903               	btfsc	3,2
  9689  19D7  29DD               	goto	l6086
  9690  19D8  3001               	movlw	1
  9691  19D9  00A2               	movwf	??_strlen
  9692  19DA  0822               	movf	??_strlen,w
  9693  19DB  07A3               	addwf	strlen@cp,f
  9694  19DC  29D2               	goto	l6084
  9695  19DD                     l6086:	
  9696  19DD  0824               	movf	strlen@s,w
  9697  19DE  0223               	subwf	strlen@cp,w
  9698  19DF  00A0               	movwf	?_strlen
  9699  19E0  01A1               	clrf	?_strlen+1
  9700  19E1  1BA0               	btfsc	?_strlen,7
  9701  19E2  03A1               	decf	?_strlen+1,f
  9702  19E3  0008               	return
  9703  19E4                     __end_of_strlen:	
  9704                           
  9705                           	psect	text32
  9706  07B0                     __ptext32:	
  9707 ;; *************** function _PROCULUS_VP_Write *****************
  9708 ;; Defined at:
  9709 ;;		line 40 in file "proculus.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  vp              2   50[BANK0 ] unsigned int 
  9712 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9713 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9714 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9715 ;;  size            1   54[BANK0 ] unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  i               1   57[BANK0 ] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : B00/800
  9724 ;;		On exit  : 300/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9727 ;;      Params:         0       5       0       0       0
  9728 ;;      Locals:         0       1       0       0       0
  9729 ;;      Temps:          0       2       0       0       0
  9730 ;;      Totals:         0       8       0       0       0
  9731 ;;Total ram usage:        8 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    3
  9734 ;; This function calls:
  9735 ;;		_PROCULUS_Delay
  9736 ;;		_USART_put_int
  9737 ;;		_USART_putc
  9738 ;; This function is called by:
  9739 ;;		_PROCULUS_VP_Write_String
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           
  9744                           ;psect for function _PROCULUS_VP_Write
  9745  07B0                     _PROCULUS_VP_Write:	
  9746                           
  9747                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9748                           
  9749                           ;incstack = 0
  9750                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9751  07B0  30A5               	movlw	165
  9752  07B1  00CE               	movwf	USART_put_int@value
  9753  07B2  305A               	movlw	90
  9754  07B3  00CF               	movwf	USART_put_int@value+1
  9755  07B4  160A  158A  216E  120A  118A  	fcall	_USART_put_int
  9756                           
  9757                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9758  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  9759  07BA  0856               	movf	PROCULUS_VP_Write@size,w
  9760  07BB  3E03               	addlw	3
  9761  07BC  160A  158A  2133  120A  118A  	fcall	_USART_putc
  9762                           
  9763                           ;proculus.c: 43:      USART_putc(0x82);
  9764  07C1  3082               	movlw	130
  9765  07C2  160A  158A  2133  120A  118A  	fcall	_USART_putc
  9766                           
  9767                           ;proculus.c: 44:      USART_put_int(vp);
  9768  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  9769  07C8  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9770  07C9  00CF               	movwf	USART_put_int@value+1
  9771  07CA  0852               	movf	PROCULUS_VP_Write@vp,w
  9772  07CB  00CE               	movwf	USART_put_int@value
  9773  07CC  160A  158A  216E  120A  118A  	fcall	_USART_put_int
  9774                           
  9775                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9776  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  9777  07D2  01D9               	clrf	PROCULUS_VP_Write@i
  9778  07D3                     l6130:	
  9779  07D3  0856               	movf	PROCULUS_VP_Write@size,w
  9780  07D4  0259               	subwf	PROCULUS_VP_Write@i,w
  9781  07D5  1803               	btfsc	3,0
  9782  07D6  2FEF               	goto	l6132
  9783                           
  9784                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9785  07D7  0859               	movf	PROCULUS_VP_Write@i,w
  9786  07D8  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9787  07D9  00D7               	movwf	??_PROCULUS_VP_Write
  9788  07DA  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9789  07DB  1803               	skipnc
  9790  07DC  3E01               	addlw	1
  9791  07DD  00D8               	movwf	??_PROCULUS_VP_Write+1
  9792  07DE  0857               	movf	??_PROCULUS_VP_Write,w
  9793  07DF  0084               	movwf	4
  9794  07E0  1783               	bsf	3,7
  9795  07E1  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9796  07E2  1383               	bcf	3,7
  9797  07E3  0800               	movf	0,w
  9798  07E4  160A  158A  2133  120A  118A  	fcall	_USART_putc
  9799  07E9  3001               	movlw	1
  9800  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  9801  07EB  00D7               	movwf	??_PROCULUS_VP_Write
  9802  07EC  0857               	movf	??_PROCULUS_VP_Write,w
  9803  07ED  07D9               	addwf	PROCULUS_VP_Write@i,f
  9804  07EE  2FD3               	goto	l6130
  9805  07EF                     l6132:	
  9806                           
  9807                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9808  07EF  3001               	movlw	1
  9809  07F0  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9810  07F1  3000               	movlw	0
  9811  07F2  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9812  07F3  160A  158A  21E4   	fcall	_PROCULUS_Delay
  9813  07F6  0008               	return
  9814  07F7                     __end_of_PROCULUS_VP_Write:	
  9815                           
  9816                           	psect	text33
  9817  1943                     __ptext33:	
  9818 ;; *************** function _PROCULUS_Show_Screen *****************
  9819 ;; Defined at:
  9820 ;;		line 243 in file "proculus.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  screen          2   54[BANK0 ] unsigned int 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 300/0
  9831 ;;		On exit  : 300/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9834 ;;      Params:         0       2       0       0       0
  9835 ;;      Locals:         0       3       0       0       0
  9836 ;;      Temps:          0       1       0       0       0
  9837 ;;      Totals:         0       6       0       0       0
  9838 ;;Total ram usage:        6 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    4
  9841 ;; This function calls:
  9842 ;;		_PROCULUS_Control_Register_Write
  9843 ;; This function is called by:
  9844 ;;		_Decodify_Command
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           
  9849                           ;psect for function _PROCULUS_Show_Screen
  9850  1943                     _PROCULUS_Show_Screen:	
  9851                           
  9852                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9853                           
  9854                           ;incstack = 0
  9855                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9856  1943  3003               	movlw	3
  9857  1944  00D8               	movwf	??_PROCULUS_Show_Screen
  9858  1945  0858               	movf	??_PROCULUS_Show_Screen,w
  9859  1946  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9860                           
  9861                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9862  1947  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9863  1948  00D8               	movwf	??_PROCULUS_Show_Screen
  9864  1949  0858               	movf	??_PROCULUS_Show_Screen,w
  9865  194A  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9866                           
  9867                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9868  194B  0856               	movf	PROCULUS_Show_Screen@screen,w
  9869  194C  00D8               	movwf	??_PROCULUS_Show_Screen
  9870  194D  0858               	movf	??_PROCULUS_Show_Screen,w
  9871  194E  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9872                           
  9873                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9874  194F  3003               	movlw	3
  9875  1950  00D8               	movwf	??_PROCULUS_Show_Screen
  9876  1951  0858               	movf	??_PROCULUS_Show_Screen,w
  9877  1952  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9878  1953  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9879  1954  160A  158A  2561   	fcall	_PROCULUS_Control_Register_Write
  9880  1957  0008               	return
  9881  1958                     __end_of_PROCULUS_Show_Screen:	
  9882                           
  9883                           	psect	text34
  9884  1AE0                     __ptext34:	
  9885 ;; *************** function _PROCULUS_Buzzer *****************
  9886 ;; Defined at:
  9887 ;;		line 223 in file "proculus.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      void 
  9894 ;; Registers used:
  9895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9896 ;; Tracked objects:
  9897 ;;		On entry : 300/0
  9898 ;;		On exit  : 300/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9901 ;;      Params:         0       2       0       0       0
  9902 ;;      Locals:         0       2       0       0       0
  9903 ;;      Temps:          0       1       0       0       0
  9904 ;;      Totals:         0       5       0       0       0
  9905 ;;Total ram usage:        5 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:    4
  9908 ;; This function calls:
  9909 ;;		_PROCULUS_Control_Register_Write
  9910 ;;		___lwdiv
  9911 ;; This function is called by:
  9912 ;;		_Decodify_Command
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           
  9917                           ;psect for function _PROCULUS_Buzzer
  9918  1AE0                     _PROCULUS_Buzzer:	
  9919                           
  9920                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9924  1AE0  300A               	movlw	10
  9925  1AE1  00A0               	movwf	___lwdiv@divisor
  9926  1AE2  3000               	movlw	0
  9927  1AE3  00A1               	movwf	___lwdiv@divisor+1
  9928  1AE4  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9929  1AE5  00A3               	movwf	___lwdiv@dividend+1
  9930  1AE6  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9931  1AE7  00A2               	movwf	___lwdiv@dividend
  9932  1AE8  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  9933  1AED  0821               	movf	?___lwdiv+1,w
  9934  1AEE  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9935  1AEF  0820               	movf	?___lwdiv,w
  9936  1AF0  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9937                           
  9938                           ;proculus.c: 226:      vetor[0]=0x02;
  9939  1AF1  3002               	movlw	2
  9940  1AF2  00D8               	movwf	??_PROCULUS_Buzzer
  9941  1AF3  0858               	movf	??_PROCULUS_Buzzer,w
  9942  1AF4  00D9               	movwf	PROCULUS_Buzzer@vetor
  9943                           
  9944                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9945  1AF5  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9946  1AF6  00D8               	movwf	??_PROCULUS_Buzzer
  9947  1AF7  0858               	movf	??_PROCULUS_Buzzer,w
  9948  1AF8  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  9949                           
  9950                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9951  1AF9  3002               	movlw	2
  9952  1AFA  00D8               	movwf	??_PROCULUS_Buzzer
  9953  1AFB  0858               	movf	??_PROCULUS_Buzzer,w
  9954  1AFC  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9955  1AFD  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9956  1AFE  160A  158A  2561   	fcall	_PROCULUS_Control_Register_Write
  9957  1B01  0008               	return
  9958  1B02                     __end_of_PROCULUS_Buzzer:	
  9959                           
  9960                           	psect	text35
  9961  1DD5                     __ptext35:	
  9962 ;; *************** function ___lwdiv *****************
  9963 ;; Defined at:
  9964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  divisor         2    0[BANK0 ] unsigned int 
  9967 ;;  dividend        2    2[BANK0 ] unsigned int 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  quotient        2    6[BANK0 ] unsigned int 
  9970 ;;  counter         1    5[BANK0 ] unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  2    0[BANK0 ] unsigned int 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2, status,0
  9975 ;; Tracked objects:
  9976 ;;		On entry : 300/0
  9977 ;;		On exit  : 300/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9980 ;;      Params:         0       4       0       0       0
  9981 ;;      Locals:         0       3       0       0       0
  9982 ;;      Temps:          0       1       0       0       0
  9983 ;;      Totals:         0       8       0       0       0
  9984 ;;Total ram usage:        8 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    1
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_ADC_Media_10bits
  9991 ;;		_PROCULUS_Buzzer
  9992 ;;		_utoa
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           
  9997                           ;psect for function ___lwdiv
  9998  1DD5                     ___lwdiv:	
  9999                           
 10000                           ;incstack = 0
 10001                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10002  1DD5  01A6               	clrf	___lwdiv@quotient
 10003  1DD6  01A7               	clrf	___lwdiv@quotient+1
 10004  1DD7  0820               	movf	___lwdiv@divisor,w
 10005  1DD8  0421               	iorwf	___lwdiv@divisor+1,w
 10006  1DD9  1903               	btfsc	3,2
 10007  1DDA  2E0C               	goto	l5894
 10008  1DDB  01A5               	clrf	___lwdiv@counter
 10009  1DDC  0AA5               	incf	___lwdiv@counter,f
 10010  1DDD                     l5882:	
 10011  1DDD  1BA1               	btfsc	___lwdiv@divisor+1,7
 10012  1DDE  2DEB               	goto	l5884
 10013  1DDF  3001               	movlw	1
 10014  1DE0                     u5755:	
 10015  1DE0  1003               	clrc
 10016  1DE1  0DA0               	rlf	___lwdiv@divisor,f
 10017  1DE2  0DA1               	rlf	___lwdiv@divisor+1,f
 10018  1DE3  3EFF               	addlw	-1
 10019  1DE4  1D03               	skipz
 10020  1DE5  2DE0               	goto	u5755
 10021  1DE6  3001               	movlw	1
 10022  1DE7  00A4               	movwf	??___lwdiv
 10023  1DE8  0824               	movf	??___lwdiv,w
 10024  1DE9  07A5               	addwf	___lwdiv@counter,f
 10025  1DEA  2DDD               	goto	l5882
 10026  1DEB                     l5884:	
 10027  1DEB  3001               	movlw	1
 10028  1DEC                     u5775:	
 10029  1DEC  1003               	clrc
 10030  1DED  0DA6               	rlf	___lwdiv@quotient,f
 10031  1DEE  0DA7               	rlf	___lwdiv@quotient+1,f
 10032  1DEF  3EFF               	addlw	-1
 10033  1DF0  1D03               	skipz
 10034  1DF1  2DEC               	goto	u5775
 10035  1DF2  0821               	movf	___lwdiv@divisor+1,w
 10036  1DF3  0223               	subwf	___lwdiv@dividend+1,w
 10037  1DF4  1D03               	skipz
 10038  1DF5  2DF8               	goto	u5785
 10039  1DF6  0820               	movf	___lwdiv@divisor,w
 10040  1DF7  0222               	subwf	___lwdiv@dividend,w
 10041  1DF8                     u5785:	
 10042  1DF8  1C03               	skipc
 10043  1DF9  2E01               	goto	l5890
 10044  1DFA  0820               	movf	___lwdiv@divisor,w
 10045  1DFB  02A2               	subwf	___lwdiv@dividend,f
 10046  1DFC  0821               	movf	___lwdiv@divisor+1,w
 10047  1DFD  1C03               	skipc
 10048  1DFE  03A3               	decf	___lwdiv@dividend+1,f
 10049  1DFF  02A3               	subwf	___lwdiv@dividend+1,f
 10050  1E00  1426               	bsf	___lwdiv@quotient,0
 10051  1E01                     l5890:	
 10052  1E01  3001               	movlw	1
 10053  1E02                     u5795:	
 10054  1E02  1003               	clrc
 10055  1E03  0CA1               	rrf	___lwdiv@divisor+1,f
 10056  1E04  0CA0               	rrf	___lwdiv@divisor,f
 10057  1E05  3EFF               	addlw	-1
 10058  1E06  1D03               	skipz
 10059  1E07  2E02               	goto	u5795
 10060  1E08  3001               	movlw	1
 10061  1E09  02A5               	subwf	___lwdiv@counter,f
 10062  1E0A  1D03               	btfss	3,2
 10063  1E0B  2DEB               	goto	l5884
 10064  1E0C                     l5894:	
 10065  1E0C  0827               	movf	___lwdiv@quotient+1,w
 10066  1E0D  00A1               	movwf	?___lwdiv+1
 10067  1E0E  0826               	movf	___lwdiv@quotient,w
 10068  1E0F  00A0               	movwf	?___lwdiv
 10069  1E10  0008               	return
 10070  1E11                     __end_of___lwdiv:	
 10071                           
 10072                           	psect	text36
 10073  1D61                     __ptext36:	
 10074 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10075 ;; Defined at:
 10076 ;;		line 13 in file "proculus.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  vetor           1    wreg     PTR unsigned char 
 10079 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10080 ;;  size            1   50[BANK0 ] unsigned char 
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10083 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10084 ;;  i               1   53[BANK0 ] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 300/0
 10091 ;;		On exit  : 300/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10094 ;;      Params:         0       1       0       0       0
 10095 ;;      Locals:         0       2       0       0       0
 10096 ;;      Temps:          0       1       0       0       0
 10097 ;;      Totals:         0       4       0       0       0
 10098 ;;Total ram usage:        4 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    3
 10101 ;; This function calls:
 10102 ;;		_PROCULUS_Delay
 10103 ;;		_USART_put_int
 10104 ;;		_USART_putc
 10105 ;; This function is called by:
 10106 ;;		_PROCULUS_Buzzer
 10107 ;;		_PROCULUS_Show_Screen
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           
 10112                           ;psect for function _PROCULUS_Control_Register_Write
 10113  1D61                     _PROCULUS_Control_Register_Write:	
 10114                           
 10115                           ;incstack = 0
 10116                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10117                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10118  1D61  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10119                           
 10120                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10121  1D62  30A5               	movlw	165
 10122  1D63  00CE               	movwf	USART_put_int@value
 10123  1D64  305A               	movlw	90
 10124  1D65  00CF               	movwf	USART_put_int@value+1
 10125  1D66  160A  158A  216E  160A  158A  	fcall	_USART_put_int
 10126                           
 10127                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10128  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
 10129  1D6C  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10130  1D6D  3E01               	addlw	1
 10131  1D6E  160A  158A  2133  160A  158A  	fcall	_USART_putc
 10132                           
 10133                           ;proculus.c: 16:      USART_putc(0x80);
 10134  1D73  3080               	movlw	128
 10135  1D74  160A  158A  2133  160A  158A  	fcall	_USART_putc
 10136                           
 10137                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10138  1D79  1283               	bcf	3,5	;RP0=0, select bank0
 10139  1D7A  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10140  1D7B                     l6114:	
 10141  1D7B  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10142  1D7C  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10143  1D7D  1803               	btfsc	3,0
 10144  1D7E  2D91               	goto	l6116
 10145                           
 10146                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10147  1D7F  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10148  1D80  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10149  1D81  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10150  1D82  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10151  1D83  0084               	movwf	4
 10152  1D84  1383               	bcf	3,7	;select IRP bank0
 10153  1D85  0800               	movf	0,w
 10154  1D86  160A  158A  2133  160A  158A  	fcall	_USART_putc
 10155  1D8B  3001               	movlw	1
 10156  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
 10157  1D8D  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10158  1D8E  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10159  1D8F  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10160  1D90  2D7B               	goto	l6114
 10161  1D91                     l6116:	
 10162                           
 10163                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10164  1D91  3001               	movlw	1
 10165  1D92  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10166  1D93  3000               	movlw	0
 10167  1D94  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10168  1D95  160A  158A  21E4   	fcall	_PROCULUS_Delay
 10169  1D98  0008               	return
 10170  1D99                     __end_of_PROCULUS_Control_Register_Write:	
 10171                           
 10172                           	psect	text37
 10173  196E                     __ptext37:	
 10174 ;; *************** function _USART_put_int *****************
 10175 ;; Defined at:
 10176 ;;		line 138 in file "usart.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  value           2   46[BANK0 ] int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10181 ;;		 -> USART_put_int@value(2), 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  1    wreg      void 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10186 ;; Tracked objects:
 10187 ;;		On entry : 300/0
 10188 ;;		On exit  : 300/100
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10191 ;;      Params:         0       2       0       0       0
 10192 ;;      Locals:         0       1       0       0       0
 10193 ;;      Temps:          0       1       0       0       0
 10194 ;;      Totals:         0       4       0       0       0
 10195 ;;Total ram usage:        4 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    2
 10198 ;; This function calls:
 10199 ;;		_USART_putc
 10200 ;; This function is called by:
 10201 ;;		_Decodify_Command
 10202 ;;		_PROCULUS_Control_Register_Write
 10203 ;;		_PROCULUS_VP_Write
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           
 10208                           ;psect for function _USART_put_int
 10209  196E                     _USART_put_int:	
 10210                           
 10211                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10212                           
 10213                           ;incstack = 0
 10214                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10215  196E  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10216  196F  00D0               	movwf	??_USART_put_int
 10217  1970  0850               	movf	??_USART_put_int,w
 10218  1971  00D1               	movwf	USART_put_int@dado
 10219                           
 10220                           ;usart.c: 141:      USART_putc(*(dado+1));
 10221  1972  0A51               	incf	USART_put_int@dado,w
 10222  1973  0084               	movwf	4
 10223  1974  1383               	bcf	3,7	;select IRP bank0
 10224  1975  0800               	movf	0,w
 10225  1976  160A  158A  2133  160A  158A  	fcall	_USART_putc
 10226                           
 10227                           ;usart.c: 142:      USART_putc(*dado);
 10228  197B  1283               	bcf	3,5	;RP0=0, select bank0
 10229  197C  0851               	movf	USART_put_int@dado,w
 10230  197D  0084               	movwf	4
 10231  197E  1383               	bcf	3,7	;select IRP bank0
 10232  197F  0800               	movf	0,w
 10233  1980  160A  158A  2133   	fcall	_USART_putc
 10234  1983  0008               	return
 10235  1984                     __end_of_USART_put_int:	
 10236                           
 10237                           	psect	text38
 10238  1933                     __ptext38:	
 10239 ;; *************** function _USART_putc *****************
 10240 ;; Defined at:
 10241 ;;		line 89 in file "usart.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  value           1    wreg     unsigned char 
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;  value           1    0[BANK0 ] unsigned char 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/100
 10252 ;;		On exit  : 300/100
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10255 ;;      Params:         0       0       0       0       0
 10256 ;;      Locals:         0       1       0       0       0
 10257 ;;      Temps:          0       0       0       0       0
 10258 ;;      Totals:         0       1       0       0       0
 10259 ;;Total ram usage:        1 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; Hardware stack levels required when called:    1
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_Decodify_Command
 10266 ;;		_Send_To_MB
 10267 ;;		_PROCULUS_Control_Register_Write
 10268 ;;		_PROCULUS_VP_Write
 10269 ;;		_USART_put_buffer
 10270 ;;		_USART_put_int
 10271 ;;		_USART_put_string
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           
 10276                           ;psect for function _USART_putc
 10277  1933                     _USART_putc:	
 10278                           
 10279                           ;incstack = 0
 10280                           ; Regs used in _USART_putc: [wreg]
 10281                           ;USART_putc@value stored from wreg
 10282  1933  1283               	bcf	3,5	;RP0=0, select bank0
 10283  1934  1303               	bcf	3,6	;RP1=0, select bank0
 10284  1935  00A0               	movwf	USART_putc@value
 10285                           
 10286                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10287  1936  3014               	movlw	20
 10288  1937  1683               	bsf	3,5	;RP0=1, select bank1
 10289  1938  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10290  1939  3000               	movlw	0
 10291  193A  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10292  193B                     l870:	
 10293                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10294                           
 10295  193B  1C98               	btfss	24,1	;volatile
 10296  193C  293B               	goto	l870
 10297                           
 10298                           ;usart.c: 93:     TXREG=value;
 10299  193D  1283               	bcf	3,5	;RP0=0, select bank0
 10300  193E  0820               	movf	USART_putc@value,w
 10301  193F  0099               	movwf	25	;volatile
 10302                           
 10303                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10304  1940  1683               	bsf	3,5	;RP0=1, select bank1
 10305  1941  1698               	bsf	24,5	;volatile
 10306  1942  0008               	return
 10307  1943                     __end_of_USART_putc:	
 10308                           
 10309                           	psect	text39
 10310  19E4                     __ptext39:	
 10311 ;; *************** function _PROCULUS_Delay *****************
 10312 ;; Defined at:
 10313 ;;		line 267 in file "proculus.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  i               2    4[BANK0 ] unsigned int 
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, status,2
 10322 ;; Tracked objects:
 10323 ;;		On entry : 300/800
 10324 ;;		On exit  : 300/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10327 ;;      Params:         0       2       0       0       0
 10328 ;;      Locals:         0       2       0       0       0
 10329 ;;      Temps:          0       2       0       0       0
 10330 ;;      Totals:         0       6       0       0       0
 10331 ;;Total ram usage:        6 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; Hardware stack levels required when called:    1
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_PROCULUS_Control_Register_Write
 10338 ;;		_PROCULUS_VP_Write
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _PROCULUS_Delay
 10344  19E4                     _PROCULUS_Delay:	
 10345                           
 10346                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10347                           
 10348                           ;incstack = 0
 10349                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10350  19E4  01A4               	clrf	PROCULUS_Delay@i
 10351  19E5  01A5               	clrf	PROCULUS_Delay@i+1
 10352  19E6                     l790:	
 10353  19E6  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10354  19E7  0225               	subwf	PROCULUS_Delay@i+1,w
 10355  19E8  1D03               	skipz
 10356  19E9  29EC               	goto	u5735
 10357  19EA  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10358  19EB  0224               	subwf	PROCULUS_Delay@i,w
 10359  19EC                     u5735:	
 10360  19EC  1803               	btfsc	3,0
 10361  19ED  0008               	return
 10362                           
 10363                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10364  19EE  3003               	movlw	3
 10365  19EF  1283               	bcf	3,5	;RP0=0, select bank0
 10366  19F0  1303               	bcf	3,6	;RP1=0, select bank0
 10367  19F1  00A3               	movwf	??_PROCULUS_Delay+1
 10368  19F2  3097               	movlw	151
 10369  19F3  00A2               	movwf	??_PROCULUS_Delay
 10370  19F4                     u8197:	
 10371  19F4  0BA2               	decfsz	??_PROCULUS_Delay,f
 10372  19F5  29F4               	goto	u8197
 10373  19F6  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10374  19F7  29F4               	goto	u8197
 10375                           
 10376                           ;proculus.c: 270:     }
 10377  19F8  3001               	movlw	1
 10378  19F9  1283               	bcf	3,5	;RP0=0, select bank0
 10379  19FA  1303               	bcf	3,6	;RP1=0, select bank0
 10380  19FB  07A4               	addwf	PROCULUS_Delay@i,f
 10381  19FC  1803               	skipnc
 10382  19FD  0AA5               	incf	PROCULUS_Delay@i+1,f
 10383  19FE  3000               	movlw	0
 10384  19FF  07A5               	addwf	PROCULUS_Delay@i+1,f
 10385  1A00  29E6               	goto	l790
 10386  1A01                     __end_of_PROCULUS_Delay:	
 10387                           
 10388                           	psect	text40
 10389  1BA0                     __ptext40:	
 10390 ;; *************** function _EEPROM_Write_String *****************
 10391 ;; Defined at:
 10392 ;;		line 97 in file "eeprom.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  addr            1    wreg     unsigned char 
 10395 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10396 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  addr            1    7[BANK0 ] unsigned char 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 300/300
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10408 ;;      Params:         0       1       0       0       0
 10409 ;;      Locals:         0       1       0       0       0
 10410 ;;      Temps:          0       1       0       0       0
 10411 ;;      Totals:         0       3       0       0       0
 10412 ;;Total ram usage:        3 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    2
 10415 ;; This function calls:
 10416 ;;		_EEPROM_Write_Byte
 10417 ;; This function is called by:
 10418 ;;		_Decodify_Command
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           
 10423                           ;psect for function _EEPROM_Write_String
 10424  1BA0                     _EEPROM_Write_String:	
 10425                           
 10426                           ;incstack = 0
 10427                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10428                           ;EEPROM_Write_String@addr stored from wreg
 10429  1BA0  1283               	bcf	3,5	;RP0=0, select bank0
 10430  1BA1  1303               	bcf	3,6	;RP1=0, select bank0
 10431  1BA2  00A7               	movwf	EEPROM_Write_String@addr
 10432  1BA3                     l6852:	
 10433                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10434                           
 10435                           
 10436                           ;eeprom.c: 99:     while(*dado)
 10437  1BA3  0825               	movf	EEPROM_Write_String@dado,w
 10438  1BA4  0084               	movwf	4
 10439  1BA5  1783               	bsf	3,7	;select IRP bank2
 10440  1BA6  0800               	movf	0,w
 10441  1BA7  1903               	btfsc	3,2
 10442  1BA8  2BC0               	goto	l6854
 10443                           
 10444                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10445  1BA9  0825               	movf	EEPROM_Write_String@dado,w
 10446  1BAA  0084               	movwf	4
 10447  1BAB  0800               	movf	0,w
 10448  1BAC  00A6               	movwf	??_EEPROM_Write_String
 10449  1BAD  0826               	movf	??_EEPROM_Write_String,w
 10450  1BAE  00A0               	movwf	EEPROM_Write_Byte@dado
 10451  1BAF  0827               	movf	EEPROM_Write_String@addr,w
 10452  1BB0  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10453                           
 10454                           ;eeprom.c: 102:      addr++;
 10455  1BB5  3001               	movlw	1
 10456  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
 10457  1BB7  1303               	bcf	3,6	;RP1=0, select bank0
 10458  1BB8  00A6               	movwf	??_EEPROM_Write_String
 10459  1BB9  0826               	movf	??_EEPROM_Write_String,w
 10460  1BBA  07A7               	addwf	EEPROM_Write_String@addr,f
 10461                           
 10462                           ;eeprom.c: 103:      dado++;
 10463  1BBB  3001               	movlw	1
 10464  1BBC  00A6               	movwf	??_EEPROM_Write_String
 10465  1BBD  0826               	movf	??_EEPROM_Write_String,w
 10466  1BBE  07A5               	addwf	EEPROM_Write_String@dado,f
 10467  1BBF  2BA3               	goto	l6852
 10468  1BC0                     l6854:	
 10469                           
 10470                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10471  1BC0  0825               	movf	EEPROM_Write_String@dado,w
 10472  1BC1  0084               	movwf	4
 10473  1BC2  0800               	movf	0,w
 10474  1BC3  00A6               	movwf	??_EEPROM_Write_String
 10475  1BC4  0826               	movf	??_EEPROM_Write_String,w
 10476  1BC5  00A0               	movwf	EEPROM_Write_Byte@dado
 10477  1BC6  0827               	movf	EEPROM_Write_String@addr,w
 10478  1BC7  160A  158A  2599   	fcall	_EEPROM_Write_Byte
 10479  1BCA  0008               	return
 10480  1BCB                     __end_of_EEPROM_Write_String:	
 10481                           
 10482                           	psect	text41
 10483  1C26                     __ptext41:	
 10484 ;; *************** function _EEPROM_Write_Integer *****************
 10485 ;; Defined at:
 10486 ;;		line 68 in file "eeprom.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  addr            1    wreg     unsigned char 
 10489 ;;  dado            2    5[BANK0 ] unsigned int 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  addr            1   11[BANK0 ] unsigned char 
 10492 ;;  i               1   12[BANK0 ] unsigned char 
 10493 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10494 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10495 ;;  addr_memo       1    0        unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10500 ;; Tracked objects:
 10501 ;;		On entry : 200/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10505 ;;      Params:         0       2       0       0       0
 10506 ;;      Locals:         0       4       0       0       0
 10507 ;;      Temps:          0       2       0       0       0
 10508 ;;      Totals:         0       8       0       0       0
 10509 ;;Total ram usage:        8 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:    2
 10512 ;; This function calls:
 10513 ;;		_EEPROM_Write_Byte
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;;		_Decodify_Command
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           
 10521                           ;psect for function _EEPROM_Write_Integer
 10522  1C26                     _EEPROM_Write_Integer:	
 10523                           
 10524                           ;incstack = 0
 10525                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10526                           ;EEPROM_Write_Integer@addr stored from wreg
 10527  1C26  1283               	bcf	3,5	;RP0=0, select bank0
 10528  1C27  00AB               	movwf	EEPROM_Write_Integer@addr
 10529                           
 10530                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10531  1C28  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10532  1C29  00A7               	movwf	??_EEPROM_Write_Integer
 10533  1C2A  0827               	movf	??_EEPROM_Write_Integer,w
 10534  1C2B  00AA               	movwf	EEPROM_Write_Integer@ptr
 10535                           
 10536                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10537  1C2C  01AC               	clrf	EEPROM_Write_Integer@i
 10538  1C2D                     l6808:	
 10539                           
 10540                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10541  1C2D  082A               	movf	EEPROM_Write_Integer@ptr,w
 10542  1C2E  0084               	movwf	4
 10543  1C2F  1383               	bcf	3,7	;select IRP bank0
 10544  1C30  0800               	movf	0,w
 10545  1C31  00A7               	movwf	??_EEPROM_Write_Integer
 10546  1C32  0827               	movf	??_EEPROM_Write_Integer,w
 10547  1C33  00A0               	movwf	EEPROM_Write_Byte@dado
 10548  1C34  082B               	movf	EEPROM_Write_Integer@addr,w
 10549  1C35  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10550  1C3A  3001               	movlw	1
 10551  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 10552  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
 10553  1C3D  00A7               	movwf	??_EEPROM_Write_Integer
 10554  1C3E  0827               	movf	??_EEPROM_Write_Integer,w
 10555  1C3F  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10556  1C40  3001               	movlw	1
 10557  1C41  00A7               	movwf	??_EEPROM_Write_Integer
 10558  1C42  0827               	movf	??_EEPROM_Write_Integer,w
 10559  1C43  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10560  1C44  3001               	movlw	1
 10561  1C45  00A7               	movwf	??_EEPROM_Write_Integer
 10562  1C46  0827               	movf	??_EEPROM_Write_Integer,w
 10563  1C47  07AC               	addwf	EEPROM_Write_Integer@i,f
 10564  1C48  3002               	movlw	2
 10565  1C49  022C               	subwf	EEPROM_Write_Integer@i,w
 10566  1C4A  1C03               	skipc
 10567  1C4B  2C2D               	goto	l6808
 10568                           
 10569                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10570  1C4C  304E               	movlw	78
 10571  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
 10572  1C4E  1303               	bcf	3,6	;RP1=0, select bank0
 10573  1C4F  00A8               	movwf	??_EEPROM_Write_Integer+1
 10574  1C50  30EA               	movlw	234
 10575  1C51  00A7               	movwf	??_EEPROM_Write_Integer
 10576  1C52                     u8207:	
 10577  1C52  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10578  1C53  2C52               	goto	u8207
 10579  1C54  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10580  1C55  2C52               	goto	u8207
 10581  1C56  0000               	nop
 10582  1C57  0008               	return
 10583  1C58                     __end_of_EEPROM_Write_Integer:	
 10584                           
 10585                           	psect	text42
 10586  1D99                     __ptext42:	
 10587 ;; *************** function _EEPROM_Write_Byte *****************
 10588 ;; Defined at:
 10589 ;;		line 21 in file "eeprom.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;  addr            1    wreg     unsigned char 
 10592 ;;  dado            1    0[BANK0 ] unsigned char 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  addr            1    3[BANK0 ] unsigned char 
 10595 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/300
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10605 ;;      Params:         0       1       0       0       0
 10606 ;;      Locals:         0       2       0       0       0
 10607 ;;      Temps:          0       2       0       0       0
 10608 ;;      Totals:         0       5       0       0       0
 10609 ;;Total ram usage:        5 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    1
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_Decodify_Command
 10616 ;;		_EEPROM_Write_Integer
 10617 ;;		_EEPROM_Write_String
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           
 10622                           ;psect for function _EEPROM_Write_Byte
 10623  1D99                     _EEPROM_Write_Byte:	
 10624                           
 10625                           ;incstack = 0
 10626                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10627                           ;EEPROM_Write_Byte@addr stored from wreg
 10628  1D99  1283               	bcf	3,5	;RP0=0, select bank0
 10629  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
 10630  1D9B  00A3               	movwf	EEPROM_Write_Byte@addr
 10631                           
 10632                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10633  1D9C  3014               	movlw	20
 10634  1D9D  00FA               	movwf	_Delay_Led_Memory	;volatile
 10635  1D9E  3000               	movlw	0
 10636  1D9F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10637  1DA0                     l509:	
 10638                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10639                           
 10640  1DA0  1683               	bsf	3,5	;RP0=1, select bank3
 10641  1DA1  1703               	bsf	3,6	;RP1=1, select bank3
 10642  1DA2  188C               	btfsc	12,1	;volsfr
 10643  1DA3  2DA0               	goto	l509
 10644                           
 10645                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10646  1DA4  1F8B               	btfss	11,7	;volatile
 10647  1DA5  2DAB               	goto	l6046
 10648                           
 10649                           ;eeprom.c: 28:           last_GIE=1;
 10650  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
 10651  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
 10652  1DA8  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10653  1DA9  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10654  1DAA  2DAE               	goto	l6048
 10655  1DAB                     l6046:	
 10656                           
 10657                           ;eeprom.c: 30:           last_GIE=0;
 10658  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
 10659  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
 10660  1DAD  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10661  1DAE                     l6048:	
 10662                           
 10663                           ;eeprom.c: 32:        EEADR=addr;
 10664  1DAE  0823               	movf	EEPROM_Write_Byte@addr,w
 10665  1DAF  1703               	bsf	3,6	;RP1=1, select bank2
 10666  1DB0  008D               	movwf	13	;volatile
 10667                           
 10668                           ;eeprom.c: 33:        EEDATA=dado;
 10669  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
 10670  1DB2  0820               	movf	EEPROM_Write_Byte@dado,w
 10671  1DB3  1703               	bsf	3,6	;RP1=1, select bank2
 10672  1DB4  008C               	movwf	12	;volatile
 10673                           
 10674                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10675  1DB5  1683               	bsf	3,5	;RP0=1, select bank3
 10676  1DB6  138C               	bcf	12,7	;volsfr
 10677                           
 10678                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10679  1DB7  150C               	bsf	12,2	;volsfr
 10680                           
 10681                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10682  1DB8  138B               	bcf	11,7	;volatile
 10683                           
 10684                           ;eeprom.c: 37:        EECON2=0x55;
 10685  1DB9  3055               	movlw	85
 10686  1DBA  008D               	movwf	13	;volsfr
 10687                           
 10688                           ;eeprom.c: 38:        EECON2=0xAA;
 10689  1DBB  30AA               	movlw	170
 10690  1DBC  008D               	movwf	13	;volsfr
 10691                           
 10692                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10693  1DBD  148C               	bsf	12,1	;volsfr
 10694                           
 10695                           ;eeprom.c: 41:        if(last_GIE==1)
 10696  1DBE  1283               	bcf	3,5	;RP0=0, select bank0
 10697  1DBF  1303               	bcf	3,6	;RP1=0, select bank0
 10698  1DC0  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10699  1DC1  1D03               	btfss	3,2
 10700  1DC2  2DC5               	goto	l514
 10701                           
 10702                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10703  1DC3  178B               	bsf	11,7	;volatile
 10704  1DC4  2DC6               	goto	l515
 10705  1DC5                     l514:	
 10706                           ;eeprom.c: 43:        else
 10707                           
 10708                           
 10709                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10710  1DC5  138B               	bcf	11,7	;volatile
 10711  1DC6                     l515:	
 10712                           
 10713                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10714  1DC6  1683               	bsf	3,5	;RP0=1, select bank3
 10715  1DC7  1703               	bsf	3,6	;RP1=1, select bank3
 10716  1DC8  110C               	bcf	12,2	;volsfr
 10717                           
 10718                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10719  1DC9  304E               	movlw	78
 10720  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
 10721  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
 10722  1DCC  00A2               	movwf	??_EEPROM_Write_Byte+1
 10723  1DCD  30EA               	movlw	234
 10724  1DCE  00A1               	movwf	??_EEPROM_Write_Byte
 10725  1DCF                     u8217:	
 10726  1DCF  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10727  1DD0  2DCF               	goto	u8217
 10728  1DD1  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10729  1DD2  2DCF               	goto	u8217
 10730  1DD3  0000               	nop
 10731  1DD4  0008               	return
 10732  1DD5                     __end_of_EEPROM_Write_Byte:	
 10733                           
 10734                           	psect	text43
 10735  1A5D                     __ptext43:	
 10736 ;; *************** function _EEPROM_Read_String *****************
 10737 ;; Defined at:
 10738 ;;		line 109 in file "eeprom.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  addr            1    wreg     unsigned char 
 10741 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10742 ;;		 -> texto(16), 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  addr            1    5[BANK0 ] unsigned char 
 10745 ;;  c               1    6[BANK0 ] unsigned char 
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  1    wreg      void 
 10748 ;; Registers used:
 10749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 300/300
 10752 ;;		On exit  : B00/800
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10755 ;;      Params:         0       1       0       0       0
 10756 ;;      Locals:         0       2       0       0       0
 10757 ;;      Temps:          0       1       0       0       0
 10758 ;;      Totals:         0       4       0       0       0
 10759 ;;Total ram usage:        4 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    2
 10762 ;; This function calls:
 10763 ;;		_EEPROM_Read_Byte
 10764 ;; This function is called by:
 10765 ;;		_Decodify_Command
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           
 10770                           ;psect for function _EEPROM_Read_String
 10771  1A5D                     _EEPROM_Read_String:	
 10772                           
 10773                           ;incstack = 0
 10774                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10775                           ;EEPROM_Read_String@addr stored from wreg
 10776  1A5D  1283               	bcf	3,5	;RP0=0, select bank0
 10777  1A5E  1303               	bcf	3,6	;RP1=0, select bank0
 10778  1A5F  00A5               	movwf	EEPROM_Read_String@addr
 10779  1A60                     l541:	
 10780                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10781                           
 10782                           
 10783                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10784  1A60  0825               	movf	EEPROM_Read_String@addr,w
 10785  1A61  160A  158A  22BE  160A  158A  	fcall	_EEPROM_Read_Byte
 10786  1A66  1303               	bcf	3,6	;RP1=0, select bank0
 10787  1A67  00A4               	movwf	??_EEPROM_Read_String
 10788  1A68  0824               	movf	??_EEPROM_Read_String,w
 10789  1A69  00A6               	movwf	EEPROM_Read_String@c
 10790  1A6A  3001               	movlw	1
 10791  1A6B  00A4               	movwf	??_EEPROM_Read_String
 10792  1A6C  0824               	movf	??_EEPROM_Read_String,w
 10793  1A6D  07A5               	addwf	EEPROM_Read_String@addr,f
 10794                           
 10795                           ;eeprom.c: 114:         *(dado++)=c;
 10796  1A6E  0826               	movf	EEPROM_Read_String@c,w
 10797  1A6F  00A4               	movwf	??_EEPROM_Read_String
 10798  1A70  0823               	movf	EEPROM_Read_String@dado,w
 10799  1A71  0084               	movwf	4
 10800  1A72  0824               	movf	??_EEPROM_Read_String,w
 10801  1A73  1783               	bsf	3,7	;select IRP bank2
 10802  1A74  0080               	movwf	0
 10803  1A75  3001               	movlw	1
 10804  1A76  00A4               	movwf	??_EEPROM_Read_String
 10805  1A77  0824               	movf	??_EEPROM_Read_String,w
 10806  1A78  07A3               	addwf	EEPROM_Read_String@dado,f
 10807                           
 10808                           ;eeprom.c: 116:       }while(c);
 10809  1A79  0826               	movf	EEPROM_Read_String@c,w
 10810  1A7A  1903               	btfsc	3,2
 10811  1A7B  0008               	return
 10812  1A7C  2A60               	goto	l541
 10813  1A7D                     __end_of_EEPROM_Read_String:	
 10814                           
 10815                           	psect	text44
 10816  1B76                     __ptext44:	
 10817 ;; *************** function _EEPROM_Read_Integer *****************
 10818 ;; Defined at:
 10819 ;;		line 81 in file "eeprom.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  addr            1    wreg     unsigned char 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  addr            1    6[BANK0 ] unsigned char 
 10824 ;;  result          2    8[BANK0 ] unsigned int 
 10825 ;;  i               1   10[BANK0 ] unsigned char 
 10826 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10827 ;;		 -> EEPROM_Read_Integer@result(2), 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  2    3[BANK0 ] unsigned int 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : B00/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10837 ;;      Params:         0       2       0       0       0
 10838 ;;      Locals:         0       5       0       0       0
 10839 ;;      Temps:          0       1       0       0       0
 10840 ;;      Totals:         0       8       0       0       0
 10841 ;;Total ram usage:        8 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    2
 10844 ;; This function calls:
 10845 ;;		_EEPROM_Read_Byte
 10846 ;; This function is called by:
 10847 ;;		_main
 10848 ;;		_Decodify_Command
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           
 10853                           ;psect for function _EEPROM_Read_Integer
 10854  1B76                     _EEPROM_Read_Integer:	
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10858                           ;EEPROM_Read_Integer@addr stored from wreg
 10859  1B76  1283               	bcf	3,5	;RP0=0, select bank0
 10860  1B77  1303               	bcf	3,6	;RP1=0, select bank0
 10861  1B78  00A6               	movwf	EEPROM_Read_Integer@addr
 10862                           
 10863                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10864  1B79  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10865  1B7A  00A5               	movwf	??_EEPROM_Read_Integer
 10866  1B7B  0825               	movf	??_EEPROM_Read_Integer,w
 10867  1B7C  00A7               	movwf	EEPROM_Read_Integer@ptr
 10868                           
 10869                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10870  1B7D  01AA               	clrf	EEPROM_Read_Integer@i
 10871  1B7E                     l6784:	
 10872                           
 10873                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10874  1B7E  0826               	movf	EEPROM_Read_Integer@addr,w
 10875  1B7F  160A  158A  22BE  160A  158A  	fcall	_EEPROM_Read_Byte
 10876  1B84  1303               	bcf	3,6	;RP1=0, select bank0
 10877  1B85  00A5               	movwf	??_EEPROM_Read_Integer
 10878  1B86  0827               	movf	EEPROM_Read_Integer@ptr,w
 10879  1B87  0084               	movwf	4
 10880  1B88  0825               	movf	??_EEPROM_Read_Integer,w
 10881  1B89  1383               	bcf	3,7	;select IRP bank0
 10882  1B8A  0080               	movwf	0
 10883  1B8B  3001               	movlw	1
 10884  1B8C  00A5               	movwf	??_EEPROM_Read_Integer
 10885  1B8D  0825               	movf	??_EEPROM_Read_Integer,w
 10886  1B8E  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10887  1B8F  3001               	movlw	1
 10888  1B90  00A5               	movwf	??_EEPROM_Read_Integer
 10889  1B91  0825               	movf	??_EEPROM_Read_Integer,w
 10890  1B92  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10891  1B93  3001               	movlw	1
 10892  1B94  00A5               	movwf	??_EEPROM_Read_Integer
 10893  1B95  0825               	movf	??_EEPROM_Read_Integer,w
 10894  1B96  07AA               	addwf	EEPROM_Read_Integer@i,f
 10895  1B97  3002               	movlw	2
 10896  1B98  022A               	subwf	EEPROM_Read_Integer@i,w
 10897  1B99  1C03               	skipc
 10898  1B9A  2B7E               	goto	l6784
 10899                           
 10900                           ;eeprom.c: 89:       return result;
 10901  1B9B  0829               	movf	EEPROM_Read_Integer@result+1,w
 10902  1B9C  00A4               	movwf	?_EEPROM_Read_Integer+1
 10903  1B9D  0828               	movf	EEPROM_Read_Integer@result,w
 10904  1B9E  00A3               	movwf	?_EEPROM_Read_Integer
 10905  1B9F  0008               	return
 10906  1BA0                     __end_of_EEPROM_Read_Integer:	
 10907                           
 10908                           	psect	text45
 10909  1ABE                     __ptext45:	
 10910 ;; *************** function _EEPROM_Read_Byte *****************
 10911 ;; Defined at:
 10912 ;;		line 52 in file "eeprom.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  addr            1    wreg     unsigned char 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  addr            1    2[BANK0 ] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      unsigned char 
 10919 ;; Registers used:
 10920 ;;		wreg
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/300
 10923 ;;		On exit  : 300/200
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10926 ;;      Params:         0       0       0       0       0
 10927 ;;      Locals:         0       1       0       0       0
 10928 ;;      Temps:          0       2       0       0       0
 10929 ;;      Totals:         0       3       0       0       0
 10930 ;;Total ram usage:        3 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    1
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_Decodify_Command
 10937 ;;		_EEPROM_Read_Integer
 10938 ;;		_EEPROM_Read_String
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function _EEPROM_Read_Byte
 10944  1ABE                     _EEPROM_Read_Byte:	
 10945                           
 10946                           ;incstack = 0
 10947                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10948                           ;EEPROM_Read_Byte@addr stored from wreg
 10949  1ABE  1283               	bcf	3,5	;RP0=0, select bank0
 10950  1ABF  1303               	bcf	3,6	;RP1=0, select bank0
 10951  1AC0  00A2               	movwf	EEPROM_Read_Byte@addr
 10952                           
 10953                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10954  1AC1  3014               	movlw	20
 10955  1AC2  00FA               	movwf	_Delay_Led_Memory	;volatile
 10956  1AC3  3000               	movlw	0
 10957  1AC4  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10958  1AC5                     l519:	
 10959                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10960                           
 10961  1AC5  1683               	bsf	3,5	;RP0=1, select bank3
 10962  1AC6  1703               	bsf	3,6	;RP1=1, select bank3
 10963  1AC7  188C               	btfsc	12,1	;volsfr
 10964  1AC8  2AC5               	goto	l519
 10965                           
 10966                           ;eeprom.c: 57:    EEADR=addr;
 10967  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
 10968  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 10969  1ACB  0822               	movf	EEPROM_Read_Byte@addr,w
 10970  1ACC  1703               	bsf	3,6	;RP1=1, select bank2
 10971  1ACD  008D               	movwf	13	;volatile
 10972                           
 10973                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10974  1ACE  1683               	bsf	3,5	;RP0=1, select bank3
 10975  1ACF  138C               	bcf	12,7	;volsfr
 10976                           
 10977                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10978  1AD0  140C               	bsf	12,0	;volsfr
 10979                           
 10980                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10981  1AD1  304E               	movlw	78
 10982  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
 10983  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
 10984  1AD4  00A1               	movwf	??_EEPROM_Read_Byte+1
 10985  1AD5  30EA               	movlw	234
 10986  1AD6  00A0               	movwf	??_EEPROM_Read_Byte
 10987  1AD7                     u8227:	
 10988  1AD7  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10989  1AD8  2AD7               	goto	u8227
 10990  1AD9  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10991  1ADA  2AD7               	goto	u8227
 10992  1ADB  0000               	nop
 10993                           
 10994                           ;eeprom.c: 61:    return EEDATA;
 10995  1ADC  1283               	bcf	3,5	;RP0=0, select bank2
 10996  1ADD  1703               	bsf	3,6	;RP1=1, select bank2
 10997  1ADE  080C               	movf	12,w	;volatile
 10998  1ADF  0008               	return
 10999  1AE0                     __end_of_EEPROM_Read_Byte:	
 11000                           
 11001                           	psect	text46
 11002  1434                     __ptext46:	
 11003 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11004 ;; Defined at:
 11005 ;;		line 146 in file "EEPROM_24C1025.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  chip_add        1    wreg     unsigned char 
 11008 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11009 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11010 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  chip_add        1   17[BANK0 ] unsigned char 
 11013 ;;  ctrl            1   19[BANK0 ] unsigned char 
 11014 ;;  range           1   18[BANK0 ] unsigned char 
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 300/300
 11021 ;;		On exit  : 300/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11024 ;;      Params:         0       5       0       0       0
 11025 ;;      Locals:         0       3       0       0       0
 11026 ;;      Temps:          0       2       0       0       0
 11027 ;;      Totals:         0      10       0       0       0
 11028 ;;Total ram usage:       10 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:    3
 11031 ;; This function calls:
 11032 ;;		_I2C_Master_Start
 11033 ;;		_I2C_Master_Stop
 11034 ;;		_I2C_Master_Write
 11035 ;;		_my_delay_ms_WDT
 11036 ;; This function is called by:
 11037 ;;		_Decodify_Command
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           
 11042                           ;psect for function _EEPROM_24C1025_Write_Str
 11043  1434                     _EEPROM_24C1025_Write_Str:	
 11044                           
 11045                           ;incstack = 0
 11046                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11047                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11048  1434  1283               	bcf	3,5	;RP0=0, select bank0
 11049  1435  1303               	bcf	3,6	;RP1=0, select bank0
 11050  1436  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11051                           
 11052                           ;EEPROM_24C1025.c: 148:      unsigned char ctrl;;EEPROM_24C1025.c: 150:      if(mem_add>
      +                          0x1FFFF) return;
 11053  1437  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11054  1438  1D03               	btfss	3,2
 11055  1439  0008               	return
 11056  143A  3002               	movlw	2
 11057  143B  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11058  143C  1D03               	skipz
 11059  143D  2C46               	goto	u7153
 11060  143E  3000               	movlw	0
 11061  143F  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11062  1440  1D03               	skipz
 11063  1441  2C46               	goto	u7153
 11064  1442  3000               	movlw	0
 11065  1443  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11066  1444  1D03               	skipz
 11067  1445  2C46               	goto	u7153
 11068  1446                     u7153:	
 11069  1446  1803               	btfsc	3,0
 11070  1447  0008               	return
 11071  1448                     L10:	
 11072                           
 11073                           ;EEPROM_24C1025.c: 152:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11074  1448  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11075  1449  1D03               	btfss	3,2
 11076  144A  2C59               	goto	l6586
 11077  144B  3001               	movlw	1
 11078  144C  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11079  144D  1D03               	skipz
 11080  144E  2C57               	goto	u7163
 11081  144F  3000               	movlw	0
 11082  1450  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11083  1451  1D03               	skipz
 11084  1452  2C57               	goto	u7163
 11085  1453  3000               	movlw	0
 11086  1454  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11087  1455  1D03               	skipz
 11088  1456  2C57               	goto	u7163
 11089  1457                     u7163:	
 11090  1457  1C03               	btfss	3,0
 11091  1458  2C5E               	goto	l6588
 11092  1459                     l6586:	
 11093  1459  3008               	movlw	8
 11094  145A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11095  145B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11096  145C  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 11097  145D  2C5F               	goto	l6590
 11098  145E                     l6588:	
 11099  145E  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 11100  145F                     l6590:	
 11101                           
 11102                           ;EEPROM_24C1025.c: 153:      ctrl=chip_add;
 11103  145F  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11104  1460  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11105  1461  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11106  1462  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11107                           
 11108                           ;EEPROM_24C1025.c: 154:      ctrl<<=1;
 11109  1463  1003               	clrc
 11110  1464  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11111                           
 11112                           ;EEPROM_24C1025.c: 155:      ctrl |= 0xA0;
 11113  1465  30A0               	movlw	160
 11114  1466  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11115  1467  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11116  1468  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11117                           
 11118                           ;EEPROM_24C1025.c: 156:      ctrl |= range;
 11119  1469  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 11120  146A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11121  146B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11122  146C  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11123                           
 11124                           ;EEPROM_24C1025.c: 158:      I2C_Master_Start();
 11125  146D  160A  158A  2123  160A  118A  	fcall	_I2C_Master_Start
 11126                           
 11127                           ;EEPROM_24C1025.c: 159:      I2C_Master_Write(ctrl);
 11128  1472  1283               	bcf	3,5	;RP0=0, select bank0
 11129  1473  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11130  1474  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11131  1475  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 11132  1476  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11133  1477  00A3               	movwf	I2C_Master_Write@d
 11134  1478  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11135  1479  00A4               	movwf	I2C_Master_Write@d+1
 11136  147A  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11137                           
 11138                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(((char *)&mem_add)[1]);
 11139  147F  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11140  1480  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11141  1481  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 11142  1482  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11143  1483  00A3               	movwf	I2C_Master_Write@d
 11144  1484  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11145  1485  00A4               	movwf	I2C_Master_Write@d+1
 11146  1486  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11147                           
 11148                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[0]);
 11149  148B  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11150  148C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11151  148D  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 11152  148E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11153  148F  00A3               	movwf	I2C_Master_Write@d
 11154  1490  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11155  1491  00A4               	movwf	I2C_Master_Write@d+1
 11156  1492  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11157  1497                     l6650:	
 11158                           ;EEPROM_24C1025.c: 162:      while(*data)
 11159                           
 11160                           
 11161                           ;EEPROM_24C1025.c: 162:      while(*data)
 11162  1497  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 11163  1498  0084               	movwf	4
 11164  1499  1783               	bsf	3,7	;select IRP bank2
 11165  149A  0800               	movf	0,w
 11166  149B  1903               	btfsc	3,2
 11167  149C  2D0D               	goto	l6652
 11168  149D  0064               	clrwdt	;# 
 11169                           
 11170                           ;EEPROM_24C1025.c: 165:           if(mem_add>0x1FFFF) return;
 11171  149E  1283               	bcf	3,5	;RP0=0, select bank0
 11172  149F  1303               	bcf	3,6	;RP1=0, select bank0
 11173  14A0  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11174  14A1  1D03               	btfss	3,2
 11175  14A2  0008               	return
 11176  14A3  3002               	movlw	2
 11177  14A4  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11178  14A5  1D03               	skipz
 11179  14A6  2CAF               	goto	u7173
 11180  14A7  3000               	movlw	0
 11181  14A8  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11182  14A9  1D03               	skipz
 11183  14AA  2CAF               	goto	u7173
 11184  14AB  3000               	movlw	0
 11185  14AC  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11186  14AD  1D03               	skipz
 11187  14AE  2CAF               	goto	u7173
 11188  14AF                     u7173:	
 11189  14AF  1803               	btfsc	3,0
 11190  14B0  0008               	return
 11191                           
 11192                           ;EEPROM_24C1025.c: 166:           if((mem_add+1)%128==0)
 11193  14B1  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11194  14B2  3E01               	addlw	1
 11195  14B3  397F               	andlw	127
 11196  14B4  1D03               	btfss	3,2
 11197  14B5  2CEB               	goto	l6644
 11198                           
 11199                           ;EEPROM_24C1025.c: 167:             {;EEPROM_24C1025.c: 168:             I2C_Master_Writ
      +                          e(*data);
 11200  14B6  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 11201  14B7  0084               	movwf	4
 11202  14B8  1783               	bsf	3,7	;select IRP bank2
 11203  14B9  0800               	movf	0,w
 11204  14BA  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11205  14BB  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 11206  14BC  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11207  14BD  00A3               	movwf	I2C_Master_Write@d
 11208  14BE  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11209  14BF  00A4               	movwf	I2C_Master_Write@d+1
 11210  14C0  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11211                           
 11212                           ;EEPROM_24C1025.c: 169:             I2C_Master_Stop();
 11213  14C5  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 11214                           
 11215                           ;EEPROM_24C1025.c: 171:             my_delay_ms_WDT(5);
 11216  14CA  3000               	movlw	0
 11217  14CB  1283               	bcf	3,5	;RP0=0, select bank0
 11218  14CC  00A3               	movwf	my_delay_ms_WDT@time+3
 11219  14CD  3000               	movlw	0
 11220  14CE  00A2               	movwf	my_delay_ms_WDT@time+2
 11221  14CF  3000               	movlw	0
 11222  14D0  00A1               	movwf	my_delay_ms_WDT@time+1
 11223  14D1  3005               	movlw	5
 11224  14D2  00A0               	movwf	my_delay_ms_WDT@time
 11225  14D3  160A  158A  2529  160A  118A  	fcall	_my_delay_ms_WDT
 11226                           
 11227                           ;EEPROM_24C1025.c: 172:             mem_add++;
 11228  14D8  3001               	movlw	1
 11229  14D9  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11230  14DA  3000               	movlw	0
 11231  14DB  1803               	skipnc
 11232  14DC  3001               	movlw	1
 11233  14DD  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11234  14DE  3000               	movlw	0
 11235  14DF  1803               	skipnc
 11236  14E0  3001               	movlw	1
 11237  14E1  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11238  14E2  3000               	movlw	0
 11239  14E3  1803               	skipnc
 11240  14E4  3001               	movlw	1
 11241  14E5  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11242                           
 11243                           ;EEPROM_24C1025.c: 173:             data++;
 11244  14E6  3001               	movlw	1
 11245  14E7  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11246  14E8  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11247  14E9  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 11248  14EA  2C48               	goto	L10
 11249  14EB                     l6644:	
 11250                           ;EEPROM_24C1025.c: 174:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11251                           
 11252                           
 11253                           ;EEPROM_24C1025.c: 186:             {;EEPROM_24C1025.c: 187:             I2C_Master_Writ
      +                          e(*data);
 11254  14EB  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 11255  14EC  0084               	movwf	4
 11256  14ED  1783               	bsf	3,7	;select IRP bank2
 11257  14EE  0800               	movf	0,w
 11258  14EF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11259  14F0  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 11260  14F1  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11261  14F2  00A3               	movwf	I2C_Master_Write@d
 11262  14F3  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11263  14F4  00A4               	movwf	I2C_Master_Write@d+1
 11264  14F5  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11265                           
 11266                           ;EEPROM_24C1025.c: 188:             data++;
 11267  14FA  3001               	movlw	1
 11268  14FB  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 11269  14FC  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 11270  14FD  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 11271                           
 11272                           ;EEPROM_24C1025.c: 189:             mem_add++;
 11273  14FE  3001               	movlw	1
 11274  14FF  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11275  1500  3000               	movlw	0
 11276  1501  1803               	skipnc
 11277  1502  3001               	movlw	1
 11278  1503  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11279  1504  3000               	movlw	0
 11280  1505  1803               	skipnc
 11281  1506  3001               	movlw	1
 11282  1507  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11283  1508  3000               	movlw	0
 11284  1509  1803               	skipnc
 11285  150A  3001               	movlw	1
 11286  150B  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11287  150C  2C97               	goto	l6650
 11288  150D                     l6652:	
 11289                           
 11290                           ;EEPROM_24C1025.c: 192:      I2C_Master_Write(0);
 11291  150D  3000               	movlw	0
 11292  150E  00A3               	movwf	I2C_Master_Write@d
 11293  150F  00A4               	movwf	I2C_Master_Write@d+1
 11294  1510  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11295                           
 11296                           ;EEPROM_24C1025.c: 193:      I2C_Master_Stop();
 11297  1515  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 11298                           
 11299                           ;EEPROM_24C1025.c: 194:      my_delay_ms_WDT(5);
 11300  151A  3000               	movlw	0
 11301  151B  1283               	bcf	3,5	;RP0=0, select bank0
 11302  151C  00A3               	movwf	my_delay_ms_WDT@time+3
 11303  151D  3000               	movlw	0
 11304  151E  00A2               	movwf	my_delay_ms_WDT@time+2
 11305  151F  3000               	movlw	0
 11306  1520  00A1               	movwf	my_delay_ms_WDT@time+1
 11307  1521  3005               	movlw	5
 11308  1522  00A0               	movwf	my_delay_ms_WDT@time
 11309  1523  160A  158A  2529   	fcall	_my_delay_ms_WDT
 11310  1526  0008               	return
 11311  1527                     __end_of_EEPROM_24C1025_Write_Str:	
 11312                           
 11313                           	psect	text47
 11314  1958                     __ptext47:	
 11315 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11316 ;; Defined at:
 11317 ;;		line 268 in file "EEPROM_24C1025.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  chip_add        1    wreg     unsigned char 
 11320 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11321 ;;  data            1   27[BANK0 ] unsigned char 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 300/300
 11330 ;;		On exit  : 300/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11333 ;;      Params:         0       5       0       0       0
 11334 ;;      Locals:         0       1       0       0       0
 11335 ;;      Temps:          0       0       0       0       0
 11336 ;;      Totals:         0       6       0       0       0
 11337 ;;Total ram usage:        6 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    4
 11340 ;; This function calls:
 11341 ;;		_EEPROM_24C1025_Write_Buffer
 11342 ;; This function is called by:
 11343 ;;		_Decodify_Command
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           
 11348                           ;psect for function _EEPROM_24C1025_Write_Byte
 11349  1958                     _EEPROM_24C1025_Write_Byte:	
 11350                           
 11351                           ;incstack = 0
 11352                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 11353                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11354  1958  1283               	bcf	3,5	;RP0=0, select bank0
 11355  1959  1303               	bcf	3,6	;RP1=0, select bank0
 11356  195A  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11357                           
 11358                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11359  195B  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11360  195C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11361  195D  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11362  195E  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11363  195F  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11364  1960  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11365  1961  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11366  1962  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11367  1963  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11368  1964  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11369  1965  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11370  1966  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11371  1967  3000               	movlw	0
 11372  1968  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11373  1969  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11374  196A  160A  118A  2527   	fcall	_EEPROM_24C1025_Write_Buffer
 11375  196D  0008               	return
 11376  196E                     __end_of_EEPROM_24C1025_Write_Byte:	
 11377                           
 11378                           	psect	text48
 11379  168F                     __ptext48:	
 11380 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11381 ;; Defined at:
 11382 ;;		line 201 in file "EEPROM_24C1025.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;  chip_add        1    wreg     unsigned char 
 11385 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11386 ;;  texto           1   14[BANK0 ] PTR unsigned char 
 11387 ;;		 -> texto(16), 
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;  chip_add        1   18[BANK0 ] unsigned char 
 11390 ;;  ctrl            1   20[BANK0 ] unsigned char 
 11391 ;;  range           1   19[BANK0 ] unsigned char 
 11392 ;;  cnt             1   17[BANK0 ] unsigned char 
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 300/300
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11402 ;;      Params:         0       5       0       0       0
 11403 ;;      Locals:         0       4       0       0       0
 11404 ;;      Temps:          0       2       0       0       0
 11405 ;;      Totals:         0      11       0       0       0
 11406 ;;Total ram usage:       11 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    3
 11409 ;; This function calls:
 11410 ;;		_I2C_Master_Read
 11411 ;;		_I2C_Master_RepeatedStart
 11412 ;;		_I2C_Master_Start
 11413 ;;		_I2C_Master_Stop
 11414 ;;		_I2C_Master_Write
 11415 ;;		_my_delay_ms_WDT
 11416 ;; This function is called by:
 11417 ;;		_Decodify_Command
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           
 11422                           ;psect for function _EEPROM_24C1025_Read_Str
 11423  168F                     _EEPROM_24C1025_Read_Str:	
 11424                           
 11425                           ;incstack = 0
 11426                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11427                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11428  168F  1283               	bcf	3,5	;RP0=0, select bank0
 11429  1690  1303               	bcf	3,6	;RP1=0, select bank0
 11430  1691  00B2               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11431                           
 11432                           ;EEPROM_24C1025.c: 203:      unsigned char range=0;
 11433  1692  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 11434                           
 11435                           ;EEPROM_24C1025.c: 204:      unsigned char ctrl;;EEPROM_24C1025.c: 206:      if(mem_add>
      +                          0x1FFFF) return;
 11436  1693  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11437  1694  1D03               	btfss	3,2
 11438  1695  0008               	return
 11439  1696  3002               	movlw	2
 11440  1697  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11441  1698  1D03               	skipz
 11442  1699  2EA2               	goto	u7213
 11443  169A  3000               	movlw	0
 11444  169B  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11445  169C  1D03               	skipz
 11446  169D  2EA2               	goto	u7213
 11447  169E  3000               	movlw	0
 11448  169F  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11449  16A0  1D03               	skipz
 11450  16A1  2EA2               	goto	u7213
 11451  16A2                     u7213:	
 11452  16A2  1803               	btfsc	3,0
 11453  16A3  0008               	return
 11454                           
 11455                           ;EEPROM_24C1025.c: 208:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11456  16A4  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11457  16A5  1D03               	btfss	3,2
 11458  16A6  2EB5               	goto	l6664
 11459  16A7  3001               	movlw	1
 11460  16A8  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11461  16A9  1D03               	skipz
 11462  16AA  2EB3               	goto	u7223
 11463  16AB  3000               	movlw	0
 11464  16AC  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11465  16AD  1D03               	skipz
 11466  16AE  2EB3               	goto	u7223
 11467  16AF  3000               	movlw	0
 11468  16B0  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11469  16B1  1D03               	skipz
 11470  16B2  2EB3               	goto	u7223
 11471  16B3                     u7223:	
 11472  16B3  1C03               	btfss	3,0
 11473  16B4  2EBA               	goto	l6666
 11474  16B5                     l6664:	
 11475  16B5  3008               	movlw	8
 11476  16B6  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11477  16B7  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11478  16B8  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 11479  16B9  2EBB               	goto	l6668
 11480  16BA                     l6666:	
 11481  16BA  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 11482  16BB                     l6668:	
 11483                           
 11484                           ;EEPROM_24C1025.c: 209:      ctrl=chip_add;
 11485  16BB  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11486  16BC  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11487  16BD  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11488  16BE  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11489                           
 11490                           ;EEPROM_24C1025.c: 210:      ctrl<<=1;
 11491  16BF  1003               	clrc
 11492  16C0  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11493                           
 11494                           ;EEPROM_24C1025.c: 211:      ctrl |= 0xA0;
 11495  16C1  30A0               	movlw	160
 11496  16C2  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11497  16C3  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11498  16C4  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11499                           
 11500                           ;EEPROM_24C1025.c: 212:      ctrl |= 0b00000001;
 11501  16C5  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11502                           
 11503                           ;EEPROM_24C1025.c: 213:      ctrl |= range;
 11504  16C6  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 11505  16C7  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11506  16C8  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11507  16C9  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11508                           
 11509                           ;EEPROM_24C1025.c: 215:      I2C_Master_Start();
 11510  16CA  160A  158A  2123  160A  118A  	fcall	_I2C_Master_Start
 11511                           
 11512                           ;EEPROM_24C1025.c: 216:      I2C_Master_Write(ctrl & 0xFE);
 11513  16CF  1283               	bcf	3,5	;RP0=0, select bank0
 11514  16D0  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11515  16D1  39FE               	andlw	254
 11516  16D2  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11517  16D3  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11518  16D4  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11519  16D5  00A3               	movwf	I2C_Master_Write@d
 11520  16D6  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11521  16D7  00A4               	movwf	I2C_Master_Write@d+1
 11522  16D8  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11523                           
 11524                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(((char *)&mem_add)[1]);
 11525  16DD  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11526  16DE  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11527  16DF  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11528  16E0  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11529  16E1  00A3               	movwf	I2C_Master_Write@d
 11530  16E2  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11531  16E3  00A4               	movwf	I2C_Master_Write@d+1
 11532  16E4  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11533                           
 11534                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[0]);
 11535  16E9  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11536  16EA  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11537  16EB  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11538  16EC  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11539  16ED  00A3               	movwf	I2C_Master_Write@d
 11540  16EE  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11541  16EF  00A4               	movwf	I2C_Master_Write@d+1
 11542  16F0  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11543                           
 11544                           ;EEPROM_24C1025.c: 219:      I2C_Master_RepeatedStart();
 11545  16F5  160A  158A  2118  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11546                           
 11547                           ;EEPROM_24C1025.c: 220:      I2C_Master_Write(ctrl);
 11548  16FA  1283               	bcf	3,5	;RP0=0, select bank0
 11549  16FB  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11550  16FC  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11551  16FD  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11552  16FE  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11553  16FF  00A3               	movwf	I2C_Master_Write@d
 11554  1700  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11555  1701  00A4               	movwf	I2C_Master_Write@d+1
 11556  1702  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11557                           
 11558                           ;EEPROM_24C1025.c: 222:      cnt=0;
 11559  1707  01B1               	clrf	EEPROM_24C1025_Read_Str@cnt
 11560  1708                     l69:	
 11561                           ;EEPROM_24C1025.c: 223:      do{
 11562                           
 11563  1708  0064               	clrwdt	;# 
 11564                           
 11565                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 11566  1709  1283               	bcf	3,5	;RP0=0, select bank0
 11567  170A  1303               	bcf	3,6	;RP1=0, select bank0
 11568  170B  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11569  170C  1D03               	btfss	3,2
 11570  170D  2FE9               	goto	l6746
 11571  170E  3002               	movlw	2
 11572  170F  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11573  1710  1D03               	skipz
 11574  1711  2F1A               	goto	u7233
 11575  1712  3000               	movlw	0
 11576  1713  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11577  1714  1D03               	skipz
 11578  1715  2F1A               	goto	u7233
 11579  1716  3000               	movlw	0
 11580  1717  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11581  1718  1D03               	skipz
 11582  1719  2F1A               	goto	u7233
 11583  171A                     u7233:	
 11584  171A  1803               	btfsc	3,0
 11585  171B  2FE9               	goto	l6746
 11586                           
 11587                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 11588  171C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11589  171D  3E01               	addlw	1
 11590  171E  397F               	andlw	127
 11591  171F  1D03               	btfss	3,2
 11592  1720  2FB9               	goto	l6734
 11593                           
 11594                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*texto)=I2C_
      +                          Master_Read(0);
 11595  1721  3000               	movlw	0
 11596  1722  00A3               	movwf	I2C_Master_Read@a
 11597  1723  00A4               	movwf	I2C_Master_Read@a+1
 11598  1724  160A  158A  24BD  160A  118A  	fcall	_I2C_Master_Read
 11599  1729  0823               	movf	?_I2C_Master_Read,w
 11600  172A  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11601  172B  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 11602  172C  0084               	movwf	4
 11603  172D  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11604  172E  1783               	bsf	3,7	;select IRP bank2
 11605  172F  0080               	movwf	0
 11606                           
 11607                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 11608  1730  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 11609                           
 11610                           ;EEPROM_24C1025.c: 231:              my_delay_ms_WDT(5);
 11611  1735  3000               	movlw	0
 11612  1736  1283               	bcf	3,5	;RP0=0, select bank0
 11613  1737  00A3               	movwf	my_delay_ms_WDT@time+3
 11614  1738  3000               	movlw	0
 11615  1739  00A2               	movwf	my_delay_ms_WDT@time+2
 11616  173A  3000               	movlw	0
 11617  173B  00A1               	movwf	my_delay_ms_WDT@time+1
 11618  173C  3005               	movlw	5
 11619  173D  00A0               	movwf	my_delay_ms_WDT@time
 11620  173E  160A  158A  2529  160A  118A  	fcall	_my_delay_ms_WDT
 11621                           
 11622                           ;EEPROM_24C1025.c: 232:              mem_add++;
 11623  1743  3001               	movlw	1
 11624  1744  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11625  1745  3000               	movlw	0
 11626  1746  1803               	skipnc
 11627  1747  3001               	movlw	1
 11628  1748  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11629  1749  3000               	movlw	0
 11630  174A  1803               	skipnc
 11631  174B  3001               	movlw	1
 11632  174C  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11633  174D  3000               	movlw	0
 11634  174E  1803               	skipnc
 11635  174F  3001               	movlw	1
 11636  1750  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11637                           
 11638                           ;EEPROM_24C1025.c: 233:              texto++;
 11639  1751  3001               	movlw	1
 11640  1752  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11641  1753  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11642  1754  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11643                           
 11644                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11645  1755  082D               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11646  1756  1D03               	btfss	3,2
 11647  1757  2F66               	goto	l6708
 11648  1758  3001               	movlw	1
 11649  1759  022C               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11650  175A  1D03               	skipz
 11651  175B  2F64               	goto	u7253
 11652  175C  3000               	movlw	0
 11653  175D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11654  175E  1D03               	skipz
 11655  175F  2F64               	goto	u7253
 11656  1760  3000               	movlw	0
 11657  1761  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11658  1762  1D03               	skipz
 11659  1763  2F64               	goto	u7253
 11660  1764                     u7253:	
 11661  1764  1C03               	btfss	3,0
 11662  1765  2F6B               	goto	l6710
 11663  1766                     l6708:	
 11664  1766  3008               	movlw	8
 11665  1767  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11666  1768  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11667  1769  00B3               	movwf	EEPROM_24C1025_Read_Str@range
 11668  176A  2F6C               	goto	l6712
 11669  176B                     l6710:	
 11670  176B  01B3               	clrf	EEPROM_24C1025_Read_Str@range
 11671  176C                     l6712:	
 11672                           
 11673                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 11674  176C  0832               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11675  176D  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11676  176E  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11677  176F  00B4               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11678                           
 11679                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 11680  1770  1003               	clrc
 11681  1771  0DB4               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11682                           
 11683                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 11684  1772  30A0               	movlw	160
 11685  1773  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11686  1774  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11687  1775  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11688                           
 11689                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 11690  1776  1434               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11691                           
 11692                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 11693  1777  0833               	movf	EEPROM_24C1025_Read_Str@range,w
 11694  1778  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11695  1779  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11696  177A  04B4               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11697                           
 11698                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 11699  177B  160A  158A  2123  160A  118A  	fcall	_I2C_Master_Start
 11700                           
 11701                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 11702  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11703  1781  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11704  1782  39FE               	andlw	254
 11705  1783  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11706  1784  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11707  1785  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11708  1786  00A3               	movwf	I2C_Master_Write@d
 11709  1787  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11710  1788  00A4               	movwf	I2C_Master_Write@d+1
 11711  1789  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11712                           
 11713                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 11714  178E  082B               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11715  178F  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11716  1790  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11717  1791  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11718  1792  00A3               	movwf	I2C_Master_Write@d
 11719  1793  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11720  1794  00A4               	movwf	I2C_Master_Write@d+1
 11721  1795  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11722                           
 11723                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 11724  179A  082A               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11725  179B  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11726  179C  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11727  179D  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11728  179E  00A3               	movwf	I2C_Master_Write@d
 11729  179F  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11730  17A0  00A4               	movwf	I2C_Master_Write@d+1
 11731  17A1  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11732                           
 11733                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 11734  17A6  160A  158A  2118  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11735                           
 11736                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 11737  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11738  17AC  0834               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11739  17AD  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11740  17AE  01B0               	clrf	??_EEPROM_24C1025_Read_Str+1
 11741  17AF  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11742  17B0  00A3               	movwf	I2C_Master_Write@d
 11743  17B1  0830               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11744  17B2  00A4               	movwf	I2C_Master_Write@d+1
 11745  17B3  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 11746                           
 11747                           ;EEPROM_24C1025.c: 247:              }
 11748  17B8  2FE0               	goto	l6744
 11749  17B9                     l6734:	
 11750                           
 11751                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*texto)=I2C_
      +                          Master_Read(1);
 11752  17B9  3001               	movlw	1
 11753  17BA  00A3               	movwf	I2C_Master_Read@a
 11754  17BB  3000               	movlw	0
 11755  17BC  00A4               	movwf	I2C_Master_Read@a+1
 11756  17BD  160A  158A  24BD  160A  118A  	fcall	_I2C_Master_Read
 11757  17C2  0823               	movf	?_I2C_Master_Read,w
 11758  17C3  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11759  17C4  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 11760  17C5  0084               	movwf	4
 11761  17C6  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11762  17C7  1783               	bsf	3,7	;select IRP bank2
 11763  17C8  0080               	movwf	0
 11764                           
 11765                           ;EEPROM_24C1025.c: 251:              if((*texto)==0)break;
 11766  17C9  082E               	movf	EEPROM_24C1025_Read_Str@texto,w
 11767  17CA  0084               	movwf	4
 11768  17CB  0800               	movf	0,w
 11769  17CC  1903               	btfsc	3,2
 11770  17CD  2FE9               	goto	l6746
 11771                           
 11772                           ;EEPROM_24C1025.c: 252:              texto++;
 11773  17CE  3001               	movlw	1
 11774  17CF  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11775  17D0  082F               	movf	??_EEPROM_24C1025_Read_Str,w
 11776  17D1  07AE               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11777                           
 11778                           ;EEPROM_24C1025.c: 253:              mem_add++;
 11779  17D2  3001               	movlw	1
 11780  17D3  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11781  17D4  3000               	movlw	0
 11782  17D5  1803               	skipnc
 11783  17D6  3001               	movlw	1
 11784  17D7  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11785  17D8  3000               	movlw	0
 11786  17D9  1803               	skipnc
 11787  17DA  3001               	movlw	1
 11788  17DB  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11789  17DC  3000               	movlw	0
 11790  17DD  1803               	skipnc
 11791  17DE  3001               	movlw	1
 11792  17DF  07AD               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11793  17E0                     l6744:	
 11794                           
 11795                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 11796  17E0  3001               	movlw	1
 11797  17E1  07B1               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11798  17E2  30FF               	movlw	-1
 11799  17E3  0731               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11800  17E4  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11801  17E5  3040               	movlw	64
 11802  17E6  022F               	subwf	??_EEPROM_24C1025_Read_Str,w
 11803  17E7  1C03               	skipc
 11804  17E8  2F08               	goto	l69
 11805  17E9                     l6746:	
 11806                           
 11807                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 11808  17E9  3000               	movlw	0
 11809  17EA  00A3               	movwf	I2C_Master_Read@a
 11810  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11811  17EC  160A  158A  24BD  160A  118A  	fcall	_I2C_Master_Read
 11812                           
 11813                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 11814  17F1  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 11815                           
 11816                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11817  17F6  30B9               	movlw	185
 11818  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11819  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11820  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Str
 11821  17FA                     u8237:	
 11822  17FA  2FFB               	nop2
 11823  17FB  2FFC               	nop2
 11824  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11825  17FD  2FFA               	goto	u8237
 11826  17FE  2FFF               	nop2
 11827  17FF  0008               	return
 11828  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11829                           
 11830                           	psect	text49
 11831  1B26                     __ptext49:	
 11832 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11833 ;; Defined at:
 11834 ;;		line 287 in file "EEPROM_24C1025.c"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;  chip_add        1    wreg     unsigned char 
 11837 ;;  mem_add         4   24[BANK0 ] unsigned long 
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;  chip_add        1   30[BANK0 ] unsigned char 
 11840 ;;  data            2   31[BANK0 ] unsigned char [2]
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  2   24[BANK0 ] unsigned int 
 11843 ;; Registers used:
 11844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 300/300
 11847 ;;		On exit  : 300/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11850 ;;      Params:         0       4       0       0       0
 11851 ;;      Locals:         0       3       0       0       0
 11852 ;;      Temps:          0       2       0       0       0
 11853 ;;      Totals:         0       9       0       0       0
 11854 ;;Total ram usage:        9 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    4
 11857 ;; This function calls:
 11858 ;;		_EEPROM_24C1025_Read_Buffer
 11859 ;; This function is called by:
 11860 ;;		_Decodify_Command
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           
 11865                           ;psect for function _EEPROM_24C1025_Read_Int
 11866  1B26                     _EEPROM_24C1025_Read_Int:	
 11867                           
 11868                           ;incstack = 0
 11869                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11870                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11871  1B26  1283               	bcf	3,5	;RP0=0, select bank0
 11872  1B27  1303               	bcf	3,6	;RP1=0, select bank0
 11873  1B28  00BE               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11874                           
 11875                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11876  1B29  083B               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11877  1B2A  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11878  1B2B  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11879  1B2C  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11880  1B2D  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11881  1B2E  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11882  1B2F  0838               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11883  1B30  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11884  1B31  3002               	movlw	2
 11885  1B32  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 11886  1B33  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 11887  1B34  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11888  1B35  303F               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11889  1B36  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11890  1B37  3000               	movlw	0
 11891  1B38  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11892  1B39  083E               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11893  1B3A  120A  158A  2023   	fcall	_EEPROM_24C1025_Read_Buffer
 11894                           
 11895                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 11896  1B3D  1283               	bcf	3,5	;RP0=0, select bank0
 11897  1B3E  1303               	bcf	3,6	;RP1=0, select bank0
 11898  1B3F  083F               	movf	EEPROM_24C1025_Read_Int@data,w
 11899  1B40  00BC               	movwf	??_EEPROM_24C1025_Read_Int
 11900  1B41  01BD               	clrf	??_EEPROM_24C1025_Read_Int+1
 11901  1B42  083C               	movf	??_EEPROM_24C1025_Read_Int,w
 11902  1B43  00BD               	movwf	??_EEPROM_24C1025_Read_Int+1
 11903  1B44  01BC               	clrf	??_EEPROM_24C1025_Read_Int
 11904  1B45  0840               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11905  1B46  073C               	addwf	??_EEPROM_24C1025_Read_Int,w
 11906  1B47  00B8               	movwf	?_EEPROM_24C1025_Read_Int
 11907  1B48  3000               	movlw	0
 11908  1B49  1803               	skipnc
 11909  1B4A  3001               	movlw	1
 11910  1B4B  073D               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11911  1B4C  00B9               	movwf	?_EEPROM_24C1025_Read_Int+1
 11912  1B4D  0008               	return
 11913  1B4E                     __end_of_EEPROM_24C1025_Read_Int:	
 11914                           
 11915                           	psect	text50
 11916  19B2                     __ptext50:	
 11917 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11918 ;; Defined at:
 11919 ;;		line 273 in file "EEPROM_24C1025.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;  chip_add        1    wreg     unsigned char 
 11922 ;;  mem_add         4   24[BANK0 ] unsigned long 
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11925 ;;  data            1   29[BANK0 ] unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      unsigned char 
 11928 ;; Registers used:
 11929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11930 ;; Tracked objects:
 11931 ;;		On entry : 300/300
 11932 ;;		On exit  : 300/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11935 ;;      Params:         0       4       0       0       0
 11936 ;;      Locals:         0       2       0       0       0
 11937 ;;      Temps:          0       0       0       0       0
 11938 ;;      Totals:         0       6       0       0       0
 11939 ;;Total ram usage:        6 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    4
 11942 ;; This function calls:
 11943 ;;		_EEPROM_24C1025_Read_Buffer
 11944 ;; This function is called by:
 11945 ;;		_Decodify_Command
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           
 11950                           ;psect for function _EEPROM_24C1025_Read_Byte
 11951  19B2                     _EEPROM_24C1025_Read_Byte:	
 11952                           
 11953                           ;incstack = 0
 11954                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11955                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11956  19B2  1283               	bcf	3,5	;RP0=0, select bank0
 11957  19B3  1303               	bcf	3,6	;RP1=0, select bank0
 11958  19B4  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11959                           
 11960                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11961  19B5  083B               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11962  19B6  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11963  19B7  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11964  19B8  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11965  19B9  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11966  19BA  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11967  19BB  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11968  19BC  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11969  19BD  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11970  19BE  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11971  19BF  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11972  19C0  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11973  19C1  3000               	movlw	0
 11974  19C2  00B0               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 11975  19C3  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11976  19C4  120A  158A  2023   	fcall	_EEPROM_24C1025_Read_Buffer
 11977                           
 11978                           ;EEPROM_24C1025.c: 276:     return data;
 11979  19C7  1283               	bcf	3,5	;RP0=0, select bank0
 11980  19C8  1303               	bcf	3,6	;RP1=0, select bank0
 11981  19C9  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11982  19CA  0008               	return
 11983  19CB                     __end_of_EEPROM_24C1025_Read_Byte:	
 11984                           
 11985                           	psect	text51
 11986  0823                     __ptext51:	
 11987 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11988 ;; Defined at:
 11989 ;;		line 77 in file "EEPROM_24C1025.c"
 11990 ;; Parameters:    Size  Location     Type
 11991 ;;  chip_add        1    wreg     unsigned char 
 11992 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11993 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11994 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11995 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11998 ;;  cnt             1   20[BANK0 ] unsigned char 
 11999 ;;  ctrl            1   23[BANK0 ] unsigned char 
 12000 ;;  range           1   22[BANK0 ] unsigned char 
 12001 ;;  cnt             1    0        unsigned char 
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      void 
 12004 ;; Registers used:
 12005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/300
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12011 ;;      Params:         0       7       0       0       0
 12012 ;;      Locals:         0       5       0       0       0
 12013 ;;      Temps:          0       2       0       0       0
 12014 ;;      Totals:         0      14       0       0       0
 12015 ;;Total ram usage:       14 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    3
 12018 ;; This function calls:
 12019 ;;		_I2C_Master_Read
 12020 ;;		_I2C_Master_RepeatedStart
 12021 ;;		_I2C_Master_Start
 12022 ;;		_I2C_Master_Stop
 12023 ;;		_I2C_Master_Write
 12024 ;;		_my_delay_ms_WDT
 12025 ;; This function is called by:
 12026 ;;		_EEPROM_24C1025_Read_Byte
 12027 ;;		_EEPROM_24C1025_Read_Int
 12028 ;;		_Decodify_Command
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           
 12033                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12034  0823                     _EEPROM_24C1025_Read_Buffer:	
 12035                           
 12036                           ;incstack = 0
 12037                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 12038                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12039  0823  1283               	bcf	3,5	;RP0=0, select bank0
 12040  0824  1303               	bcf	3,6	;RP1=0, select bank0
 12041  0825  00B5               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12042                           
 12043                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 12044  0826  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 12045                           
 12046                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 12047  0827  3014               	movlw	20
 12048  0828  00FA               	movwf	_Delay_Led_Memory	;volatile
 12049  0829  3000               	movlw	0
 12050  082A  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12051                           
 12052                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 12053  082B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12054  082C  1D03               	btfss	3,2
 12055  082D  0008               	return
 12056  082E  3002               	movlw	2
 12057  082F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12058  0830  1D03               	skipz
 12059  0831  283A               	goto	u5903
 12060  0832  3000               	movlw	0
 12061  0833  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12062  0834  1D03               	skipz
 12063  0835  283A               	goto	u5903
 12064  0836  3000               	movlw	0
 12065  0837  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12066  0838  1D03               	skipz
 12067  0839  283A               	goto	u5903
 12068  083A                     u5903:	
 12069  083A  1803               	btfsc	3,0
 12070  083B  0008               	return
 12071                           
 12072                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12073  083C  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12074  083D  1D03               	btfss	3,2
 12075  083E  284D               	goto	l5944
 12076  083F  3001               	movlw	1
 12077  0840  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12078  0841  1D03               	skipz
 12079  0842  284B               	goto	u5913
 12080  0843  3000               	movlw	0
 12081  0844  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12082  0845  1D03               	skipz
 12083  0846  284B               	goto	u5913
 12084  0847  3000               	movlw	0
 12085  0848  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12086  0849  1D03               	skipz
 12087  084A  284B               	goto	u5913
 12088  084B                     u5913:	
 12089  084B  1C03               	btfss	3,0
 12090  084C  2852               	goto	l5946
 12091  084D                     l5944:	
 12092  084D  3008               	movlw	8
 12093  084E  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12094  084F  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12095  0850  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 12096  0851  2853               	goto	l5948
 12097  0852                     l5946:	
 12098  0852  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 12099  0853                     l5948:	
 12100                           
 12101                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 12102  0853  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12103  0854  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12104  0855  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12105  0856  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12106                           
 12107                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 12108  0857  1003               	clrc
 12109  0858  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12110                           
 12111                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 12112  0859  30A0               	movlw	160
 12113  085A  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12114  085B  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12115  085C  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12116                           
 12117                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 12118  085D  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12119                           
 12120                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 12121  085E  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12122  085F  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12123  0860  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12124  0861  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12125                           
 12126                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 12127  0862  160A  158A  2123  120A  158A  	fcall	_I2C_Master_Start
 12128                           
 12129                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 12130  0867  1283               	bcf	3,5	;RP0=0, select bank0
 12131  0868  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12132  0869  39FE               	andlw	254
 12133  086A  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12134  086B  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12135  086C  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12136  086D  00A3               	movwf	I2C_Master_Write@d
 12137  086E  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12138  086F  00A4               	movwf	I2C_Master_Write@d+1
 12139  0870  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12140                           
 12141                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 12142  0875  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12143  0876  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12144  0877  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12145  0878  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12146  0879  00A3               	movwf	I2C_Master_Write@d
 12147  087A  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12148  087B  00A4               	movwf	I2C_Master_Write@d+1
 12149  087C  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12150                           
 12151                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 12152  0881  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12153  0882  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12154  0883  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12155  0884  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12156  0885  00A3               	movwf	I2C_Master_Write@d
 12157  0886  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12158  0887  00A4               	movwf	I2C_Master_Write@d+1
 12159  0888  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12160                           
 12161                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 12162  088D  160A  158A  2118  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12163                           
 12164                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 12165  0892  1283               	bcf	3,5	;RP0=0, select bank0
 12166  0893  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12167  0894  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12168  0895  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12169  0896  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12170  0897  00A3               	movwf	I2C_Master_Write@d
 12171  0898  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12172  0899  00A4               	movwf	I2C_Master_Write@d+1
 12173  089A  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12174                           
 12175                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 12176  089F  01B4               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 12177  08A0                     l6022:	
 12178  08A0  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12179  08A1  0234               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 12180  08A2  1803               	btfsc	3,0
 12181  08A3  2984               	goto	l6024
 12182  08A4  0064               	clrwdt	;# 
 12183                           
 12184                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 12185  08A5  1283               	bcf	3,5	;RP0=0, select bank0
 12186  08A6  1303               	bcf	3,6	;RP1=0, select bank0
 12187  08A7  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12188  08A8  1D03               	btfss	3,2
 12189  08A9  2984               	goto	l6024
 12190  08AA  3002               	movlw	2
 12191  08AB  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12192  08AC  1D03               	skipz
 12193  08AD  28B6               	goto	u5923
 12194  08AE  3000               	movlw	0
 12195  08AF  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12196  08B0  1D03               	skipz
 12197  08B1  28B6               	goto	u5923
 12198  08B2  3000               	movlw	0
 12199  08B3  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12200  08B4  1D03               	skipz
 12201  08B5  28B6               	goto	u5923
 12202  08B6                     u5923:	
 12203  08B6  1803               	btfsc	3,0
 12204  08B7  2984               	goto	l6024
 12205                           
 12206                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 12207  08B8  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12208  08B9  3E01               	addlw	1
 12209  08BA  397F               	andlw	127
 12210  08BB  1D03               	btfss	3,2
 12211  08BC  2959               	goto	l6014
 12212                           
 12213                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 12214  08BD  3000               	movlw	0
 12215  08BE  00A3               	movwf	I2C_Master_Read@a
 12216  08BF  00A4               	movwf	I2C_Master_Read@a+1
 12217  08C0  160A  158A  24BD  120A  158A  	fcall	_I2C_Master_Read
 12218  08C5  0823               	movf	?_I2C_Master_Read,w
 12219  08C6  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12220  08C7  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12221  08C8  0084               	movwf	4
 12222  08C9  1783               	bsf	3,7
 12223  08CA  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12224  08CB  1383               	bcf	3,7
 12225  08CC  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12226  08CD  0080               	movwf	0
 12227                           
 12228                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 12229  08CE  160A  158A  20EF  120A  158A  	fcall	_I2C_Master_Stop
 12230                           
 12231                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 12232  08D3  3000               	movlw	0
 12233  08D4  1283               	bcf	3,5	;RP0=0, select bank0
 12234  08D5  00A3               	movwf	my_delay_ms_WDT@time+3
 12235  08D6  3000               	movlw	0
 12236  08D7  00A2               	movwf	my_delay_ms_WDT@time+2
 12237  08D8  3000               	movlw	0
 12238  08D9  00A1               	movwf	my_delay_ms_WDT@time+1
 12239  08DA  3005               	movlw	5
 12240  08DB  00A0               	movwf	my_delay_ms_WDT@time
 12241  08DC  160A  158A  2529  120A  158A  	fcall	_my_delay_ms_WDT
 12242                           
 12243                           ;EEPROM_24C1025.c: 114:              mem_add++;
 12244  08E1  3001               	movlw	1
 12245  08E2  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12246  08E3  3000               	movlw	0
 12247  08E4  1803               	skipnc
 12248  08E5  3001               	movlw	1
 12249  08E6  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12250  08E7  3000               	movlw	0
 12251  08E8  1803               	skipnc
 12252  08E9  3001               	movlw	1
 12253  08EA  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12254  08EB  3000               	movlw	0
 12255  08EC  1803               	skipnc
 12256  08ED  3001               	movlw	1
 12257  08EE  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12258                           
 12259                           ;EEPROM_24C1025.c: 115:              data++;
 12260  08EF  3001               	movlw	1
 12261  08F0  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12262  08F1  1803               	skipnc
 12263  08F2  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12264  08F3  3000               	movlw	0
 12265  08F4  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12266                           
 12267                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12268  08F5  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12269  08F6  1D03               	btfss	3,2
 12270  08F7  2906               	goto	l5988
 12271  08F8  3001               	movlw	1
 12272  08F9  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12273  08FA  1D03               	skipz
 12274  08FB  2904               	goto	u5943
 12275  08FC  3000               	movlw	0
 12276  08FD  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12277  08FE  1D03               	skipz
 12278  08FF  2904               	goto	u5943
 12279  0900  3000               	movlw	0
 12280  0901  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12281  0902  1D03               	skipz
 12282  0903  2904               	goto	u5943
 12283  0904                     u5943:	
 12284  0904  1C03               	btfss	3,0
 12285  0905  290B               	goto	l5990
 12286  0906                     l5988:	
 12287  0906  3008               	movlw	8
 12288  0907  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12289  0908  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12290  0909  00B6               	movwf	EEPROM_24C1025_Read_Buffer@range
 12291  090A  290C               	goto	l5992
 12292  090B                     l5990:	
 12293  090B  01B6               	clrf	EEPROM_24C1025_Read_Buffer@range
 12294  090C                     l5992:	
 12295                           
 12296                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 12297  090C  0835               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12298  090D  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12299  090E  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12300  090F  00B7               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12301                           
 12302                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 12303  0910  1003               	clrc
 12304  0911  0DB7               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12305                           
 12306                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 12307  0912  30A0               	movlw	160
 12308  0913  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12309  0914  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12310  0915  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12311                           
 12312                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 12313  0916  1437               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12314                           
 12315                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 12316  0917  0836               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12317  0918  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12318  0919  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12319  091A  04B7               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12320                           
 12321                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 12322  091B  160A  158A  2123  120A  158A  	fcall	_I2C_Master_Start
 12323                           
 12324                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 12325  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12326  0921  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12327  0922  39FE               	andlw	254
 12328  0923  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12329  0924  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12330  0925  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12331  0926  00A3               	movwf	I2C_Master_Write@d
 12332  0927  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12333  0928  00A4               	movwf	I2C_Master_Write@d+1
 12334  0929  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12335                           
 12336                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 12337  092E  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12338  092F  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12339  0930  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12340  0931  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12341  0932  00A3               	movwf	I2C_Master_Write@d
 12342  0933  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12343  0934  00A4               	movwf	I2C_Master_Write@d+1
 12344  0935  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12345                           
 12346                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 12347  093A  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12348  093B  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12349  093C  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12350  093D  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12351  093E  00A3               	movwf	I2C_Master_Write@d
 12352  093F  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12353  0940  00A4               	movwf	I2C_Master_Write@d+1
 12354  0941  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12355                           
 12356                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 12357  0946  160A  158A  2118  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12358                           
 12359                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 12360  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12361  094C  0837               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12362  094D  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12363  094E  01B2               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12364  094F  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12365  0950  00A3               	movwf	I2C_Master_Write@d
 12366  0951  0832               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12367  0952  00A4               	movwf	I2C_Master_Write@d+1
 12368  0953  160A  158A  210D  120A  158A  	fcall	_I2C_Master_Write
 12369                           
 12370                           ;EEPROM_24C1025.c: 129:              }
 12371  0958  297F               	goto	l6020
 12372  0959                     l6014:	
 12373                           
 12374                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 12375  0959  3001               	movlw	1
 12376  095A  00A3               	movwf	I2C_Master_Read@a
 12377  095B  3000               	movlw	0
 12378  095C  00A4               	movwf	I2C_Master_Read@a+1
 12379  095D  160A  158A  24BD  120A  158A  	fcall	_I2C_Master_Read
 12380  0962  0823               	movf	?_I2C_Master_Read,w
 12381  0963  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12382  0964  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12383  0965  0084               	movwf	4
 12384  0966  1783               	bsf	3,7
 12385  0967  1C30               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12386  0968  1383               	bcf	3,7
 12387  0969  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12388  096A  0080               	movwf	0
 12389                           
 12390                           ;EEPROM_24C1025.c: 133:              data++;
 12391  096B  3001               	movlw	1
 12392  096C  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12393  096D  1803               	skipnc
 12394  096E  0AB0               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12395  096F  3000               	movlw	0
 12396  0970  07B0               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12397                           
 12398                           ;EEPROM_24C1025.c: 134:              mem_add++;
 12399  0971  3001               	movlw	1
 12400  0972  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12401  0973  3000               	movlw	0
 12402  0974  1803               	skipnc
 12403  0975  3001               	movlw	1
 12404  0976  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12405  0977  3000               	movlw	0
 12406  0978  1803               	skipnc
 12407  0979  3001               	movlw	1
 12408  097A  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12409  097B  3000               	movlw	0
 12410  097C  1803               	skipnc
 12411  097D  3001               	movlw	1
 12412  097E  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12413  097F                     l6020:	
 12414                           
 12415                           ;EEPROM_24C1025.c: 136:         }
 12416  097F  3001               	movlw	1
 12417  0980  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12418  0981  0831               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12419  0982  07B4               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 12420  0983  28A0               	goto	l6022
 12421  0984                     l6024:	
 12422                           
 12423                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 12424  0984  3000               	movlw	0
 12425  0985  00A3               	movwf	I2C_Master_Read@a
 12426  0986  00A4               	movwf	I2C_Master_Read@a+1
 12427  0987  160A  158A  24BD  120A  158A  	fcall	_I2C_Master_Read
 12428                           
 12429                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 12430  098C  160A  158A  20EF  120A  158A  	fcall	_I2C_Master_Stop
 12431                           
 12432                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12433  0991  30B9               	movlw	185
 12434  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12435  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12436  0994  00B1               	movwf	??_EEPROM_24C1025_Read_Buffer
 12437  0995                     u8247:	
 12438  0995  2996               	nop2
 12439  0996  2997               	nop2
 12440  0997  0BB1               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12441  0998  2995               	goto	u8247
 12442  0999  299A               	nop2
 12443  099A  0008               	return
 12444  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12445                           
 12446                           	psect	text52
 12447  1918                     __ptext52:	
 12448 ;; *************** function _I2C_Master_RepeatedStart *****************
 12449 ;; Defined at:
 12450 ;;		line 66 in file "I2C.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;		None
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, status,2, status,0, pclath, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 300/0
 12461 ;;		On exit  : 200/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12464 ;;      Params:         0       0       0       0       0
 12465 ;;      Locals:         0       0       0       0       0
 12466 ;;      Temps:          0       0       0       0       0
 12467 ;;      Totals:         0       0       0       0       0
 12468 ;;Total ram usage:        0 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:    2
 12471 ;; This function calls:
 12472 ;;		_I2C_Master_Wait
 12473 ;; This function is called by:
 12474 ;;		_EEPROM_24C1025_Read_Buffer
 12475 ;;		_EEPROM_24C1025_Read_Str
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function _I2C_Master_RepeatedStart
 12481  1918                     _I2C_Master_RepeatedStart:	
 12482                           
 12483                           ;I2C.c: 68:   if(I2C_Master_Wait())
 12484                           
 12485                           ;incstack = 0
 12486                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12487  1918  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 12488  191D  3A00               	xorlw	0
 12489  191E  1903               	skipnz
 12490  191F  0008               	return
 12491                           
 12492                           ;I2C.c: 69:     {;I2C.c: 70:     SSPCON2bits.RSEN = 1;
 12493  1920  1683               	bsf	3,5	;RP0=1, select bank1
 12494  1921  1491               	bsf	17,1	;volatile
 12495  1922  0008               	return
 12496  1923                     __end_of_I2C_Master_RepeatedStart:	
 12497                           
 12498                           	psect	text53
 12499  1CBD                     __ptext53:	
 12500 ;; *************** function _I2C_Master_Read *****************
 12501 ;; Defined at:
 12502 ;;		line 91 in file "I2C.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  a               2    3[BANK0 ] unsigned short 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  temp            2    7[BANK0 ] unsigned short 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2    3[BANK0 ] unsigned short 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0, pclath, cstack
 12511 ;; Tracked objects:
 12512 ;;		On entry : 300/0
 12513 ;;		On exit  : 300/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12516 ;;      Params:         0       2       0       0       0
 12517 ;;      Locals:         0       2       0       0       0
 12518 ;;      Temps:          0       2       0       0       0
 12519 ;;      Totals:         0       6       0       0       0
 12520 ;;Total ram usage:        6 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    2
 12523 ;; This function calls:
 12524 ;;		_I2C_Master_Wait
 12525 ;; This function is called by:
 12526 ;;		_EEPROM_24C1025_Read_Buffer
 12527 ;;		_EEPROM_24C1025_Read_Str
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           
 12532                           ;psect for function _I2C_Master_Read
 12533  1CBD                     _I2C_Master_Read:	
 12534                           
 12535                           ;I2C.c: 91: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 92: {;I2C.c: 93:   u
      +                          nsigned short temp;;I2C.c: 94:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12536                           
 12537                           ;incstack = 0
 12538                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12539  1CBD  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 12540  1CC2  3A00               	xorlw	0
 12541  1CC3  1683               	bsf	3,5	;RP0=1, select bank1
 12542  1CC4  1D03               	btfss	3,2
 12543  1CC5  1591               	bsf	17,3	;volatile
 12544                           
 12545                           ;I2C.c: 95:   if(I2C_Master_Wait())temp = SSPBUF;
 12546  1CC6  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 12547  1CCB  3A00               	xorlw	0
 12548  1CCC  1903               	skipnz
 12549  1CCD  2CD5               	goto	l5846
 12550  1CCE  0813               	movf	19,w	;volatile
 12551  1CCF  00A5               	movwf	??_I2C_Master_Read
 12552  1CD0  01A6               	clrf	??_I2C_Master_Read+1
 12553  1CD1  0825               	movf	??_I2C_Master_Read,w
 12554  1CD2  00A7               	movwf	I2C_Master_Read@temp
 12555  1CD3  0826               	movf	??_I2C_Master_Read+1,w
 12556  1CD4  00A8               	movwf	I2C_Master_Read@temp+1
 12557  1CD5                     l5846:	
 12558                           
 12559                           ;I2C.c: 96:   if(I2C_Master_Wait())
 12560  1CD5  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 12561  1CDA  3A00               	xorlw	0
 12562  1CDB  1903               	skipnz
 12563  1CDC  2CEF               	goto	l5858
 12564                           
 12565                           ;I2C.c: 97:     {;I2C.c: 98:     SSPCON2bits.ACKDT = (a)?0:1;
 12566  1CDD  0823               	movf	I2C_Master_Read@a,w
 12567  1CDE  0424               	iorwf	I2C_Master_Read@a+1,w
 12568  1CDF  1D03               	btfss	3,2
 12569  1CE0  2CE5               	goto	u5710
 12570  1CE1  1683               	bsf	3,5	;RP0=1, select bank1
 12571  1CE2  1303               	bcf	3,6	;RP1=0, select bank1
 12572  1CE3  1691               	bsf	17,5	;volatile
 12573  1CE4  2CE8               	goto	l5850
 12574  1CE5                     u5710:	
 12575  1CE5  1683               	bsf	3,5	;RP0=1, select bank1
 12576  1CE6  1303               	bcf	3,6	;RP1=0, select bank1
 12577  1CE7  1291               	bcf	17,5	;volatile
 12578  1CE8                     l5850:	
 12579                           
 12580                           ;I2C.c: 99:     SSPCON2bits.ACKEN = 1;
 12581  1CE8  1611               	bsf	17,4	;volatile
 12582                           
 12583                           ;I2C.c: 100:     return temp;
 12584  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
 12585  1CEA  0828               	movf	I2C_Master_Read@temp+1,w
 12586  1CEB  00A4               	movwf	?_I2C_Master_Read+1
 12587  1CEC  0827               	movf	I2C_Master_Read@temp,w
 12588  1CED  00A3               	movwf	?_I2C_Master_Read
 12589  1CEE  0008               	return
 12590  1CEF                     l5858:	
 12591                           
 12592                           ;I2C.c: 103:     {;I2C.c: 104:     return 0x00;
 12593  1CEF  01A3               	clrf	?_I2C_Master_Read
 12594  1CF0  01A4               	clrf	?_I2C_Master_Read+1
 12595  1CF1  0008               	return
 12596  1CF2                     __end_of_I2C_Master_Read:	
 12597                           
 12598                           	psect	text54
 12599  1003                     __ptext54:	
 12600 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12601 ;; Defined at:
 12602 ;;		line 294 in file "EEPROM_24C1025.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  chip_add        1    wreg     unsigned char 
 12605 ;;  value           2   56[BANK0 ] unsigned int 
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12608 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  1    wreg      void 
 12611 ;; Registers used:
 12612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12613 ;; Tracked objects:
 12614 ;;		On entry : 300/300
 12615 ;;		On exit  : 300/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12618 ;;      Params:         0       2       0       0       0
 12619 ;;      Locals:         0       5       0       0       0
 12620 ;;      Temps:          0       0       0       0       0
 12621 ;;      Totals:         0       7       0       0       0
 12622 ;;Total ram usage:        7 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    5
 12625 ;; This function calls:
 12626 ;;		_EEPROM_24C1025_Write_Int
 12627 ;; This function is called by:
 12628 ;;		_Decodify_Command
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           
 12633                           ;psect for function _EEPROM_24C1025_Fill_All
 12634  1003                     _EEPROM_24C1025_Fill_All:	
 12635                           
 12636                           ;incstack = 0
 12637                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12638                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12639  1003  1283               	bcf	3,5	;RP0=0, select bank0
 12640  1004  1303               	bcf	3,6	;RP1=0, select bank0
 12641  1005  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12642                           
 12643                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12644  1006  3000               	movlw	0
 12645  1007  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12646  1008  3000               	movlw	0
 12647  1009  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12648  100A  3000               	movlw	0
 12649  100B  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12650  100C  3000               	movlw	0
 12651  100D  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12652  100E                     l6770:	
 12653                           
 12654                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12655  100E  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12656  100F  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12657  1010  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12658  1011  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12659  1012  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12660  1013  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12661  1014  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12662  1015  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12663  1016  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12664  1017  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12665  1018  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12666  1019  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12667  101A  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12668  101B  160A  158A  223D  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
 12669  1020  0064               	clrwdt	;# 
 12670                           
 12671                           ;EEPROM_24C1025.c: 300:         }
 12672  1021  3002               	movlw	2
 12673  1022  1283               	bcf	3,5	;RP0=0, select bank0
 12674  1023  1303               	bcf	3,6	;RP1=0, select bank0
 12675  1024  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12676  1025  3000               	movlw	0
 12677  1026  1803               	skipnc
 12678  1027  3001               	movlw	1
 12679  1028  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12680  1029  3000               	movlw	0
 12681  102A  1803               	skipnc
 12682  102B  3001               	movlw	1
 12683  102C  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12684  102D  3000               	movlw	0
 12685  102E  1803               	skipnc
 12686  102F  3001               	movlw	1
 12687  1030  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12688  1031  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12689  1032  1D03               	btfss	3,2
 12690  1033  0008               	return
 12691  1034  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12692  1035  1D03               	btfss	3,2
 12693  1036  0008               	return
 12694  1037  3004               	movlw	4
 12695  1038  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12696  1039  1D03               	skipz
 12697  103A  283F               	goto	u7283
 12698  103B  3000               	movlw	0
 12699  103C  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12700  103D  1D03               	skipz
 12701  103E  283F               	goto	u7283
 12702  103F                     u7283:	
 12703  103F  1803               	btfsc	3,0
 12704  1040  0008               	return
 12705  1041  280E               	goto	l6770
 12706  1042                     __end_of_EEPROM_24C1025_Fill_All:	
 12707                           
 12708                           	psect	text55
 12709  1A3D                     __ptext55:	
 12710 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12711 ;; Defined at:
 12712 ;;		line 279 in file "EEPROM_24C1025.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;  chip_add        1    wreg     unsigned char 
 12715 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12716 ;;  data            2   50[BANK0 ] int 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12719 ;;  local           2   54[BANK0 ] unsigned char [2]
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/300
 12726 ;;		On exit  : 300/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12729 ;;      Params:         0       6       0       0       0
 12730 ;;      Locals:         0       3       0       0       0
 12731 ;;      Temps:          0       1       0       0       0
 12732 ;;      Totals:         0      10       0       0       0
 12733 ;;Total ram usage:       10 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:    4
 12736 ;; This function calls:
 12737 ;;		_EEPROM_24C1025_Write_Buffer
 12738 ;; This function is called by:
 12739 ;;		_EEPROM_24C1025_Fill_All
 12740 ;;		_Decodify_Command
 12741 ;;		_Save_Log
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745                           
 12746                           ;psect for function _EEPROM_24C1025_Write_Int
 12747  1A3D                     _EEPROM_24C1025_Write_Int:	
 12748                           
 12749                           ;incstack = 0
 12750                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12751                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12752  1A3D  1283               	bcf	3,5	;RP0=0, select bank0
 12753  1A3E  1303               	bcf	3,6	;RP1=0, select bank0
 12754  1A3F  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12755                           
 12756                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 12757  1A40  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12758  1A41  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12759  1A42  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12760  1A43  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12761                           
 12762                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 12763  1A44  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12764  1A45  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12765  1A46  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12766  1A47  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12767                           
 12768                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12769  1A48  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12770  1A49  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12771  1A4A  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12772  1A4B  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12773  1A4C  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12774  1A4D  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12775  1A4E  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12776  1A4F  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12777  1A50  3002               	movlw	2
 12778  1A51  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12779  1A52  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12780  1A53  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12781  1A54  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12782  1A55  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12783  1A56  3000               	movlw	0
 12784  1A57  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12785  1A58  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12786  1A59  160A  118A  2527   	fcall	_EEPROM_24C1025_Write_Buffer
 12787  1A5C  0008               	return
 12788  1A5D                     __end_of_EEPROM_24C1025_Write_Int:	
 12789                           
 12790                           	psect	text56
 12791  1527                     __ptext56:	
 12792 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12793 ;; Defined at:
 12794 ;;		line 14 in file "EEPROM_24C1025.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  chip_add        1    wreg     unsigned char 
 12797 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12798 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12799 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12800 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12803 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12804 ;;  range           1   21[BANK0 ] unsigned char 
 12805 ;;  count           1   19[BANK0 ] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/300
 12812 ;;		On exit  : 300/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12815 ;;      Params:         0       7       0       0       0
 12816 ;;      Locals:         0       4       0       0       0
 12817 ;;      Temps:          0       2       0       0       0
 12818 ;;      Totals:         0      13       0       0       0
 12819 ;;Total ram usage:       13 bytes
 12820 ;; Hardware stack levels used:    1
 12821 ;; Hardware stack levels required when called:    3
 12822 ;; This function calls:
 12823 ;;		_I2C_Master_Start
 12824 ;;		_I2C_Master_Stop
 12825 ;;		_I2C_Master_Write
 12826 ;;		_my_delay_ms_WDT
 12827 ;; This function is called by:
 12828 ;;		_EEPROM_24C1025_Write_Byte
 12829 ;;		_EEPROM_24C1025_Write_Int
 12830 ;;		_Decodify_Command
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12836  1527                     _EEPROM_24C1025_Write_Buffer:	
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12840                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12841  1527  1283               	bcf	3,5	;RP0=0, select bank0
 12842  1528  1303               	bcf	3,6	;RP1=0, select bank0
 12843  1529  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12844                           
 12845                           ;EEPROM_24C1025.c: 20:      unsigned char ctrl;;EEPROM_24C1025.c: 21:      unsigned char
      +                           count;;EEPROM_24C1025.c: 23:      Delay_Led_Memory=20;
 12846  152A  3014               	movlw	20
 12847  152B  00FA               	movwf	_Delay_Led_Memory	;volatile
 12848  152C  3000               	movlw	0
 12849  152D  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12850                           
 12851                           ;EEPROM_24C1025.c: 25:      if(mem_add>0x1FFFF) return;
 12852  152E  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12853  152F  1D03               	btfss	3,2
 12854  1530  0008               	return
 12855  1531  3002               	movlw	2
 12856  1532  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12857  1533  1D03               	skipz
 12858  1534  2D3D               	goto	u5613
 12859  1535  3000               	movlw	0
 12860  1536  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12861  1537  1D03               	skipz
 12862  1538  2D3D               	goto	u5613
 12863  1539  3000               	movlw	0
 12864  153A  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12865  153B  1D03               	skipz
 12866  153C  2D3D               	goto	u5613
 12867  153D                     u5613:	
 12868  153D  1803               	btfsc	3,0
 12869  153E  0008               	return
 12870                           
 12871                           ;EEPROM_24C1025.c: 27:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12872  153F  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12873  1540  1D03               	btfss	3,2
 12874  1541  2D50               	goto	l5760
 12875  1542  3001               	movlw	1
 12876  1543  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12877  1544  1D03               	skipz
 12878  1545  2D4E               	goto	u5623
 12879  1546  3000               	movlw	0
 12880  1547  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12881  1548  1D03               	skipz
 12882  1549  2D4E               	goto	u5623
 12883  154A  3000               	movlw	0
 12884  154B  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12885  154C  1D03               	skipz
 12886  154D  2D4E               	goto	u5623
 12887  154E                     u5623:	
 12888  154E  1C03               	btfss	3,0
 12889  154F  2D55               	goto	l5762
 12890  1550                     l5760:	
 12891  1550  3008               	movlw	8
 12892  1551  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12893  1552  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12894  1553  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12895  1554  2D56               	goto	l5764
 12896  1555                     l5762:	
 12897  1555  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12898  1556                     l5764:	
 12899                           
 12900                           ;EEPROM_24C1025.c: 28:      ctrl=chip_add;
 12901  1556  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12902  1557  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12903  1558  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12904  1559  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12905                           
 12906                           ;EEPROM_24C1025.c: 29:      ctrl<<=1;
 12907  155A  1003               	clrc
 12908  155B  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12909                           
 12910                           ;EEPROM_24C1025.c: 30:      ctrl |= 0xA0;
 12911  155C  30A0               	movlw	160
 12912  155D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12913  155E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12914  155F  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12915                           
 12916                           ;EEPROM_24C1025.c: 31:      ctrl |= range;
 12917  1560  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12918  1561  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12919  1562  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12920  1563  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12921                           
 12922                           ;EEPROM_24C1025.c: 33:      I2C_Master_Start();
 12923  1564  160A  158A  2123  160A  118A  	fcall	_I2C_Master_Start
 12924                           
 12925                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(ctrl);
 12926  1569  1283               	bcf	3,5	;RP0=0, select bank0
 12927  156A  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12928  156B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12929  156C  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12930  156D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12931  156E  00A3               	movwf	I2C_Master_Write@d
 12932  156F  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12933  1570  00A4               	movwf	I2C_Master_Write@d+1
 12934  1571  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 12935                           
 12936                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[1]);
 12937  1576  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12938  1577  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12939  1578  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12940  1579  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12941  157A  00A3               	movwf	I2C_Master_Write@d
 12942  157B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12943  157C  00A4               	movwf	I2C_Master_Write@d+1
 12944  157D  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 12945                           
 12946                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[0]);
 12947  1582  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12948  1583  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12949  1584  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12950  1585  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12951  1586  00A3               	movwf	I2C_Master_Write@d
 12952  1587  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12953  1588  00A4               	movwf	I2C_Master_Write@d+1
 12954  1589  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 12955                           
 12956                           ;EEPROM_24C1025.c: 37:      for(count=0;count<(sizedata-1);count++)
 12957  158E  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12958  158F                     l5826:	
 12959  158F  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12960  1590  3EFF               	addlw	255
 12961  1591  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12962  1592  30FF               	movlw	255
 12963  1593  1803               	skipnc
 12964  1594  3000               	movlw	0
 12965  1595  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12966  1596  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12967  1597  3A80               	xorlw	128
 12968  1598  3C80               	sublw	128
 12969  1599  1D03               	skipz
 12970  159A  2D9D               	goto	u5665
 12971  159B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12972  159C  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12973  159D                     u5665:	
 12974  159D  1803               	btfsc	3,0
 12975  159E  2E6A               	goto	l5828
 12976  159F  0064               	clrwdt	;# 
 12977                           
 12978                           ;EEPROM_24C1025.c: 40:           if(mem_add>0x1FFFF) return;
 12979  15A0  1283               	bcf	3,5	;RP0=0, select bank0
 12980  15A1  1303               	bcf	3,6	;RP1=0, select bank0
 12981  15A2  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12982  15A3  1D03               	btfss	3,2
 12983  15A4  0008               	return
 12984  15A5  3002               	movlw	2
 12985  15A6  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12986  15A7  1D03               	skipz
 12987  15A8  2DB1               	goto	u5633
 12988  15A9  3000               	movlw	0
 12989  15AA  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12990  15AB  1D03               	skipz
 12991  15AC  2DB1               	goto	u5633
 12992  15AD  3000               	movlw	0
 12993  15AE  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12994  15AF  1D03               	skipz
 12995  15B0  2DB1               	goto	u5633
 12996  15B1                     u5633:	
 12997  15B1  1803               	btfsc	3,0
 12998  15B2  0008               	return
 12999                           
 13000                           ;EEPROM_24C1025.c: 41:           if((mem_add+1)%128==0)
 13001  15B3  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13002  15B4  3E01               	addlw	1
 13003  15B5  397F               	andlw	127
 13004  15B6  1D03               	btfss	3,2
 13005  15B7  2E40               	goto	l5818
 13006                           
 13007                           ;EEPROM_24C1025.c: 42:             {;EEPROM_24C1025.c: 43:             I2C_Master_Write(
      +                          *data);
 13008  15B8  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13009  15B9  0084               	movwf	4
 13010  15BA  1783               	bsf	3,7
 13011  15BB  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13012  15BC  1383               	bcf	3,7
 13013  15BD  0800               	movf	0,w
 13014  15BE  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13015  15BF  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13016  15C0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13017  15C1  00A3               	movwf	I2C_Master_Write@d
 13018  15C2  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13019  15C3  00A4               	movwf	I2C_Master_Write@d+1
 13020  15C4  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13021                           
 13022                           ;EEPROM_24C1025.c: 44:             I2C_Master_Stop();
 13023  15C9  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 13024                           
 13025                           ;EEPROM_24C1025.c: 46:             my_delay_ms_WDT(5);
 13026  15CE  3000               	movlw	0
 13027  15CF  1283               	bcf	3,5	;RP0=0, select bank0
 13028  15D0  00A3               	movwf	my_delay_ms_WDT@time+3
 13029  15D1  3000               	movlw	0
 13030  15D2  00A2               	movwf	my_delay_ms_WDT@time+2
 13031  15D3  3000               	movlw	0
 13032  15D4  00A1               	movwf	my_delay_ms_WDT@time+1
 13033  15D5  3005               	movlw	5
 13034  15D6  00A0               	movwf	my_delay_ms_WDT@time
 13035  15D7  160A  158A  2529  160A  118A  	fcall	_my_delay_ms_WDT
 13036                           
 13037                           ;EEPROM_24C1025.c: 47:             mem_add++;
 13038  15DC  3001               	movlw	1
 13039  15DD  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13040  15DE  3000               	movlw	0
 13041  15DF  1803               	skipnc
 13042  15E0  3001               	movlw	1
 13043  15E1  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13044  15E2  3000               	movlw	0
 13045  15E3  1803               	skipnc
 13046  15E4  3001               	movlw	1
 13047  15E5  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13048  15E6  3000               	movlw	0
 13049  15E7  1803               	skipnc
 13050  15E8  3001               	movlw	1
 13051  15E9  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13052                           
 13053                           ;EEPROM_24C1025.c: 48:             data++;
 13054  15EA  3001               	movlw	1
 13055  15EB  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13056  15EC  1803               	skipnc
 13057  15ED  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13058  15EE  3000               	movlw	0
 13059  15EF  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13060                           
 13061                           ;EEPROM_24C1025.c: 49:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13062  15F0  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13063  15F1  1D03               	btfss	3,2
 13064  15F2  2E01               	goto	l5798
 13065  15F3  3001               	movlw	1
 13066  15F4  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13067  15F5  1D03               	skipz
 13068  15F6  2DFF               	goto	u5653
 13069  15F7  3000               	movlw	0
 13070  15F8  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13071  15F9  1D03               	skipz
 13072  15FA  2DFF               	goto	u5653
 13073  15FB  3000               	movlw	0
 13074  15FC  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13075  15FD  1D03               	skipz
 13076  15FE  2DFF               	goto	u5653
 13077  15FF                     u5653:	
 13078  15FF  1C03               	btfss	3,0
 13079  1600  2E06               	goto	l5800
 13080  1601                     l5798:	
 13081  1601  3008               	movlw	8
 13082  1602  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13083  1603  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13084  1604  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 13085  1605  2E07               	goto	l5802
 13086  1606                     l5800:	
 13087  1606  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 13088  1607                     l5802:	
 13089                           
 13090                           ;EEPROM_24C1025.c: 50:             ctrl=chip_add;
 13091  1607  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13092  1608  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13093  1609  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13094  160A  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13095                           
 13096                           ;EEPROM_24C1025.c: 51:             ctrl<<=1;
 13097  160B  1003               	clrc
 13098  160C  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13099                           
 13100                           ;EEPROM_24C1025.c: 52:             ctrl |= 0xA0;
 13101  160D  30A0               	movlw	160
 13102  160E  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13103  160F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13104  1610  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13105                           
 13106                           ;EEPROM_24C1025.c: 53:             ctrl |= range;
 13107  1611  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13108  1612  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13109  1613  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13110  1614  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13111                           
 13112                           ;EEPROM_24C1025.c: 55:             I2C_Master_Start();
 13113  1615  160A  158A  2123  160A  118A  	fcall	_I2C_Master_Start
 13114                           
 13115                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(ctrl);
 13116  161A  1283               	bcf	3,5	;RP0=0, select bank0
 13117  161B  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13118  161C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13119  161D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13120  161E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13121  161F  00A3               	movwf	I2C_Master_Write@d
 13122  1620  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13123  1621  00A4               	movwf	I2C_Master_Write@d+1
 13124  1622  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13125                           
 13126                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(((char *)&mem_add)[1]);
 13127  1627  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13128  1628  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13129  1629  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13130  162A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13131  162B  00A3               	movwf	I2C_Master_Write@d
 13132  162C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13133  162D  00A4               	movwf	I2C_Master_Write@d+1
 13134  162E  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13135                           
 13136                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[0]);
 13137  1633  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13138  1634  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13139  1635  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13140  1636  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13141  1637  00A3               	movwf	I2C_Master_Write@d
 13142  1638  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13143  1639  00A4               	movwf	I2C_Master_Write@d+1
 13144  163A  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13145                           
 13146                           ;EEPROM_24C1025.c: 59:             }
 13147  163F  2E65               	goto	l5824
 13148  1640                     l5818:	
 13149                           
 13150                           ;EEPROM_24C1025.c: 61:             {;EEPROM_24C1025.c: 62:             I2C_Master_Write(
      +                          *data);
 13151  1640  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13152  1641  0084               	movwf	4
 13153  1642  1783               	bsf	3,7
 13154  1643  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13155  1644  1383               	bcf	3,7
 13156  1645  0800               	movf	0,w
 13157  1646  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13158  1647  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13159  1648  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13160  1649  00A3               	movwf	I2C_Master_Write@d
 13161  164A  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13162  164B  00A4               	movwf	I2C_Master_Write@d+1
 13163  164C  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13164                           
 13165                           ;EEPROM_24C1025.c: 63:             data++;
 13166  1651  3001               	movlw	1
 13167  1652  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13168  1653  1803               	skipnc
 13169  1654  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13170  1655  3000               	movlw	0
 13171  1656  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13172                           
 13173                           ;EEPROM_24C1025.c: 64:             mem_add++;
 13174  1657  3001               	movlw	1
 13175  1658  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13176  1659  3000               	movlw	0
 13177  165A  1803               	skipnc
 13178  165B  3001               	movlw	1
 13179  165C  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13180  165D  3000               	movlw	0
 13181  165E  1803               	skipnc
 13182  165F  3001               	movlw	1
 13183  1660  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13184  1661  3000               	movlw	0
 13185  1662  1803               	skipnc
 13186  1663  3001               	movlw	1
 13187  1664  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13188  1665                     l5824:	
 13189                           
 13190                           ;EEPROM_24C1025.c: 66:      }
 13191  1665  3001               	movlw	1
 13192  1666  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13193  1667  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13194  1668  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13195  1669  2D8F               	goto	l5826
 13196  166A                     l5828:	
 13197                           
 13198                           ;EEPROM_24C1025.c: 67:      I2C_Master_Write(*data);
 13199  166A  1283               	bcf	3,5	;RP0=0, select bank0
 13200  166B  1303               	bcf	3,6	;RP1=0, select bank0
 13201  166C  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13202  166D  0084               	movwf	4
 13203  166E  1783               	bsf	3,7
 13204  166F  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13205  1670  1383               	bcf	3,7
 13206  1671  0800               	movf	0,w
 13207  1672  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13208  1673  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13209  1674  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13210  1675  00A3               	movwf	I2C_Master_Write@d
 13211  1676  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13212  1677  00A4               	movwf	I2C_Master_Write@d+1
 13213  1678  160A  158A  210D  160A  118A  	fcall	_I2C_Master_Write
 13214                           
 13215                           ;EEPROM_24C1025.c: 68:      I2C_Master_Stop();
 13216  167D  160A  158A  20EF  160A  118A  	fcall	_I2C_Master_Stop
 13217                           
 13218                           ;EEPROM_24C1025.c: 70:      my_delay_ms_WDT(5);
 13219  1682  3000               	movlw	0
 13220  1683  1283               	bcf	3,5	;RP0=0, select bank0
 13221  1684  00A3               	movwf	my_delay_ms_WDT@time+3
 13222  1685  3000               	movlw	0
 13223  1686  00A2               	movwf	my_delay_ms_WDT@time+2
 13224  1687  3000               	movlw	0
 13225  1688  00A1               	movwf	my_delay_ms_WDT@time+1
 13226  1689  3005               	movlw	5
 13227  168A  00A0               	movwf	my_delay_ms_WDT@time
 13228  168B  160A  158A  2529   	fcall	_my_delay_ms_WDT
 13229  168E  0008               	return
 13230  168F                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13231                           
 13232                           	psect	text57
 13233  1D29                     __ptext57:	
 13234 ;; *************** function _my_delay_ms_WDT *****************
 13235 ;; Defined at:
 13236 ;;		line 13 in file "my_delay.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;  time            4    0[BANK0 ] long 
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;  i               4    6[BANK0 ] long 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, btemp+1
 13245 ;; Tracked objects:
 13246 ;;		On entry : 300/0
 13247 ;;		On exit  : 300/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13250 ;;      Params:         0       4       0       0       0
 13251 ;;      Locals:         0       4       0       0       0
 13252 ;;      Temps:          0       2       0       0       0
 13253 ;;      Totals:         0      10       0       0       0
 13254 ;;Total ram usage:       10 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:    1
 13257 ;; This function calls:
 13258 ;;		Nothing
 13259 ;; This function is called by:
 13260 ;;		_EEPROM_24C1025_Write_Buffer
 13261 ;;		_EEPROM_24C1025_Read_Buffer
 13262 ;;		_EEPROM_24C1025_Write_Str
 13263 ;;		_EEPROM_24C1025_Read_Str
 13264 ;;		_main
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268                           
 13269                           ;psect for function _my_delay_ms_WDT
 13270  1D29                     _my_delay_ms_WDT:	
 13271                           
 13272                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 13273                           
 13274                           ;incstack = 0
 13275                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 13276  1D29  3000               	movlw	0
 13277  1D2A  00A9               	movwf	my_delay_ms_WDT@i+3
 13278  1D2B  3000               	movlw	0
 13279  1D2C  00A8               	movwf	my_delay_ms_WDT@i+2
 13280  1D2D  3000               	movlw	0
 13281  1D2E  00A7               	movwf	my_delay_ms_WDT@i+1
 13282  1D2F  3000               	movlw	0
 13283  1D30  00A6               	movwf	my_delay_ms_WDT@i
 13284  1D31                     l5742:	
 13285  1D31  0829               	movf	my_delay_ms_WDT@i+3,w
 13286  1D32  3A80               	xorlw	128
 13287  1D33  00FF               	movwf	127
 13288  1D34  0823               	movf	my_delay_ms_WDT@time+3,w
 13289  1D35  3A80               	xorlw	128
 13290  1D36  027F               	subwf	127,w
 13291  1D37  1D03               	skipz
 13292  1D38  2D43               	goto	u5593
 13293  1D39  0822               	movf	my_delay_ms_WDT@time+2,w
 13294  1D3A  0228               	subwf	my_delay_ms_WDT@i+2,w
 13295  1D3B  1D03               	skipz
 13296  1D3C  2D43               	goto	u5593
 13297  1D3D  0821               	movf	my_delay_ms_WDT@time+1,w
 13298  1D3E  0227               	subwf	my_delay_ms_WDT@i+1,w
 13299  1D3F  1D03               	skipz
 13300  1D40  2D43               	goto	u5593
 13301  1D41  0820               	movf	my_delay_ms_WDT@time,w
 13302  1D42  0226               	subwf	my_delay_ms_WDT@i,w
 13303  1D43                     u5593:	
 13304  1D43  1803               	btfsc	3,0
 13305  1D44  0008               	return
 13306  1D45  0064               	clrwdt	;# 
 13307                           
 13308                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 13309  1D46  3003               	movlw	3
 13310  1D47  1283               	bcf	3,5	;RP0=0, select bank0
 13311  1D48  1303               	bcf	3,6	;RP1=0, select bank0
 13312  1D49  00A5               	movwf	??_my_delay_ms_WDT+1
 13313  1D4A  3097               	movlw	151
 13314  1D4B  00A4               	movwf	??_my_delay_ms_WDT
 13315  1D4C                     u8257:	
 13316  1D4C  0BA4               	decfsz	??_my_delay_ms_WDT,f
 13317  1D4D  2D4C               	goto	u8257
 13318  1D4E  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 13319  1D4F  2D4C               	goto	u8257
 13320                           
 13321                           ;my_delay.c: 19:             }
 13322  1D50  3001               	movlw	1
 13323  1D51  1283               	bcf	3,5	;RP0=0, select bank0
 13324  1D52  1303               	bcf	3,6	;RP1=0, select bank0
 13325  1D53  07A6               	addwf	my_delay_ms_WDT@i,f
 13326  1D54  3000               	movlw	0
 13327  1D55  1803               	skipnc
 13328  1D56  3001               	movlw	1
 13329  1D57  07A7               	addwf	my_delay_ms_WDT@i+1,f
 13330  1D58  3000               	movlw	0
 13331  1D59  1803               	skipnc
 13332  1D5A  3001               	movlw	1
 13333  1D5B  07A8               	addwf	my_delay_ms_WDT@i+2,f
 13334  1D5C  3000               	movlw	0
 13335  1D5D  1803               	skipnc
 13336  1D5E  3001               	movlw	1
 13337  1D5F  07A9               	addwf	my_delay_ms_WDT@i+3,f
 13338  1D60  2D31               	goto	l5742
 13339  1D61                     __end_of_my_delay_ms_WDT:	
 13340                           
 13341                           	psect	text58
 13342  190D                     __ptext58:	
 13343 ;; *************** function _I2C_Master_Write *****************
 13344 ;; Defined at:
 13345 ;;		line 83 in file "I2C.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;  d               2    3[BANK0 ] unsigned int 
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, status,2, status,0, pclath, cstack
 13354 ;; Tracked objects:
 13355 ;;		On entry : 300/0
 13356 ;;		On exit  : 300/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13359 ;;      Params:         0       2       0       0       0
 13360 ;;      Locals:         0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0
 13362 ;;      Totals:         0       2       0       0       0
 13363 ;;Total ram usage:        2 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    2
 13366 ;; This function calls:
 13367 ;;		_I2C_Master_Wait
 13368 ;; This function is called by:
 13369 ;;		_EEPROM_24C1025_Write_Buffer
 13370 ;;		_EEPROM_24C1025_Read_Buffer
 13371 ;;		_EEPROM_24C1025_Write_Str
 13372 ;;		_EEPROM_24C1025_Read_Str
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           
 13377                           ;psect for function _I2C_Master_Write
 13378  190D                     _I2C_Master_Write:	
 13379                           
 13380                           ;I2C.c: 83: void I2C_Master_Write(unsigned d);I2C.c: 84: {;I2C.c: 85:   if(I2C_Master_Wa
      +                          it())
 13381                           
 13382                           ;incstack = 0
 13383                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13384  190D  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 13385  1912  3A00               	xorlw	0
 13386  1913  1903               	skipnz
 13387  1914  0008               	return
 13388                           
 13389                           ;I2C.c: 86:     {;I2C.c: 87:     SSPBUF = d;
 13390  1915  0823               	movf	I2C_Master_Write@d,w
 13391  1916  0093               	movwf	19	;volatile
 13392  1917  0008               	return
 13393  1918                     __end_of_I2C_Master_Write:	
 13394                           
 13395                           	psect	text59
 13396  18EF                     __ptext59:	
 13397 ;; *************** function _I2C_Master_Stop *****************
 13398 ;; Defined at:
 13399 ;;		line 74 in file "I2C.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;		None
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, status,2, status,0, pclath, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : 300/800
 13410 ;;		On exit  : 200/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13413 ;;      Params:         0       0       0       0       0
 13414 ;;      Locals:         0       0       0       0       0
 13415 ;;      Temps:          0       0       0       0       0
 13416 ;;      Totals:         0       0       0       0       0
 13417 ;;Total ram usage:        0 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:    2
 13420 ;; This function calls:
 13421 ;;		_I2C_Master_Wait
 13422 ;; This function is called by:
 13423 ;;		_EEPROM_24C1025_Write_Buffer
 13424 ;;		_EEPROM_24C1025_Read_Buffer
 13425 ;;		_EEPROM_24C1025_Write_Str
 13426 ;;		_EEPROM_24C1025_Read_Str
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           
 13431                           ;psect for function _I2C_Master_Stop
 13432  18EF                     _I2C_Master_Stop:	
 13433                           
 13434                           ;I2C.c: 76:   if(I2C_Master_Wait())
 13435                           
 13436                           ;incstack = 0
 13437                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13438  18EF  160A  158A  229D   	fcall	_I2C_Master_Wait
 13439  18F2  3A00               	xorlw	0
 13440                           
 13441                           ;I2C.c: 77:     {;I2C.c: 78:     SSPCON2bits.PEN = 1;
 13442  18F3  1683               	bsf	3,5	;RP0=1, select bank1
 13443  18F4  1D03               	btfss	3,2
 13444  18F5  1511               	bsf	17,2	;volatile
 13445                           
 13446                           ;I2C.c: 80:   INTCONbits.GIE=1;
 13447                           
 13448                           ;I2C.c: 79:     }
 13449  18F6  178B               	bsf	11,7	;volatile
 13450  18F7  0008               	return
 13451  18F8                     __end_of_I2C_Master_Stop:	
 13452                           
 13453                           	psect	text60
 13454  1923                     __ptext60:	
 13455 ;; *************** function _I2C_Master_Start *****************
 13456 ;; Defined at:
 13457 ;;		line 56 in file "I2C.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;		None
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;		None
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  1    wreg      void 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0, pclath, cstack
 13466 ;; Tracked objects:
 13467 ;;		On entry : 300/0
 13468 ;;		On exit  : 200/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13471 ;;      Params:         0       0       0       0       0
 13472 ;;      Locals:         0       0       0       0       0
 13473 ;;      Temps:          0       0       0       0       0
 13474 ;;      Totals:         0       0       0       0       0
 13475 ;;Total ram usage:        0 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:    2
 13478 ;; This function calls:
 13479 ;;		_I2C_Master_Wait
 13480 ;; This function is called by:
 13481 ;;		_EEPROM_24C1025_Write_Buffer
 13482 ;;		_EEPROM_24C1025_Read_Buffer
 13483 ;;		_EEPROM_24C1025_Write_Str
 13484 ;;		_EEPROM_24C1025_Read_Str
 13485 ;; This function uses a non-reentrant model
 13486 ;;
 13487                           
 13488                           
 13489                           ;psect for function _I2C_Master_Start
 13490  1923                     _I2C_Master_Start:	
 13491                           
 13492                           ;I2C.c: 58:   INTCONbits.GIE=0;
 13493                           
 13494                           ;incstack = 0
 13495                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13496  1923  138B               	bcf	11,7	;volatile
 13497                           
 13498                           ;I2C.c: 59:   Delay_Led_Memory=20;
 13499  1924  3014               	movlw	20
 13500  1925  00FA               	movwf	_Delay_Led_Memory	;volatile
 13501  1926  3000               	movlw	0
 13502  1927  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13503                           
 13504                           ;I2C.c: 60:   if(I2C_Master_Wait())
 13505  1928  160A  158A  229D  160A  158A  	fcall	_I2C_Master_Wait
 13506  192D  3A00               	xorlw	0
 13507  192E  1903               	skipnz
 13508  192F  0008               	return
 13509                           
 13510                           ;I2C.c: 61:     {;I2C.c: 62:     SSPCON2bits.SEN = 1;
 13511  1930  1683               	bsf	3,5	;RP0=1, select bank1
 13512  1931  1411               	bsf	17,0	;volatile
 13513  1932  0008               	return
 13514  1933                     __end_of_I2C_Master_Start:	
 13515                           
 13516                           	psect	text61
 13517  1A9D                     __ptext61:	
 13518 ;; *************** function _I2C_Master_Wait *****************
 13519 ;; Defined at:
 13520 ;;		line 41 in file "I2C.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;		None
 13523 ;; Auto vars:     Size  Location     Type
 13524 ;;  tempo           1    2[BANK0 ] unsigned char 
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      unsigned char 
 13527 ;; Registers used:
 13528 ;;		wreg, status,2, status,0
 13529 ;; Tracked objects:
 13530 ;;		On entry : 200/0
 13531 ;;		On exit  : 300/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13534 ;;      Params:         0       0       0       0       0
 13535 ;;      Locals:         0       1       0       0       0
 13536 ;;      Temps:          0       2       0       0       0
 13537 ;;      Totals:         0       3       0       0       0
 13538 ;;Total ram usage:        3 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; Hardware stack levels required when called:    1
 13541 ;; This function calls:
 13542 ;;		Nothing
 13543 ;; This function is called by:
 13544 ;;		_I2C_Master_Start
 13545 ;;		_I2C_Master_RepeatedStart
 13546 ;;		_I2C_Master_Stop
 13547 ;;		_I2C_Master_Write
 13548 ;;		_I2C_Master_Read
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function _I2C_Master_Wait
 13554  1A9D                     _I2C_Master_Wait:	
 13555                           
 13556                           ;I2C.c: 43:   char tempo;;I2C.c: 44:   tempo=200;
 13557                           
 13558                           ;incstack = 0
 13559                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13560  1A9D  30C8               	movlw	200
 13561  1A9E  1283               	bcf	3,5	;RP0=0, select bank0
 13562  1A9F  00A0               	movwf	??_I2C_Master_Wait
 13563  1AA0  0820               	movf	??_I2C_Master_Wait,w
 13564  1AA1  00A2               	movwf	I2C_Master_Wait@tempo
 13565                           
 13566                           ;I2C.c: 45:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13567  1AA2  2AAF               	goto	l5714
 13568  1AA3                     l5710:	
 13569                           
 13570                           ;I2C.c: 48:          tempo--;
 13571  1AA3  3001               	movlw	1
 13572  1AA4  02A2               	subwf	I2C_Master_Wait@tempo,f
 13573                           
 13574                           ;I2C.c: 51:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13575  1AA5  3003               	movlw	3
 13576  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
 13577  1AA7  1303               	bcf	3,6	;RP1=0, select bank0
 13578  1AA8  00A1               	movwf	??_I2C_Master_Wait+1
 13579  1AA9  3097               	movlw	151
 13580  1AAA  00A0               	movwf	??_I2C_Master_Wait
 13581  1AAB                     u8267:	
 13582  1AAB  0BA0               	decfsz	??_I2C_Master_Wait,f
 13583  1AAC  2AAB               	goto	u8267
 13584  1AAD  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13585  1AAE  2AAB               	goto	u8267
 13586  1AAF                     l5714:	
 13587                           
 13588                           ;I2C.c: 45:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13589  1AAF  1683               	bsf	3,5	;RP0=1, select bank1
 13590  1AB0  1303               	bcf	3,6	;RP1=0, select bank1
 13591  1AB1  1914               	btfsc	20,2	;volatile
 13592  1AB2  2AB7               	goto	l5708
 13593  1AB3  0811               	movf	17,w	;volatile
 13594  1AB4  391F               	andlw	31
 13595  1AB5  1903               	btfsc	3,2
 13596  1AB6  2ABB               	goto	l5718
 13597  1AB7                     l5708:	
 13598                           
 13599                           ;I2C.c: 46:       {;I2C.c: 47:       if(tempo)
 13600  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
 13601  1AB8  0822               	movf	I2C_Master_Wait@tempo,w
 13602  1AB9  1D03               	btfss	3,2
 13603  1ABA  2AA3               	goto	l5710
 13604  1ABB                     l5718:	
 13605                           
 13606                           ;I2C.c: 53:   return tempo ;
 13607  1ABB  1283               	bcf	3,5	;RP0=0, select bank0
 13608  1ABC  0822               	movf	I2C_Master_Wait@tempo,w
 13609  1ABD  0008               	return
 13610  1ABE                     __end_of_I2C_Master_Wait:	
 13611                           
 13612                           	psect	text62
 13613  1902                     __ptext62:	
 13614 ;; *************** function _ADC_init *****************
 13615 ;; Defined at:
 13616 ;;		line 10 in file "adc.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;		None
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;		None
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  1    wreg      void 
 13623 ;; Registers used:
 13624 ;;		wreg, status,2, status,0
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/100
 13627 ;;		On exit  : 300/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13630 ;;      Params:         0       0       0       0       0
 13631 ;;      Locals:         0       0       0       0       0
 13632 ;;      Temps:          0       0       0       0       0
 13633 ;;      Totals:         0       0       0       0       0
 13634 ;;Total ram usage:        0 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:    1
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_main
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           
 13645                           ;psect for function _ADC_init
 13646  1902                     _ADC_init:	
 13647                           
 13648                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13649                           
 13650                           ;incstack = 0
 13651                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13652  1902  30C0               	movlw	192
 13653  1903  1283               	bcf	3,5	;RP0=0, select bank0
 13654  1904  1303               	bcf	3,6	;RP1=0, select bank0
 13655  1905  049F               	iorwf	31,f	;volatile
 13656                           
 13657                           ;adc.c: 12:      ADCON1=0b10000000;
 13658  1906  3080               	movlw	128
 13659  1907  1683               	bsf	3,5	;RP0=1, select bank1
 13660  1908  009F               	movwf	31	;volatile
 13661                           
 13662                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13663  1909  179F               	bsf	31,7	;volatile
 13664                           
 13665                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13666  190A  1283               	bcf	3,5	;RP0=0, select bank0
 13667  190B  141F               	bsf	31,0	;volatile
 13668  190C  0008               	return
 13669  190D                     __end_of_ADC_init:	
 13670                           
 13671                           	psect	text63
 13672  125A                     __ptext63:	
 13673 ;; *************** function _isr *****************
 13674 ;; Defined at:
 13675 ;;		line 29 in file "isr.c"
 13676 ;; Parameters:    Size  Location     Type
 13677 ;;		None
 13678 ;; Auto vars:     Size  Location     Type
 13679 ;;  tempo           2    6[COMMON] unsigned int 
 13680 ;; Return value:  Size  Location     Type
 13681 ;;                  1    wreg      void 
 13682 ;; Registers used:
 13683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13684 ;; Tracked objects:
 13685 ;;		On entry : 0/0
 13686 ;;		On exit  : 300/0
 13687 ;;		Unchanged: 0/0
 13688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13689 ;;      Params:         0       0       0       0       0
 13690 ;;      Locals:         2       0       0       0       0
 13691 ;;      Temps:          6       0       0       0       0
 13692 ;;      Totals:         8       0       0       0       0
 13693 ;;Total ram usage:        8 bytes
 13694 ;; Hardware stack levels used:    1
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		Interrupt level 1
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function _isr
 13704  125A                     _isr:	
 13705                           
 13706                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13707  125A  188B               	btfsc	11,1	;volatile
 13708                           
 13709                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13710  125B  108B               	bcf	11,1	;volatile
 13711                           
 13712                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13713                           
 13714                           ;isr.c: 37:       }
 13715  125C  1C0C               	btfss	12,0	;volatile
 13716  125D  2AD2               	goto	i1l5636
 13717                           
 13718                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13719  125E  30B1               	movlw	177
 13720  125F  008F               	movwf	15	;volatile
 13721                           
 13722                           ;isr.c: 42:                 TMR1L=0xF3;
 13723  1260  30F3               	movlw	243
 13724  1261  008E               	movwf	14	;volatile
 13725                           
 13726                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13727  1262  100C               	bcf	12,0	;volatile
 13728                           
 13729                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13730  1263  1683               	bsf	3,5	;RP0=1, select bank1
 13731  1264  1FE9               	btfss	_generic_status^(0+128),7
 13732  1265  2A68               	goto	i1l5592
 13733                           
 13734                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13735  1266  13E9               	bcf	_generic_status^(0+128),7
 13736  1267  0064               	clrwdt	;# 
 13737  1268                     i1l5592:	
 13738                           
 13739                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13740  1268  300A               	movlw	10
 13741  1269  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13742  126A  1803               	skipnc
 13743  126B  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13744  126C  3000               	movlw	0
 13745  126D  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13746                           
 13747                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13748  126E  3003               	movlw	3
 13749  126F  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13750  1270  30E8               	movlw	232
 13751  1271  1903               	skipnz
 13752  1272  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13753  1273  1C03               	skipc
 13754  1274  2A77               	goto	i1l5596
 13755                           
 13756                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13757  1275  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13758  1276  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13759  1277                     i1l5596:	
 13760                           
 13761                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13762  1277  3001               	movlw	1
 13763  1278  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13764  1279  30F4               	movlw	244
 13765  127A  1903               	skipnz
 13766  127B  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13767  127C  1803               	skipnc
 13768  127D  2A82               	goto	i1l634
 13769                           
 13770                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13771  127E  1283               	bcf	3,5	;RP0=0, select bank0
 13772  127F  1303               	bcf	3,6	;RP1=0, select bank0
 13773  1280  1786               	bsf	6,7	;volatile
 13774  1281  2A85               	goto	i1l5600
 13775  1282                     i1l634:	
 13776                           ;isr.c: 56:                 else
 13777                           
 13778                           
 13779                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13780  1282  1283               	bcf	3,5	;RP0=0, select bank0
 13781  1283  1303               	bcf	3,6	;RP1=0, select bank0
 13782  1284  1386               	bcf	6,7	;volatile
 13783  1285                     i1l5600:	
 13784                           
 13785                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13786  1285  1683               	bsf	3,5	;RP0=1, select bank1
 13787  1286  085F               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13788  1287  0460               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13789  1288  1903               	btfsc	3,2
 13790  1289  2A93               	goto	i1l636
 13791                           
 13792                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13793  128A  300A               	movlw	10
 13794  128B  02DF               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13795  128C  3000               	movlw	0
 13796  128D  1C03               	skipc
 13797  128E  03E0               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13798  128F  02E0               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13799                           
 13800                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13801  1290  1283               	bcf	3,5	;RP0=0, select bank0
 13802  1291  1706               	bsf	6,6	;volatile
 13803                           
 13804                           ;isr.c: 63:                    }
 13805  1292  2A95               	goto	i1l5606
 13806  1293                     i1l636:	
 13807                           ;isr.c: 64:                 else{
 13808                           
 13809                           
 13810                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13811  1293  1283               	bcf	3,5	;RP0=0, select bank0
 13812  1294  1306               	bcf	6,6	;volatile
 13813  1295                     i1l5606:	
 13814                           
 13815                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13816  1295  087A               	movf	_Delay_Led_Memory,w	;volatile
 13817  1296  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13818  1297  1903               	btfsc	3,2
 13819  1298  2AA1               	goto	i1l638
 13820                           
 13821                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13822  1299  300A               	movlw	10
 13823  129A  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13824  129B  3000               	movlw	0
 13825  129C  1C03               	skipc
 13826  129D  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13827  129E  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13828                           
 13829                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13830  129F  1686               	bsf	6,5	;volatile
 13831                           
 13832                           ;isr.c: 71:                    }
 13833  12A0  2AA2               	goto	i1l5612
 13834  12A1                     i1l638:	
 13835                           ;isr.c: 72:                 else{
 13836                           
 13837                           
 13838                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13839  12A1  1286               	bcf	6,5	;volatile
 13840  12A2                     i1l5612:	
 13841                           
 13842                           ;isr.c: 77:                 tempodecorrido+=10;
 13843  12A2  300A               	movlw	10
 13844  12A3  1683               	bsf	3,5	;RP0=1, select bank1
 13845  12A4  07D7               	addwf	_tempodecorrido^(0+128),f	;volatile
 13846  12A5  1803               	skipnc
 13847  12A6  0AD8               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13848  12A7  3000               	movlw	0
 13849  12A8  07D8               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13850                           
 13851                           ;isr.c: 78:                 milisegundo+=10;
 13852  12A9  300A               	movlw	10
 13853  12AA  07DD               	addwf	_milisegundo^(0+128),f	;volatile
 13854  12AB  1803               	skipnc
 13855  12AC  0ADE               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13856  12AD  3000               	movlw	0
 13857  12AE  07DE               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13858                           
 13859                           ;isr.c: 79:                 if(milisegundo==1000){
 13860  12AF  30E8               	movlw	232
 13861  12B0  065D               	xorwf	_milisegundo^(0+128),w	;volatile
 13862  12B1  3003               	movlw	3
 13863  12B2  1903               	skipnz
 13864  12B3  065E               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13865  12B4  1D03               	btfss	3,2
 13866  12B5  2AD2               	goto	i1l5636
 13867                           
 13868                           ;isr.c: 80:                    milisegundo=0;
 13869  12B6  01DD               	clrf	_milisegundo^(0+128)	;volatile
 13870  12B7  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13871                           
 13872                           ;isr.c: 81:                    segundo++;
 13873  12B8  3001               	movlw	1
 13874  12B9  00F0               	movwf	??_isr
 13875  12BA  0870               	movf	??_isr,w
 13876  12BB  07E7               	addwf	_segundo^(0+128),f	;volatile
 13877                           
 13878                           ;isr.c: 88:                    if(segundo==60){
 13879  12BC  303C               	movlw	60
 13880  12BD  0667               	xorwf	_segundo^(0+128),w	;volatile
 13881  12BE  1D03               	btfss	3,2
 13882  12BF  2AD2               	goto	i1l5636
 13883                           
 13884                           ;isr.c: 89:                       segundo=0;
 13885  12C0  01E7               	clrf	_segundo^(0+128)	;volatile
 13886                           
 13887                           ;isr.c: 90:                       minuto++;
 13888  12C1  3001               	movlw	1
 13889  12C2  00F0               	movwf	??_isr
 13890  12C3  0870               	movf	??_isr,w
 13891  12C4  07E5               	addwf	_minuto^(0+128),f	;volatile
 13892                           
 13893                           ;isr.c: 91:                       if(minuto==60){
 13894  12C5  303C               	movlw	60
 13895  12C6  0665               	xorwf	_minuto^(0+128),w	;volatile
 13896  12C7  1D03               	btfss	3,2
 13897  12C8  2AD2               	goto	i1l5636
 13898                           
 13899                           ;isr.c: 92:                          minuto=0;
 13900  12C9  01E5               	clrf	_minuto^(0+128)	;volatile
 13901                           
 13902                           ;isr.c: 93:                          hora++;
 13903  12CA  3001               	movlw	1
 13904  12CB  00F0               	movwf	??_isr
 13905  12CC  0870               	movf	??_isr,w
 13906  12CD  07E6               	addwf	_hora^(0+128),f	;volatile
 13907                           
 13908                           ;isr.c: 94:                          if(hora==24){
 13909  12CE  3018               	movlw	24
 13910  12CF  0666               	xorwf	_hora^(0+128),w	;volatile
 13911  12D0  1903               	btfsc	3,2
 13912                           
 13913                           ;isr.c: 95:                             hora=0;
 13914  12D1  01E6               	clrf	_hora^(0+128)	;volatile
 13915  12D2                     i1l5636:	
 13916                           ;isr.c: 99:                 }
 13917                           
 13918                           
 13919                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13920  12D2  1283               	bcf	3,5	;RP0=0, select bank0
 13921  12D3  1E8C               	btfss	12,5	;volatile
 13922  12D4  2B39               	goto	i1l652
 13923                           
 13924                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13925  12D5  1683               	bsf	3,5	;RP0=1, select bank1
 13926  12D6  1469               	bsf	_generic_status^(0+128),0
 13927                           
 13928                           ;isr.c: 109:         tempo=30;
 13929  12D7  301E               	movlw	30
 13930  12D8  00F6               	movwf	isr@tempo
 13931  12D9  3000               	movlw	0
 13932  12DA  00F7               	movwf	isr@tempo+1
 13933                           
 13934                           ;isr.c: 110:         count=0;
 13935  12DB  01D9               	clrf	_count^(0+128)	;volatile
 13936  12DC  01DA               	clrf	(_count+1)^(0+128)	;volatile
 13937                           
 13938                           ;isr.c: 111:         pointer=usart_buffer;
 13939  12DD  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13940  12DE  00F0               	movwf	??_isr
 13941  12DF  0870               	movf	??_isr,w
 13942  12E0  00E1               	movwf	_pointer^(0+128)
 13943  12E1                     i1l5658:	
 13944                           ;isr.c: 112:         while(tempo)
 13945                           
 13946                           
 13947                           ;isr.c: 112:         while(tempo)
 13948  12E1  0876               	movf	isr@tempo,w
 13949  12E2  0477               	iorwf	isr@tempo+1,w
 13950  12E3  1903               	btfsc	3,2
 13951  12E4  2B14               	goto	i1l5660
 13952                           
 13953                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13954  12E5  1283               	bcf	3,5	;RP0=0, select bank0
 13955  12E6  1303               	bcf	3,6	;RP1=0, select bank0
 13956  12E7  1E8C               	btfss	12,5	;volatile
 13957  12E8  2B0D               	goto	i1l5656
 13958                           
 13959                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13960  12E9  081A               	movf	26,w	;volatile
 13961  12EA  00F0               	movwf	??_isr
 13962  12EB  1683               	bsf	3,5	;RP0=1, select bank1
 13963  12EC  0861               	movf	_pointer^(0+128),w
 13964  12ED  0084               	movwf	4
 13965  12EE  0870               	movf	??_isr,w
 13966  12EF  1783               	bsf	3,7	;select IRP bank2
 13967  12F0  0080               	movwf	0
 13968                           
 13969                           ;isr.c: 118:                 if(count<32+10 -1)
 13970  12F1  085A               	movf	(_count+1)^(0+128),w	;volatile
 13971  12F2  3A80               	xorlw	128
 13972  12F3  00FF               	movwf	127
 13973  12F4  3080               	movlw	128
 13974  12F5  027F               	subwf	127,w
 13975  12F6  1D03               	skipz
 13976  12F7  2AFA               	goto	u550_25
 13977  12F8  3029               	movlw	41
 13978  12F9  0259               	subwf	_count^(0+128),w	;volatile
 13979  12FA                     u550_25:	
 13980  12FA  1803               	skipnc
 13981  12FB  2B08               	goto	i1l5654
 13982                           
 13983                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13984  12FC  3001               	movlw	1
 13985  12FD  1683               	bsf	3,5	;RP0=1, select bank1
 13986  12FE  1303               	bcf	3,6	;RP1=0, select bank1
 13987  12FF  07D9               	addwf	_count^(0+128),f	;volatile
 13988  1300  1803               	skipnc
 13989  1301  0ADA               	incf	(_count+1)^(0+128),f	;volatile
 13990  1302  3000               	movlw	0
 13991  1303  07DA               	addwf	(_count+1)^(0+128),f	;volatile
 13992                           
 13993                           ;isr.c: 121:                    pointer++;
 13994  1304  3001               	movlw	1
 13995  1305  00F0               	movwf	??_isr
 13996  1306  0870               	movf	??_isr,w
 13997  1307  07E1               	addwf	_pointer^(0+128),f
 13998  1308                     i1l5654:	
 13999                           
 14000                           ;isr.c: 123:                 tempo=30;
 14001  1308  301E               	movlw	30
 14002  1309  00F6               	movwf	isr@tempo
 14003  130A  3000               	movlw	0
 14004  130B  00F7               	movwf	isr@tempo+1
 14005                           
 14006                           ;isr.c: 124:             }
 14007  130C  2AE1               	goto	i1l5658
 14008  130D                     i1l5656:	
 14009                           
 14010                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 14011  130D  3001               	movlw	1
 14012  130E  02F6               	subwf	isr@tempo,f
 14013  130F  3000               	movlw	0
 14014  1310  1C03               	skipc
 14015  1311  03F7               	decf	isr@tempo+1,f
 14016  1312  02F7               	subwf	isr@tempo+1,f
 14017  1313  2AE1               	goto	i1l5658
 14018  1314                     i1l5660:	
 14019                           
 14020                           ;isr.c: 131:         (*pointer)=0;
 14021  1314  1683               	bsf	3,5	;RP0=1, select bank1
 14022  1315  1303               	bcf	3,6	;RP1=0, select bank1
 14023  1316  0861               	movf	_pointer^(0+128),w
 14024  1317  0084               	movwf	4
 14025  1318  1783               	bsf	3,7	;select IRP bank2
 14026  1319  0180               	clrf	0
 14027                           
 14028                           ;isr.c: 133:         if(RCSTAbits.OERR){
 14029  131A  1283               	bcf	3,5	;RP0=0, select bank0
 14030  131B  1C98               	btfss	24,1	;volatile
 14031  131C  2B39               	goto	i1l652
 14032                           
 14033                           ;isr.c: 134:            CREN=0;
 14034  131D  1218               	bcf	24,4	;volatile
 14035                           
 14036                           ;isr.c: 135:            CREN=1;
 14037  131E  1618               	bsf	24,4	;volatile
 14038                           
 14039                           ;isr.c: 136:            tempo=RCREG;
 14040  131F  081A               	movf	26,w	;volatile
 14041  1320  00F0               	movwf	??_isr
 14042  1321  01F1               	clrf	??_isr+1
 14043  1322  0870               	movf	??_isr,w
 14044  1323  00F6               	movwf	isr@tempo
 14045  1324  0871               	movf	??_isr+1,w
 14046  1325  00F7               	movwf	isr@tempo+1
 14047                           
 14048                           ;isr.c: 137:            tempo=RCREG;
 14049  1326  081A               	movf	26,w	;volatile
 14050  1327  00F0               	movwf	??_isr
 14051  1328  01F1               	clrf	??_isr+1
 14052  1329  0870               	movf	??_isr,w
 14053  132A  00F6               	movwf	isr@tempo
 14054  132B  0871               	movf	??_isr+1,w
 14055  132C  00F7               	movwf	isr@tempo+1
 14056                           
 14057                           ;isr.c: 138:            tempo=RCREG;
 14058  132D  081A               	movf	26,w	;volatile
 14059  132E  00F0               	movwf	??_isr
 14060  132F  01F1               	clrf	??_isr+1
 14061  1330  0870               	movf	??_isr,w
 14062  1331  00F6               	movwf	isr@tempo
 14063  1332  0871               	movf	??_isr+1,w
 14064  1333  00F7               	movwf	isr@tempo+1
 14065                           
 14066                           ;isr.c: 139:            usart_buffer[0]=0;
 14067  1334  1683               	bsf	3,5	;RP0=1, select bank3
 14068  1335  1703               	bsf	3,6	;RP1=1, select bank3
 14069  1336  0190               	clrf	_usart_buffer^(0+384)	;volatile
 14070                           
 14071                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 14072  1337  1303               	bcf	3,6	;RP1=0, select bank1
 14073  1338  14E9               	bsf	_generic_status^(0+128),1
 14074  1339                     i1l652:	
 14075  1339  0875               	movf	??_isr+5,w
 14076  133A  1283               	bcf	3,5	;RP0=0, select bank0
 14077  133B  00FF               	movwf	127
 14078  133C  0874               	movf	??_isr+4,w
 14079  133D  008A               	movwf	10
 14080  133E  0873               	movf	??_isr+3,w
 14081  133F  0084               	movwf	4
 14082  1340  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 14083  1341  0083               	movwf	3
 14084  1342  0EFE               	swapf	126,f
 14085  1343  0E7E               	swapf	126,w
 14086  1344  0009               	retfie
 14087  1345                     __end_of_isr:	
 14088  007E                     btemp	set	126	;btemp
 14089  007E                     wtemp0	set	126
 14090                           
 14091                           	psect	intentry
 14092  0004                     __pintentry:	
 14093                           ;incstack = 0
 14094                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 14095                           
 14096  0004                     interrupt_function:	
 14097  007E                     saved_w	set	btemp
 14098  0004  00FE               	movwf	btemp
 14099  0005  0E03               	swapf	3,w
 14100  0006  00F2               	movwf	??_isr+2
 14101  0007  0804               	movf	4,w
 14102  0008  00F3               	movwf	??_isr+3
 14103  0009  080A               	movf	10,w
 14104  000A  00F4               	movwf	??_isr+4
 14105  000B  1283               	bcf	3,5	;RP0=0, select bank0
 14106  000C  1303               	bcf	3,6	;RP1=0, select bank0
 14107  000D  087F               	movf	btemp+1,w
 14108  000E  00F5               	movwf	??_isr+5
 14109  000F  160A  118A  2A5A   	ljmp	_isr


Data Sizes:
    Strings     15
    Constant    64
    Data        0
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     45      74
    BANK3            96      0      74
    BANK2            96      0      32

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[8]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK2[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  140872
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24465
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    49    49      0  113422
                                             63 BANK0      4     4      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14508
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6608
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7588
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7804
                                             10 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    8697
                                             24 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    8663
                                             24 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    8437
                                             10 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1023
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8484
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    8233
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7306
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     698
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4979
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     110       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      4A       9       77.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      20      11       33.3%
DATA                 0      0     110      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 30 08:30:15 2020

                              _USART_putc 1933                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l69 1708  
         EEPROM_24C1025_Read_Buffer@range 0036          EEPROM_24C1025_Write_Str@chip_add 0031  
                                      fsr 0004                             _USART_put_int 196E  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 181C              PROCULUS_VP_Write_String@text 005C  
                                     l421 045E                                       l423 04BA  
                                     l432 0F0F                                       l417 0450  
                                     l514 1DC5                                       l515 1DC6  
                                     l541 1A60                                       l509 1DA0  
                                     l519 1AC5                                       l485 18F9  
                                     l807 19A8                                       l790 19E6  
                                     l870 193B                              __CFG_CPD$OFF 0000  
      EEPROM_24C1025_Read_Buffer@chip_add 0035                  Decodify_Command@sizedata 00C8  
                                     _isr 125A                                       fsr0 0004  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1DD5  
                        _ADC_Media_10bits 1E8B                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0037                              ___flmul@bexp 0038  
                  PROCULUS_VP_Write@vetor 0054              ?_EEPROM_24C1025_Write_Buffer 002A  
                            ___flmul@sign 0036                              ___flmul@temp 0041  
                            ___flmul@prod 003D   __end_of_PROCULUS_Control_Register_Write 1D99  
__size_of_PROCULUS_Control_Register_Write 0038         ??_PROCULUS_Control_Register_Write 0053  
        ?_PROCULUS_Control_Register_Write 0052           _PROCULUS_Control_Register_Write 1D61  
                            __CFG_LVP$OFF 0000                              ___fltol@exp1 004D  
                         __end_of_MAX_ADC 1824                                      l1301 0CDE  
                                    l1161 113E                                      l1322 0D5E  
                                    l1314 0D46                                      l1180 108F  
                                    l1420 1214                                      l1164 11A4  
                                    l1414 11D4                                      l1360 0B34  
                                    l1336 09E7                                      l1280 0B8C  
                                    l1441 1FEA                                      l1427 122A  
                                    l1428 1234                                      l1284 0C25  
                                    l1358 0B26                                      l1286 0C03  
                                    l1484 0812                                      l1388 07A3  
                                    l6020 097F                                      l6014 0959  
                                    l6022 08A0                                      l6024 0984  
                                    l6040 1CB0                                      l6114 1D7B  
                                    l6130 07D3                                      l7010 1F93  
                                    l6116 1D91                                      l6132 07EF  
                                    l6140 1054                                      l7020 1158  
                                    l6212 0B84                                      l6046 1DAB  
                                    l6038 1C8E                                      l7006 1F86  
                                    l6310 0CF0                                      l6302 0CD0  
                                    l6048 1DAE                                      l6400 0505  
                                    l6136 104B                                      l7120 0A80  
                                    l7024 117E                                      l6208 0B81  
                                    l7114 0A61                                      l7122 0A3D  
                                    l6218 0B96                                      l7210 1E22  
                                    l6084 19D2                                      l6156 107B  
                                    l7140 0AA8                                      l7124 0A85  
                                    l7060 09C1                                      l6332 0D11  
                                    l6324 0D06                                      l7300 0F35  
                                    l5710 1AA3                                      l6086 19DD  
                                    l6166 109E                                      l6158 108B  
                                    l6094 1CFA                                      l6510 11CC  
                                    l7150 0AC1                                      l7054 09B6  
                                    l6318 0CFF                                      l6326 0D08  
                                    l6190 0B62                                      l7230 1E3C  
                                    l5800 1606                                      l6408 0513  
                                    l6520 11E7                                      l7160 0AF3  
                                    l6336 0D13                                      l6256 0C0E  
                                    l6248 0BD2                                      l6184 0B57  
                                    l7312 0FA3                                      l5714 1AAF  
                                    l5802 1607                                      l7402 01C8  
                                    l6530 1228                                      l6522 11F9  
                                    l7146 0ABF                                      l7138 0A8B  
                                    l7074 09DC                                      l7058 09B9  
                                    l6354 0D56                                      l6282 0C54  
                                    l6274 0C33                                      l6258 0C10  
                                    l6266 0C1F                                      l7306 0F8D  
                                    l5708 1AB7                                      l6460 06F5  
                                    l6380 04D8                                      l7500 03F7  
                                    l7420 0240                                      l7340 007B  
                                    l7332 005E                                      l6532 1219  
                                    l6516 11E3                                      l7164 0B0C  
                                    l6284 0C56                                      l6292 0C66  
                                    l6188 0B5A                                      l7244 1E43  
                                    l5718 1ABB                                      l5742 1D31  
                                    l6710 176B                                      l6462 0712  
                                    l6382 04E0                                      l6550 1FA1  
                                    l7414 0210                                      l7094 0A12  
                                    l7078 09DF                                      l6358 0D5A  
                                    l5824 1665                                      l5760 1550  
                                    l6712 176C                                      l6472 072B  
                                    l5912 1C7A                                      l6560 1FC0  
                                    l7512 0424                                      l7440 02C2  
                                    l7408 01E9                                      l7360 010E  
                                    l7352 00D5                                      l7336 006D  
                                    l6544 1251                                      l7176 0B30  
                                    l7088 0A06                                      l5818 1640  
                                    l5826 158F                                      l5762 1555  
                                    l5850 1CE8                                      l6650 1497  
                                    l6482 075D                                      l6378 04D6  
                                    l5906 1C5E                                      l7506 0408  
                                    l7434 029D                                      l7426 025E  
                                    l7282 0DF2                                      l7274 0DDB  
                                    l7266 0D93                                      l5828 166A  
                                    l5764 1556                                      l6708 1766  
                                    l6652 150D                                      l6644 14EB  
                                    l5924 080A                                      l6492 078C  
                                    l6468 0729                                      l6396 04FB  
                                    l5908 1C6C                                      l5916 1C85  
                                    l7524 0454                                      l7452 0303  
                                    l7364 011D                                      ?_isr 0070  
                                    l5846 1CD5                                      l6734 17B9  
                                    l6590 145F                                      l6486 0773  
                                    l6398 04FD                                      l6902 1BD0  
                                    l7518 0444                                      l7446 02DF  
                                    l7390 01A0                                      l7374 014F  
                                    l7614 13CD                                      l5944 084D  
                                    l6744 17E0                                      l6664 16B5  
                                    l6808 1C2D                                      l6904 1BDA  
                                    l7384 0180                                      l7368 0137  
                                    l7536 0462                                      l7640 13F7  
                                    l6770 100E                                      l5858 1CEF  
                                    l5946 0852                                      l6746 17E9  
                                    l6666 16BA                                      l6586 1459  
                                    l5890 1E01                                      l5882 1DDD  
                                    l7466 036B                                      l7458 0317  
                                    l5948 0853                                      l6668 16BB  
                                    l6588 145E                                      l6852 1BA3  
                                    l5884 1DEB                                      l6836 1F19  
                                    l6908 1BE4                                      l7476 0391  
                                    l7396 01AD                                      l5798 1601  
                                    l5990 090B                                      l6854 1BC0  
                                    l5894 1E0C                                      l7494 03DD  
                                    l7486 03B7                                      l5992 090C  
                                    l6784 1B7E                                      l6936 1EA7  
                                    l6954 19AD                                      l5988 0906  
                                    l6876 1B08                                      l7694 046D  
                                    l6982 1E7E                                      l6958 19B0  
                                    l6888 1A90                                      l6896 1A06  
                                    l6976 1E69                                      l6996 1F4E  
                                    _BETA 1848                                      l6998 1F5E  
                                    STR_1 1850                              __CFG_WDTE$ON 0000  
                                    STR_2 185C                                      STR_3 185B  
                                    STR_4 185D                                      STR_5 185B  
                                    STR_6 185D                                      STR_7 185B  
                                    STR_8 1858                               _statuspower 00E8  
                         ADC_Max_10Bits@i 0032                                      _CREN 00C4  
                                    u6023 1D0C                                      u6105 107C  
                                    u6135 1094                                      u7015 11F0  
                                    u6401 0C91                                      u6305 0C14  
                                    u6410 0CA5                                      u6402 0C92  
                                    u6075 105D                                      u7035 120C  
                                    u6411 0CA6                                      u6403 0C97  
                                    u6412 0CAB                                      u6404 0C98  
                                    u6260 0BF2                                      u5613 153D  
                                    u7213 16A2                                      u6413 0CAC  
                                    u6405 0C9D                                      u5710 1CE5  
                                    u6406 0C9E                                      u6270 0BF3  
                                    u5623 154E                                      u7223 16B3  
                                    u7055 1221                                      u6255 0BE6  
                                    u5633 15B1                                      u7233 171A  
                                    u7153 1446                                      u7163 1457  
                                    u7315 1F25                                      u5653 15FF  
                                    u7253 1764                                      u7173 14AF  
                                    u5903 083A                                      u8207 1C52  
                                    u5735 19EC                                      u7095 123C  
                                    u6455 0CF2                                      u5593 1D43  
                                    u5665 159D                                      u5913 084B  
                                    u8217 1DCF                                      u7345 1B11  
                                    u5825 1C61                                      u7505 1F87  
                                    u6393 0C78                                      u6385 0C5A  
                                    u7283 103F                                      u5923 08B6  
                                    u8227 1AD7                                      u5755 1DE0  
                                    u7435 1E78                                      u6555 0D30  
                                    u8237 17FA                                      u5845 1C72  
                                    u8247 0995                                      u5943 0904  
                                    u5775 1DEC                                      u6815 06AA  
                                    u5855 1C7B                                      u7551 1169  
                                    u7552 116A                                      u8257 1D4C  
                                    u5785 1DF8                                      u6745 05BD  
                                    u7465 1F52                                      u7553 116F  
                                    u8177 134D                                      u7554 1170  
                                    u8267 1AAB                                      u5795 1E02  
                                    u8187 1D14                                      u7715 0A5A  
                                    u7571 118F                                      u7555 1175  
                                    u7572 1190                                      u7556 1176  
                                    u8197 19F4                                      u5885 0813  
                                    u6845 06E1                                      u7485 1F60  
                                    u7725 0A6F                                      u7573 1195  
                                    u7574 1196                                      u6855 06F9  
                                    u6775 0616                                      u7495 1F75  
                                    u7575 119B                                      u7576 119C  
                                    u6945 0748                                      u6955 0766  
                                    u6875 0704                                      u7755 0A8F  
                                    u6965 077E                                      u7845 0ADE  
                                    u7685 0A46                                      u7855 0AFC  
                                    u7775 0A9A                                      u7695 0A4F  
                                    u7865 0B17                                      u7885 1C03  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 1923                                      _main 1345  
                                    _hora 00E6                                      _itoa 1A7D  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
                                    _utoa 1F9C         __size_of_EEPROM_24C1025_Write_Str 00F3  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 002A               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 190D  
                        _BALANCE_RESISTOR 184C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002E                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0023  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                         __end_of___fldiv 0B3C                                     ?_itoa 0031  
                                   _EEADR 010D                           __end_of___flmul 07B0  
                         __end_of___flsub 1A3D                           __end_of___fltol 10AD  
                                   _ANSEL 0188                           __end_of___lldiv 1F9C  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1E11                           __end_of___lwmod 1C8A  
                                   i1l634 1282                                     i1l652 1339  
                                   i1l636 1293                                     i1l638 12A1  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003E  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 1902  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E4              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00D9                                     _errno 00D5  
           ??_EEPROM_24C1025_Write_Buffer 0031        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01BA                ?_EEPROM_24C1025_Write_Byte 0037  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0038  
                            __end_of_BETA 184C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1434                              __end_of_itoa 1A9D  
                            __end_of_utoa 2000                            Send_To_MB@size 0021  
                        _USART_put_buffer 1B02                  __end_of_EEPROM_Read_Byte 1AE0  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 1124                                    ??_utoa 002C  
                        _USART_put_string 1C8A                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0023                        ??_I2C_Master_Start 0023  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0025  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 1B4E  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1958                                    i1l5600 1285  
                                  i1l5612 12A2                                    i1l5606 1295  
                                  i1l5660 1314                                    i1l5636 12D2  
                                  i1l5654 1308                                    i1l5656 130D  
                                  i1l5592 1268                                    i1l5658 12E1  
                                  i1l5596 1277         __end_of_EEPROM_24C1025_Write_Byte 196E  
                                  u550_25 12FA                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0058                                    _SSPADD 0093  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 005B  
                        __end_of___xxtofl 125A                        PROCULUS_VP_Write@i 0059  
                __end_of_Decodify_Command 04BB                  ?_EEPROM_24C1025_Read_Int 0038  
                ?_EEPROM_24C1025_Read_Str 002A                  _I2C_Master_RepeatedStart 1918  
    __size_of_EEPROM_24C1025_Write_Buffer 0168                                    ___flge 1124  
                               ??___fladd 0052                                 ??___fldiv 0049  
                               ??___flmul 0031                                 ??___flsub 0066  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00DB  
                       __end_of_ROOM_TEMP 1820                                 ??___lwdiv 0024  
                               ??___lwmod 0024                                    _buffer 0110  
                       _USART_to_Protocol 1EE1                           USART_putc@value 0020  
       EEPROM_24C1025_Read_Buffer@cnt_103 0034                                    _minuto 00E5  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00C9                                    _strcat 1BCB  
                                  _strcpy 1A01                                    _strlen 19CB  
       EEPROM_24C1025_Read_Buffer@mem_add 002A          __end_of_EEPROM_24C1025_Read_Byte 19CB  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 003C                                 ?_ADC_init 0070  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 003C  
                     __size_of_USART_putc 0010                  __end_of_MediaPlacaVaccum 1000  
                              ___flge@ff1 0020                                ___flge@ff2 0024  
                            ___xxtofl@arg 003D                              ___xxtofl@exp 003C  
                            ___xxtofl@val 0033                          __end_oflog@coeff 1848  
                 __end_of__initialization 0032       PROCULUS_Control_Register_Write@size 0052  
                              ___fltol@f1 0043                              _Board_Number 00E3  
                __end_of_ADC_Media_10bits 1EE1                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 1F3E  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                   __size_of_ADC_Max_10Bits 003E  
                __end_of_BALANCE_RESISTOR 1850          __end_of_EEPROM_24C1025_Write_Int 1A5D  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 1527                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1BCB  
         __end_of_EEPROM_24C1025_Fill_All 1042                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00CD  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1818           __end_of_EEPROM_24C1025_Read_Int 1B4E  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 19E4  
                       __end_of__Umul8_16 0823                                __pmaintext 1345  
                                 ?___flge 0020                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1B76                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 1943  
                      ADC_Max_10Bits@Temp 002E                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                       MediaPlacaVaccum@i 00A9                                 ?___xxtofl 0033  
                                 _MAX_ADC 1820                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00BE               EEPROM_24C1025_Read_Int@data 003F  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 199B  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 19B2                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 003C  
                __end_of_USART_put_buffer 1B26                __end_of_EEPROM_Read_String 1A7D  
                  __end_of_PROCULUS_Delay 1A01                  __end_of_USART_put_string 1CBD  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00D1  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0034  
                                 _Tensao1 00CD                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 005D               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 04BB                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1A1F                                   ___fltol 1042  
                                 ___lldiv 1F3E                                   ___lwdiv 1DD5  
                                 ___lwmod 1C58                             _Send_Reply_OK 07F7  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 18F8                          _statuspower_memo 007C  
                                 __ptext1 1E11                                   __ptext2 0D69  
                                 __ptext3 1A1F                                   __ptext4 0B3C  
                                 __ptext5 1124                                   __ptext6 099B  
                                 __ptext7 199B                                   __ptext8 1E8B  
                                 __ptext9 11B7                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00E2                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcat 002C                           __size_of_strcpy 001E  
                         __size_of_strlen 0019                              __size_of_isr 00EB  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 00E7                  __size_of_I2C_Master_Init 002F  
                __size_of_I2C_Master_Read 0035                            _usart_protocol 01CA  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0021  
                __size_of_I2C_Master_Stop 0009             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00E1             EEPROM_24C1025_Write_Byte@data 003B  
                                 clrloop0 18E8                        __end_of_USART_init 1E4D  
         __end_of_Package_Usart_is_for_me 19B2                        __end_of_USART_putc 1943  
                       ADC_Media_10bits@i 0049                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 1A3D                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 1434                ??_I2C_Master_RepeatedStart 0023  
                                 itoa@buf 0037                                   itoa@val 0031  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 002F           EEPROM_24C1025_Write_Buffer@ctrl 0036  
               __size_of_I2C_Master_Start 0010                 __size_of_I2C_Master_Write 000B  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 005F  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0023                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 1958  
                                 utoa@val 0028          __size_of_EEPROM_24C1025_Fill_All 003F  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 007A  
            ??_EEPROM_24C1025_Read_Buffer 0031             EEPROM_24C1025_Write_Str@range 0032  
                               _ROOM_TEMP 181C                            _ADC_Max_10Bits 1E4D  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0028  
        __size_of_EEPROM_24C1025_Read_Str 0171                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 168F               _EEPROM_24C1025_Write_Buffer 1527  
                               _TRISCbits 0087                               ___fldiv@grs 0055  
                             ___fldiv@rem 004E      PROCULUS_Control_Register_Write@vetor 0054  
        EEPROM_24C1025_Write_Buffer@count 0033           EEPROM_24C1025_Write_Int@mem_add 004E  
        EEPROM_24C1025_Write_Buffer@range 0035                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00C1                         ?_MediaPlacaVaccum 0070  
                   PROCULUS_VP_Write@size 0056           EEPROM_24C1025_Read_Str@chip_add 0032  
                             ___flmul@grs 0039                        ??_MediaPlacaVaccum 0066  
                _PROCULUS_VP_Write_String 1984                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 0178                         ?_ADC_Media_10bits 0041  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0058  
                      ??_ADC_Media_10bits 0045                            __end_of___flge 11B7  
                   __end_of_USART_put_int 1984                    __end_of_ADC_Max_10Bits 1E8B  
                             _BAUDCTLbits 0187                            __end_of_strcat 1BF7  
                          __end_of_strcpy 1A1F                            __end_of_strlen 19E4  
                     start_initialization 0015                               __end_of_isr 1345  
                             USART_init@i 0026                              ??_Send_To_MB 0021  
                       ??_I2C_Master_Init 0032                         ??_I2C_Master_Read 0025  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0023  
            __end_of_EEPROM_Write_Integer 1C58          EEPROM_24C1025_Write_Int@chip_add 0055  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00C0  
                   USART_put_buffer@vetor 0025                           ??_Send_Reply_OK 0025  
                                ??___flge 0028                         __size_of_Save_Log 0077  
                    I2C_Master_Wait@tempo 0022                                 __Umul8_16 0800  
                      __end_of_Send_To_MB 1B76          __size_of_Package_Usart_is_for_me 0017  
                         ?_ADC_Max_10Bits 002A                                  ??_strcat 0022  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 003C        EEPROM_24C1025_Write_Buffer@mem_add 002A  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 0037                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         _PROCULUS_VP_Write 07B0  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1923  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 190D  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00D7  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1AE0  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 1003  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1A5D  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 099B                _EEPROM_24C1025_Read_Buffer 0823  
                   MediaPlacaVaccum@Valor 00A0                                  ?_captura 0020  
                               __pstrings 1800                     MediaPlacaVaccum@canal 00A4  
                         _my_delay_ms_WDT 1D29                   _EEPROM_24C1025_Read_Int 1B26  
                 _EEPROM_24C1025_Read_Str 168F                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0054                ??_EEPROM_24C1025_Write_Str 002F  
                     ?_EEPROM_Read_String 0023                 __end_of_PROCULUS_VP_Write 07F7  
              EEPROM_24C1025_Read_Str@cnt 0031                                  _ADC_init 1902  
                        ___lwdiv@quotient 0026                   EEPROM_Write_Integer@ptr 002A  
                        ??_PROCULUS_Delay 0022                       ADC_Max_10Bits@canal 002D  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0037  
                     ADC_Max_10Bits@value 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0022                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 002A                      ??_EEPROM_Read_String 0024  
                               clear_ram0 18E7                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0055  
                  Decodify_Command@OutPut 00C3                           _PT100_TRANSLADA 1810  
                         _Delay_Led_Usart 00DF              EEPROM_24C1025_Read_Byte@data 003D  
             __end_of_EEPROM_Read_Integer 1BA0                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0485                      _EEPROM_Write_Integer 1C26  
          EEPROM_24C1025_Read_Int@mem_add 0038                                 main@reset 006D  
              ??_PROCULUS_VP_Write_String 005D                       I2C_Master_Read@temp 0027  
                 __end_of_PROCULUS_Buzzer 1B02                            _generic_status 00E9  
                              _EECON1bits 018C                                  _Save_Log 10AD  
               ??_EEPROM_24C1025_Fill_All 005A                       __end_of_my_delay_ms 1D29  
            EEPROM_24C1025_Read_Str@range 0033              EEPROM_24C1025_Read_Str@texto 002E  
                 __end_of_my_delay_ms_WDT 1D61                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 000B                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 003C                   _Package_Usart_is_for_me 199B  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002F  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 0034                       USART_put_string@ptr 0023  
                        __size_of_captura 000A                     ?_EEPROM_Write_Integer 0025  
                         _I2C_Master_Init 1BF7                           _I2C_Master_Read 1CBD  
                                ___xxtofl 11B7                __size_of_PROCULUS_VP_Write 0047  
                         _I2C_Master_Wait 1A9D                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 003C                           _I2C_Master_Stop 18EF  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 1E4D  
                                __ptext11 1CF2                                  __ptext20 1C58  
                                __ptext12 18F8                                  __ptext21 1EE1  
                                __ptext13 1BF7                                  __ptext30 1984  
                                __ptext22 1B02                                  __ptext14 1F3E  
                                __ptext31 19CB                                  __ptext23 1B4E  
                                __ptext15 0036                                  __ptext40 1BA0  
                                __ptext32 07B0                                  __ptext24 07F7  
                                __ptext16 1A01                                  __ptext41 1C26  
                                __ptext33 1943                                  __ptext25 1C8A  
                                __ptext17 1BCB                                  __ptext50 19B2  
                                __ptext42 1D99                                  __ptext34 1AE0  
                                __ptext26 10AD                                  __ptext18 1A7D  
                                __ptext51 0823                                  __ptext43 1A5D  
                                __ptext35 1DD5                                  __ptext27 1042  
                                __ptext19 1F9C                                  __ptext60 1923  
                                __ptext52 1918                                  __ptext44 1B76  
                                __ptext36 1D61                                  __ptext28 04BB  
                                __ptext61 1A9D                                  __ptext53 1CBD  
                                __ptext45 1ABE                                  __ptext37 196E  
                                __ptext29 0800                                  __ptext62 1902  
                                __ptext54 1003                                  __ptext46 1434  
                                __ptext38 1933                                  __ptext63 125A  
                                __ptext55 1A3D                                  __ptext47 1958  
                                __ptext39 19E4                                  __ptext56 1527  
                                __ptext48 168F                                  __ptext57 1D29  
                                __ptext49 1B26                                  __ptext58 190D  
                                __ptext59 18EF                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004E                            _PT100_CONSTANT 1814  
                    MediaPlacaVaccum@Temp 00A5                                strcpy@from 0020  
                           __size_of_main 00EF                             __size_of_itoa 0020  
                           __size_of_utoa 0064              EEPROM_24C1025_Fill_All@value 0058  
              PROCULUS_VP_Write_String@vp 005A                   __end_of_PT100_TRANSLADA 1814  
     EEPROM_24C1025_Write_Buffer@sizedata 002E                               _milisegundo 00DD  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 1BA0  
                                log@coeff 1824                  __end_of_I2C_Master_Start 1933  
                __end_of_I2C_Master_Write 1918                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1818                                  isr@tempo 0076  
                                itoa@base 0033                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0025                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0056                         USART_put_int@dado 0051  
                        _EEPROM_Read_Byte 1ABE                               _my_delay_ms 1CF2  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 0800  
                 __end_of_I2C_Master_Init 1C26                   __end_of_I2C_Master_Read 1CF2  
                 __end_of_I2C_Master_Wait 1ABE                   __end_of_I2C_Master_Stop 18F8  
            EEPROM_24C1025_Write_Str@data 002E              EEPROM_24C1025_Write_Str@ctrl 0033  
               __size_of_USART_put_buffer 0024               ?_EEPROM_24C1025_Read_Buffer 002A  
         EEPROM_24C1025_Fill_All@chip_add 005A                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 002A                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0036  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 0033                          ___lldiv@quotient 0029  
                       I2C_Master_Write@d 0023                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0023  
                                strcpy@to 0022                           ___lwmod@counter 0025  
                                stringdir 180A                                  stringtab 1800  
                             _SSPCON2bits 0091                         _EEPROM_Write_Byte 1D99  
          EEPROM_24C1025_Read_Str@mem_add 002A                             ___fladd@signs 005A  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                            ___fladd@aexp 005B                              ___fladd@bexp 005C  
       __size_of_EEPROM_24C1025_Read_Byte 0019                 ?_EEPROM_24C1025_Read_Byte 0038  
                     EEPROM_Read_String@c 0026                      __Umul8_16@multiplier 0028  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0024  
                              _USART_init 1E11  
